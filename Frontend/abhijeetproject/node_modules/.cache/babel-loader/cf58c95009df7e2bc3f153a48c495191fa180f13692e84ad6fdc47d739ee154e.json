{"ast":null,"code":"// src/features/admin/AdminDashboard.jsx\nimport React,{useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{fetchUsers,deleteUser,resetError}from'../../../../features/admin/adminActions';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AdminDashboard=()=>{const dispatch=useDispatch();const{users,loading,error}=useSelector(state=>state.admin);useEffect(()=>{dispatch(fetchUsers());},[dispatch]);const handleDelete=userId=>{dispatch(deleteUser(userId));};const handleResetError=()=>{dispatch(resetError());};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Admin Dashboard\"}),loading&&/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}),error&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Error: \",error]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleResetError,children:\"Clear Error\"})]}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:users.map(user=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:user.name}),/*#__PURE__*/_jsx(\"td\",{children:user.email}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDelete(user._id),children:\"Delete\"})})]},user._id))})]})]});};export default AdminDashboard;// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { fetchAdminData, fetchUserDetailsAction, approveEventAction } from '../../../../features/admin/adminActions';\n// import { selectAdminDashboardData, selectUserDetails, selectAdminLoading, selectAdminError } from '../../../../features/admin/adminSelectors';\n// const AdminDashboard = () => {\n//     const dispatch = useDispatch();\n//     const dashboardData = useSelector(selectAdminDashboardData);\n//     const users = useSelector(selectUserDetails);\n//     const loading = useSelector(selectAdminLoading);\n//     const error = useSelector(selectAdminError);\n//     useEffect(() => {\n//         dispatch(fetchAdminData());\n//         dispatch(fetchUserDetailsAction());\n//     }, [dispatch]);\n//     const handleApproveEvent = (eventId) => {\n//         dispatch(approveEventAction(eventId));\n//     };\n//     if (loading) return <div>Loading...</div>;\n//     if (error) return <div>Error: {error}</div>;\n//     return (\n//         <div>\n//             <h1>Admin Dashboard</h1>\n//             <h2>Event Submissions</h2>\n//             {dashboardData && dashboardData.events.map(event => (\n//                 <div key={event.id}>\n//                     <p>{event.name}</p>\n//                     <button onClick={() => handleApproveEvent(event.id)}>Approve Event</button>\n//                 </div>\n//             ))}\n//             <h2>User Accounts</h2>\n//             {users.map(user => (\n//                 <div key={user.id}>\n//                     <p>{user.name} - {user.email}</p>\n//                 </div>\n//             ))}\n//         </div>\n//     );\n// };\n// export default AdminDashboard;","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","fetchUsers","deleteUser","resetError","jsx","_jsx","jsxs","_jsxs","AdminDashboard","dispatch","users","loading","error","state","admin","handleDelete","userId","handleResetError","children","onClick","map","user","name","email","_id"],"sources":["D:/New folder/Event Hub/Frontend/abhijeetproject/src/components/AA/Admin/Dashboard/AdminDashboard.jsx"],"sourcesContent":["// src/features/admin/AdminDashboard.jsx\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchUsers, deleteUser, resetError } from '../../../../features/admin/adminActions';\r\n\r\nconst AdminDashboard = () => {\r\n    const dispatch = useDispatch();\r\n    const { users, loading, error } = useSelector((state) => state.admin);\r\n\r\n    useEffect(() => {   \r\n        dispatch(fetchUsers());\r\n    }, [dispatch]);\r\n\r\n    const handleDelete = (userId) => {\r\n        dispatch(deleteUser(userId));\r\n    };\r\n\r\n    const handleResetError = () => {\r\n        dispatch(resetError());\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Admin Dashboard</h2>\r\n            {loading && <p>Loading...</p>}\r\n            {error && (\r\n                <div>\r\n                    <p>Error: {error}</p>\r\n                    <button onClick={handleResetError}>Clear Error</button>\r\n                </div>\r\n            )}\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {users.map((user) => (\r\n                        <tr key={user._id}>\r\n                            <td>{user.name}</td>\r\n                            <td>{user.email}</td>\r\n                            <td>\r\n                                <button onClick={() => handleDelete(user._id)}>Delete</button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminDashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { fetchAdminData, fetchUserDetailsAction, approveEventAction } from '../../../../features/admin/adminActions';\r\n// import { selectAdminDashboardData, selectUserDetails, selectAdminLoading, selectAdminError } from '../../../../features/admin/adminSelectors';\r\n\r\n// const AdminDashboard = () => {\r\n//     const dispatch = useDispatch();\r\n//     const dashboardData = useSelector(selectAdminDashboardData);\r\n//     const users = useSelector(selectUserDetails);\r\n//     const loading = useSelector(selectAdminLoading);\r\n//     const error = useSelector(selectAdminError);\r\n\r\n//     useEffect(() => {\r\n//         dispatch(fetchAdminData());\r\n//         dispatch(fetchUserDetailsAction());\r\n//     }, [dispatch]);\r\n\r\n//     const handleApproveEvent = (eventId) => {\r\n//         dispatch(approveEventAction(eventId));\r\n//     };\r\n\r\n//     if (loading) return <div>Loading...</div>;\r\n//     if (error) return <div>Error: {error}</div>;\r\n\r\n//     return (\r\n//         <div>\r\n//             <h1>Admin Dashboard</h1>\r\n//             <h2>Event Submissions</h2>\r\n//             {dashboardData && dashboardData.events.map(event => (\r\n//                 <div key={event.id}>\r\n//                     <p>{event.name}</p>\r\n//                     <button onClick={() => handleApproveEvent(event.id)}>Approve Event</button>\r\n//                 </div>\r\n//             ))}\r\n\r\n//             <h2>User Accounts</h2>\r\n//             {users.map(user => (\r\n//                 <div key={user.id}>\r\n//                     <p>{user.name} - {user.email}</p>\r\n//                 </div>\r\n//             ))}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default AdminDashboard;\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,UAAU,CAAEC,UAAU,CAAEC,UAAU,KAAQ,yCAAyC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE7F,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAAC,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAEW,KAAK,CAAEC,OAAO,CAAEC,KAAM,CAAC,CAAGZ,WAAW,CAAEa,KAAK,EAAKA,KAAK,CAACC,KAAK,CAAC,CAErEhB,SAAS,CAAC,IAAM,CACZW,QAAQ,CAACR,UAAU,CAAC,CAAC,CAAC,CAC1B,CAAC,CAAE,CAACQ,QAAQ,CAAC,CAAC,CAEd,KAAM,CAAAM,YAAY,CAAIC,MAAM,EAAK,CAC7BP,QAAQ,CAACP,UAAU,CAACc,MAAM,CAAC,CAAC,CAChC,CAAC,CAED,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CAC3BR,QAAQ,CAACN,UAAU,CAAC,CAAC,CAAC,CAC1B,CAAC,CAED,mBACII,KAAA,QAAAW,QAAA,eACIb,IAAA,OAAAa,QAAA,CAAI,iBAAe,CAAI,CAAC,CACvBP,OAAO,eAAIN,IAAA,MAAAa,QAAA,CAAG,YAAU,CAAG,CAAC,CAC5BN,KAAK,eACFL,KAAA,QAAAW,QAAA,eACIX,KAAA,MAAAW,QAAA,EAAG,SAAO,CAACN,KAAK,EAAI,CAAC,cACrBP,IAAA,WAAQc,OAAO,CAAEF,gBAAiB,CAAAC,QAAA,CAAC,aAAW,CAAQ,CAAC,EACtD,CACR,cACDX,KAAA,UAAAW,QAAA,eACIb,IAAA,UAAAa,QAAA,cACIX,KAAA,OAAAW,QAAA,eACIb,IAAA,OAAAa,QAAA,CAAI,MAAI,CAAI,CAAC,cACbb,IAAA,OAAAa,QAAA,CAAI,OAAK,CAAI,CAAC,cACdb,IAAA,OAAAa,QAAA,CAAI,SAAO,CAAI,CAAC,EAChB,CAAC,CACF,CAAC,cACRb,IAAA,UAAAa,QAAA,CACKR,KAAK,CAACU,GAAG,CAAEC,IAAI,eACZd,KAAA,OAAAW,QAAA,eACIb,IAAA,OAAAa,QAAA,CAAKG,IAAI,CAACC,IAAI,CAAK,CAAC,cACpBjB,IAAA,OAAAa,QAAA,CAAKG,IAAI,CAACE,KAAK,CAAK,CAAC,cACrBlB,IAAA,OAAAa,QAAA,cACIb,IAAA,WAAQc,OAAO,CAAEA,CAAA,GAAMJ,YAAY,CAACM,IAAI,CAACG,GAAG,CAAE,CAAAN,QAAA,CAAC,QAAM,CAAQ,CAAC,CAC9D,CAAC,GALAG,IAAI,CAACG,GAMV,CACP,CAAC,CACC,CAAC,EACL,CAAC,EACP,CAAC,CAEd,CAAC,CAED,cAAe,CAAAhB,cAAc,CAiB7B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}