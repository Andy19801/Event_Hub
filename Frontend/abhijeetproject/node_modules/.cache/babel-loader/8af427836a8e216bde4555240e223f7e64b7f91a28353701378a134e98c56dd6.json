{"ast":null,"code":"var _jsxFileName = \"E:\\\\Final Year project\\\\Event Hub\\\\Frontend\\\\abhijeetproject\\\\src\\\\main\\\\Signin\\\\Signin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Swal from 'sweetalert2'; // Import SweetAlert\nimport { useNavigate } from 'react-router-dom';\nimport './Signin.css'; // Import the CSS file for styling\nimport { HiEye, HiEyeOff } from 'react-icons/hi'; // Import eye icons for show/hide functionality\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signin = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    role: 'user' // Default role set to 'user'\n  });\n  const [isChecked, setIsChecked] = useState(false); // State to track checkbox status\n  const [passwordVisible, setPasswordVisible] = useState(false); // State to track password visibility\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleCheckboxChange = e => {\n    setIsChecked(e.target.checked);\n  };\n  const togglePasswordVisibility = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Check if any of the input fields are empty\n    if (!formData.name || !formData.email || !formData.password) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Validation Error',\n        text: 'Please fill in all fields.'\n      });\n      return;\n    }\n\n    // Password validation\n    const passwordRegex = /^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,}$/;\n    if (!passwordRegex.test(formData.password)) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Validation Error',\n        text: 'Password must contain at least one alphabetic character, one digit, one special character, and be at least 8 characters long.'\n      });\n      return;\n    }\n\n    // Email validation\n    const emailRegex = /\\S+@\\S+\\.\\S+/;\n    if (!emailRegex.test(formData.email)) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Validation Error',\n        text: 'Please enter a valid email address.'\n      });\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:3300/api/auth/signin', formData);\n      console.log('API response:', response.data);\n      if (response.data) {\n        Swal.fire({\n          icon: 'success',\n          title: 'Registration Successful',\n          text: 'You have registered successfully.'\n        });\n        navigate('/login'); // Redirect to login page after successful registration\n      } else {\n        Swal.fire({\n          icon: 'warning',\n          title: 'Registration Failed',\n          text: 'Something went wrong...'\n        });\n      }\n    } catch (error) {\n      console.error('Error submitting form:', error);\n      Swal.fire({\n        icon: 'error',\n        title: 'Registration Error',\n        text: 'An error occurred while trying to register. Please try again later.'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginsignup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginsignup-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"loginsignup-fields\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Your Name\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email Address\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: passwordVisible ? 'text' : 'password',\n            placeholder: \"Password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"eye-button\",\n            onClick: togglePasswordVisibility,\n            children: passwordVisible ? /*#__PURE__*/_jsxDEV(HiEyeOff, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 48\n            }, this) : /*#__PURE__*/_jsxDEV(HiEye, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 63\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"role\",\n          value: formData.role,\n          onChange: handleChange,\n          className: \"loginsignup-role\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"user\",\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"event-owner\",\n            children: \"Event Owner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"admin\",\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loginsignup-login\",\n          children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/login\",\n            children: \"Login here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginsignup-agree\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"agree\",\n            id: \"agree\",\n            checked: isChecked,\n            onChange: handleCheckboxChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"agree\",\n            children: \"By continuing, I agree to the terms of use & privacy policy.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !isChecked,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n_s(Signin, \"asY87oZ0mL5/2bCKEJXL9aedHoY=\", false, function () {\n  return [useNavigate];\n});\n_c = Signin;\nexport default Signin;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import Swal from 'sweetalert2'; // Import SweetAlert\n// import { useNavigate } from 'react-router-dom';\n// import './Signin.css'; // Import the CSS file for styling\n// import { HiEye, HiEyeOff } from 'react-icons/hi'; // Import eye icons for show/hide functionality\n\n// const Signin = () => {\n//     const [formData, setFormData] = useState({\n//         name: '',\n//         email: '',\n//         password: '',\n//         role: 'user', // Default role set to 'user'\n//     });\n\n//     const [isChecked, setIsChecked] = useState(false); // State to track checkbox status\n//     const [passwordVisible, setPasswordVisible] = useState(false); // State to track password visibility\n//     const navigate = useNavigate();\n\n//     const handleChange = (e) => {\n//         const { name, value } = e.target;\n//         setFormData({\n//             ...formData,\n//             [name]: value,\n//         });\n//     };\n\n//     const handleCheckboxChange = (e) => {\n//         setIsChecked(e.target.checked);\n//     };\n\n//     const togglePasswordVisibility = () => {\n//         setPasswordVisible(!passwordVisible);\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n\n//         // Check if any of the input fields are empty\n//         if (!formData.name || !formData.email || !formData.password) {\n//             Swal.fire({\n//                 icon: 'error',\n//                 title: 'Validation Error',\n//                 text: 'Please fill in all fields.',\n//             });\n//             return;\n//         }\n\n//         // Password validation\n//         const passwordRegex = /^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,}$/;\n//         if (!passwordRegex.test(formData.password)) {\n//             Swal.fire({\n//                 icon: 'error',\n//                 title: 'Validation Error',\n//                 text: 'Password must contain at least one alphabetic character, one digit, one special character, and be at least 8 characters long.',\n//             });\n//             return;\n//         }\n\n//         // Email validation\n//         const emailRegex = /\\S+@\\S+\\.\\S+/;\n//         if (!emailRegex.test(formData.email)) {\n//             Swal.fire({\n//                 icon: 'error',\n//                 title: 'Validation Error',\n//                 text: 'Please enter a valid email address.',\n//             });\n//             return;\n//         }\n\n//         try {\n//             const response = await axios.post('http://localhost:3000/api/auth/signin', formData);\n//             console.log('API response:', response.data);\n\n//             if (response.data) {\n//                 Swal.fire({\n//                     icon: 'success',\n//                     title: 'Registration Successful',\n//                     text: 'You have registered successfully.',\n//                 });\n//                 navigate('/login'); // Redirect to login page or another route after successful registration\n//             } else {\n//                 Swal.fire({\n//                     icon: 'warning',\n//                     title: 'Registration Failed',\n//                     text: 'Something went wrong...',\n//                 });\n//             }\n//         } catch (error) {\n//             console.error('Error submitting form:', error);\n//             Swal.fire({\n//                 icon: 'error',\n//                 title: 'Registration Error',\n//                 text: 'An error occurred while trying to register. Please try again later.',\n//             });\n//         }\n//     };\n\n//     return (\n//         <div className=\"loginsignup\">\n//             <div className=\"loginsignup-container\">\n//                 <h1>Register</h1>\n//                 <form className=\"loginsignup-fields\" onSubmit={handleSubmit}>\n//                     <input\n//                         type=\"text\"\n//                         placeholder=\"Your Name\"\n//                         name=\"name\"\n//                         value={formData.name}\n//                         onChange={handleChange}\n//                     />\n//                     <input\n//                         type=\"email\"\n//                         placeholder=\"Email Address\"\n//                         name=\"email\"\n//                         value={formData.email}\n//                         onChange={handleChange}\n//                     />\n//                     <div className=\"password-container\">\n//                         <input\n//                             type={passwordVisible ? 'text' : 'password'}\n//                             placeholder=\"Password\"\n//                             name=\"password\"\n//                             value={formData.password}\n//                             onChange={handleChange}\n//                         />\n//                         <button\n//                             type=\"button\"\n//                             className=\"eye-button\"\n//                             onClick={togglePasswordVisibility}\n//                         >\n//                             {passwordVisible ? <HiEyeOff /> : <HiEye />}\n//                         </button>\n//                     </div>\n\n//                     {/* Role Selection Dropdown */}\n//                     <select\n//                         name=\"role\"\n//                         value={formData.role}\n//                         onChange={handleChange}\n//                         className=\"loginsignup-role\"\n//                     >\n//                         <option value=\"user\">User</option>\n//                         <option value=\"event-owner\">Event Owner</option>\n//                         <option value=\"admin\">Admin</option>\n//                     </select>\n\n//                     <p className=\"loginsignup-login\">\n//                         Already have an account? <a href=\"/login\">Login here</a>\n//                     </p>\n//                     <div className=\"loginsignup-agree\">\n//                         <input\n//                             type=\"checkbox\"\n//                             name=\"agree\"\n//                             id=\"agree\"\n//                             checked={isChecked}\n//                             onChange={handleCheckboxChange}\n//                         />\n//                         <label htmlFor=\"agree\">\n//                             By continuing, I agree to the terms of use & privacy policy.\n//                         </label>\n//                     </div>\n//                     <button type=\"submit\" disabled={!isChecked}>\n//                         Register\n//                     </button>\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default Signin;\n\n// // import React, { useState } from 'react';\n// // import axios from 'axios';\n// // import Swal from 'sweetalert2'; // Import SweetAlert\n// // import { useNavigate } from 'react-router-dom';\n// // import './Signin.css'; // Import the CSS file for styling\n// // import { HiEye, HiEyeOff } from 'react-icons/hi'; // Import eye icons for show/hide functionality\n\n// // const Signin = () => {\n// //     const [formData, setFormData] = useState({\n// //         name: '',\n// //         email: '',\n// //         password: '',\n// //     });\n\n// //     const [isChecked, setIsChecked] = useState(false); // State to track checkbox status\n// //     const [passwordVisible, setPasswordVisible] = useState(false); // State to track password visibility\n// //     const navigate = useNavigate();\n\n// //     const handleChange = (e) => {\n// //         const { name, value } = e.target;\n// //         setFormData({\n// //             ...formData,\n// //             [name]: value,\n// //         });\n// //     };\n\n// //     const handleCheckboxChange = (e) => {\n// //         setIsChecked(e.target.checked);\n// //     };\n\n// //     const togglePasswordVisibility = () => {\n// //         setPasswordVisible(!passwordVisible);\n// //     };\n\n// //     const handleSubmit = async (e) => {\n// //         e.preventDefault();\n\n// //         // Check if any of the input fields are empty\n// //         if (!formData.name || !formData.email || !formData.password) {\n// //             Swal.fire({\n// //                 icon: 'error',\n// //                 title: 'Validation Error',\n// //                 text: 'Please fill in all fields.',\n// //             });\n// //             return;\n// //         }\n\n// //         // Password validation\n// //         const passwordRegex = /^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,}$/;\n// //         if (!passwordRegex.test(formData.password)) {\n// //             Swal.fire({\n// //                 icon: 'error',\n// //                 title: 'Validation Error',\n// //                 text: 'Password must contain at least one alphabetic character, one digit, one special character, and be at least 8 characters long.',\n// //             });\n// //             return;\n// //         }\n\n// //         // Email validation\n// //         const emailRegex = /\\S+@\\S+\\.\\S+/;\n// //         if (!emailRegex.test(formData.email)) {\n// //             Swal.fire({\n// //                 icon: 'error',\n// //                 title: 'Validation Error',\n// //                 text: 'Please enter a valid email address.',\n// //             });\n// //             return;\n// //         }\n\n// //         try {\n// //             const response = await axios.post('http://localhost:3000/api/auth/signin', formData);\n// //             console.log('API response:', response.data);\n\n// //             if (response.data) {\n// //                 Swal.fire({\n// //                     icon: 'success',\n// //                     title: 'Registration Successful',\n// //                     text: 'You have registered successfully.',\n// //                 });\n// //                 navigate('/login'); // Redirect to login page or another route after successful registration\n// //             } else {\n// //                 Swal.fire({\n// //                     icon: 'warning',\n// //                     title: 'Registration Failed',\n// //                     text: 'Something went wrong...',\n// //                 });\n// //             }\n// //         } catch (error) {\n// //             console.error('Error submitting form:', error);\n// //             Swal.fire({\n// //                 icon: 'error',\n// //                 title: 'Registration Error',\n// //                 text: 'An error occurred while trying to register. Please try again later.',\n// //             });\n// //         }\n// //     };\n\n// //     return (\n// //         <div className=\"loginsignup\">\n// //             <div className=\"loginsignup-container\">\n// //                 <h1>Register</h1>\n// //                 <form className=\"loginsignup-fields\" onSubmit={handleSubmit}>\n// //                     <input\n// //                         type=\"text\"\n// //                         placeholder=\"Your Name\"\n// //                         name=\"name\"\n// //                         value={formData.name}\n// //                         onChange={handleChange}\n// //                     />\n// //                     <input\n// //                         type=\"email\"\n// //                         placeholder=\"Email Address\"\n// //                         name=\"email\"\n// //                         value={formData.email}\n// //                         onChange={handleChange}\n// //                     />\n// //                     <div className=\"password-container\">\n// //                         <input\n// //                             type={passwordVisible ? 'text' : 'password'}\n// //                             placeholder=\"Password\"\n// //                             name=\"password\"\n// //                             value={formData.password}\n// //                             onChange={handleChange}\n// //                         />\n// //                         <button\n// //                             type=\"button\"\n// //                             className=\"eye-button\"\n// //                             onClick={togglePasswordVisibility}\n// //                         >\n// //                             {passwordVisible ? <HiEyeOff /> : <HiEye />}\n// //                         </button>\n// //                     </div>\n// //                     <p className=\"loginsignup-login\">\n// //                         Already have an account? <a href=\"/login\">Login here</a>\n// //                     </p>\n// //                     <div className=\"loginsignup-agree\">\n// //                         <input\n// //                             type=\"checkbox\"\n// //                             name=\"agree\"\n// //                             id=\"agree\"\n// //                             checked={isChecked}\n// //                             onChange={handleCheckboxChange}\n// //                         />\n// //                         <label htmlFor=\"agree\">\n// //                             By continuing, I agree to the terms of use & privacy policy.\n// //                         </label>\n// //                     </div>\n// //                     <button type=\"submit\" disabled={!isChecked}>\n// //                         Register\n// //                     </button>\n// //                 </form>\n// //             </div>\n// //         </div>\n// //     );\n// // };\n\n// // export default Signin;\nvar _c;\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"names":["React","useState","axios","Swal","useNavigate","HiEye","HiEyeOff","jsxDEV","_jsxDEV","Signin","_s","formData","setFormData","name","email","password","role","isChecked","setIsChecked","passwordVisible","setPasswordVisible","navigate","handleChange","e","value","target","handleCheckboxChange","checked","togglePasswordVisibility","handleSubmit","preventDefault","fire","icon","title","text","passwordRegex","test","emailRegex","response","post","console","log","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","onClick","href","id","htmlFor","disabled","_c","$RefreshReg$"],"sources":["E:/Final Year project/Event Hub/Frontend/abhijeetproject/src/main/Signin/Signin.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2'; // Import SweetAlert\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Signin.css'; // Import the CSS file for styling\r\nimport { HiEye, HiEyeOff } from 'react-icons/hi'; // Import eye icons for show/hide functionality\r\n\r\nconst Signin = () => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        role: 'user', // Default role set to 'user'\r\n    });\r\n\r\n    const [isChecked, setIsChecked] = useState(false); // State to track checkbox status\r\n    const [passwordVisible, setPasswordVisible] = useState(false); // State to track password visibility\r\n    const navigate = useNavigate();\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleCheckboxChange = (e) => {\r\n        setIsChecked(e.target.checked);\r\n    };\r\n\r\n    const togglePasswordVisibility = () => {\r\n        setPasswordVisible(!passwordVisible);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Check if any of the input fields are empty\r\n        if (!formData.name || !formData.email || !formData.password) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Validation Error',\r\n                text: 'Please fill in all fields.',\r\n            });\r\n            return;\r\n        }\r\n\r\n        // Password validation\r\n        const passwordRegex = /^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,}$/;\r\n        if (!passwordRegex.test(formData.password)) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Validation Error',\r\n                text: 'Password must contain at least one alphabetic character, one digit, one special character, and be at least 8 characters long.',\r\n            });\r\n            return;\r\n        }\r\n\r\n        // Email validation\r\n        const emailRegex = /\\S+@\\S+\\.\\S+/;\r\n        if (!emailRegex.test(formData.email)) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Validation Error',\r\n                text: 'Please enter a valid email address.',\r\n            });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:3300/api/auth/signin', formData);\r\n            console.log('API response:', response.data);\r\n            \r\n            if (response.data) {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Registration Successful',\r\n                    text: 'You have registered successfully.',\r\n                });\r\n                navigate('/login'); // Redirect to login page after successful registration\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'warning',\r\n                    title: 'Registration Failed',\r\n                    text: 'Something went wrong...',\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error('Error submitting form:', error);\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Registration Error',\r\n                text: 'An error occurred while trying to register. Please try again later.',\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"loginsignup\">\r\n            <div className=\"loginsignup-container\">\r\n                <h1>Register</h1>\r\n                <form className=\"loginsignup-fields\" onSubmit={handleSubmit}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Your Name\"\r\n                        name=\"name\"\r\n                        value={formData.name}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Email Address\"\r\n                        name=\"email\"\r\n                        value={formData.email}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <div className=\"password-container\">\r\n                        <input\r\n                            type={passwordVisible ? 'text' : 'password'}\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            value={formData.password}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"eye-button\"\r\n                            onClick={togglePasswordVisibility}\r\n                        >\r\n                            {passwordVisible ? <HiEyeOff /> : <HiEye />}\r\n                        </button>\r\n                    </div>\r\n\r\n                    {/* Role Selection Dropdown */}\r\n                    <select\r\n                        name=\"role\"\r\n                        value={formData.role}\r\n                        onChange={handleChange}\r\n                        className=\"loginsignup-role\"\r\n                    >\r\n                        <option value=\"user\">User</option>\r\n                        <option value=\"event-owner\">Event Owner</option>\r\n                        <option value=\"admin\">Admin</option>\r\n                    </select>\r\n\r\n                    <p className=\"loginsignup-login\">\r\n                        Already have an account? <a href=\"/login\">Login here</a>\r\n                    </p>\r\n                    <div className=\"loginsignup-agree\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"agree\"\r\n                            id=\"agree\"\r\n                            checked={isChecked}\r\n                            onChange={handleCheckboxChange}\r\n                        />\r\n                        <label htmlFor=\"agree\">\r\n                            By continuing, I agree to the terms of use & privacy policy.\r\n                        </label>\r\n                    </div>\r\n                    <button type=\"submit\" disabled={!isChecked}>\r\n                        Register\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Signin;\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import Swal from 'sweetalert2'; // Import SweetAlert\r\n// import { useNavigate } from 'react-router-dom';\r\n// import './Signin.css'; // Import the CSS file for styling\r\n// import { HiEye, HiEyeOff } from 'react-icons/hi'; // Import eye icons for show/hide functionality\r\n\r\n// const Signin = () => {\r\n//     const [formData, setFormData] = useState({\r\n//         name: '',\r\n//         email: '',\r\n//         password: '',\r\n//         role: 'user', // Default role set to 'user'\r\n//     });\r\n\r\n//     const [isChecked, setIsChecked] = useState(false); // State to track checkbox status\r\n//     const [passwordVisible, setPasswordVisible] = useState(false); // State to track password visibility\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setFormData({\r\n//             ...formData,\r\n//             [name]: value,\r\n//         });\r\n//     };\r\n\r\n//     const handleCheckboxChange = (e) => {\r\n//         setIsChecked(e.target.checked);\r\n//     };\r\n\r\n//     const togglePasswordVisibility = () => {\r\n//         setPasswordVisible(!passwordVisible);\r\n//     };\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n\r\n//         // Check if any of the input fields are empty\r\n//         if (!formData.name || !formData.email || !formData.password) {\r\n//             Swal.fire({\r\n//                 icon: 'error',\r\n//                 title: 'Validation Error',\r\n//                 text: 'Please fill in all fields.',\r\n//             });\r\n//             return;\r\n//         }\r\n\r\n//         // Password validation\r\n//         const passwordRegex = /^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,}$/;\r\n//         if (!passwordRegex.test(formData.password)) {\r\n//             Swal.fire({\r\n//                 icon: 'error',\r\n//                 title: 'Validation Error',\r\n//                 text: 'Password must contain at least one alphabetic character, one digit, one special character, and be at least 8 characters long.',\r\n//             });\r\n//             return;\r\n//         }\r\n\r\n//         // Email validation\r\n//         const emailRegex = /\\S+@\\S+\\.\\S+/;\r\n//         if (!emailRegex.test(formData.email)) {\r\n//             Swal.fire({\r\n//                 icon: 'error',\r\n//                 title: 'Validation Error',\r\n//                 text: 'Please enter a valid email address.',\r\n//             });\r\n//             return;\r\n//         }\r\n\r\n//         try {\r\n//             const response = await axios.post('http://localhost:3000/api/auth/signin', formData);\r\n//             console.log('API response:', response.data);\r\n            \r\n//             if (response.data) {\r\n//                 Swal.fire({\r\n//                     icon: 'success',\r\n//                     title: 'Registration Successful',\r\n//                     text: 'You have registered successfully.',\r\n//                 });\r\n//                 navigate('/login'); // Redirect to login page or another route after successful registration\r\n//             } else {\r\n//                 Swal.fire({\r\n//                     icon: 'warning',\r\n//                     title: 'Registration Failed',\r\n//                     text: 'Something went wrong...',\r\n//                 });\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('Error submitting form:', error);\r\n//             Swal.fire({\r\n//                 icon: 'error',\r\n//                 title: 'Registration Error',\r\n//                 text: 'An error occurred while trying to register. Please try again later.',\r\n//             });\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"loginsignup\">\r\n//             <div className=\"loginsignup-container\">\r\n//                 <h1>Register</h1>\r\n//                 <form className=\"loginsignup-fields\" onSubmit={handleSubmit}>\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         placeholder=\"Your Name\"\r\n//                         name=\"name\"\r\n//                         value={formData.name}\r\n//                         onChange={handleChange}\r\n//                     />\r\n//                     <input\r\n//                         type=\"email\"\r\n//                         placeholder=\"Email Address\"\r\n//                         name=\"email\"\r\n//                         value={formData.email}\r\n//                         onChange={handleChange}\r\n//                     />\r\n//                     <div className=\"password-container\">\r\n//                         <input\r\n//                             type={passwordVisible ? 'text' : 'password'}\r\n//                             placeholder=\"Password\"\r\n//                             name=\"password\"\r\n//                             value={formData.password}\r\n//                             onChange={handleChange}\r\n//                         />\r\n//                         <button\r\n//                             type=\"button\"\r\n//                             className=\"eye-button\"\r\n//                             onClick={togglePasswordVisibility}\r\n//                         >\r\n//                             {passwordVisible ? <HiEyeOff /> : <HiEye />}\r\n//                         </button>\r\n//                     </div>\r\n\r\n//                     {/* Role Selection Dropdown */}\r\n//                     <select\r\n//                         name=\"role\"\r\n//                         value={formData.role}\r\n//                         onChange={handleChange}\r\n//                         className=\"loginsignup-role\"\r\n//                     >\r\n//                         <option value=\"user\">User</option>\r\n//                         <option value=\"event-owner\">Event Owner</option>\r\n//                         <option value=\"admin\">Admin</option>\r\n//                     </select>\r\n\r\n//                     <p className=\"loginsignup-login\">\r\n//                         Already have an account? <a href=\"/login\">Login here</a>\r\n//                     </p>\r\n//                     <div className=\"loginsignup-agree\">\r\n//                         <input\r\n//                             type=\"checkbox\"\r\n//                             name=\"agree\"\r\n//                             id=\"agree\"\r\n//                             checked={isChecked}\r\n//                             onChange={handleCheckboxChange}\r\n//                         />\r\n//                         <label htmlFor=\"agree\">\r\n//                             By continuing, I agree to the terms of use & privacy policy.\r\n//                         </label>\r\n//                     </div>\r\n//                     <button type=\"submit\" disabled={!isChecked}>\r\n//                         Register\r\n//                     </button>\r\n//                 </form>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Signin;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // import React, { useState } from 'react';\r\n// // import axios from 'axios';\r\n// // import Swal from 'sweetalert2'; // Import SweetAlert\r\n// // import { useNavigate } from 'react-router-dom';\r\n// // import './Signin.css'; // Import the CSS file for styling\r\n// // import { HiEye, HiEyeOff } from 'react-icons/hi'; // Import eye icons for show/hide functionality\r\n\r\n// // const Signin = () => {\r\n// //     const [formData, setFormData] = useState({\r\n// //         name: '',\r\n// //         email: '',\r\n// //         password: '',\r\n// //     });\r\n\r\n// //     const [isChecked, setIsChecked] = useState(false); // State to track checkbox status\r\n// //     const [passwordVisible, setPasswordVisible] = useState(false); // State to track password visibility\r\n// //     const navigate = useNavigate();\r\n\r\n// //     const handleChange = (e) => {\r\n// //         const { name, value } = e.target;\r\n// //         setFormData({\r\n// //             ...formData,\r\n// //             [name]: value,\r\n// //         });\r\n// //     };\r\n\r\n// //     const handleCheckboxChange = (e) => {\r\n// //         setIsChecked(e.target.checked);\r\n// //     };\r\n\r\n// //     const togglePasswordVisibility = () => {\r\n// //         setPasswordVisible(!passwordVisible);\r\n// //     };\r\n\r\n// //     const handleSubmit = async (e) => {\r\n// //         e.preventDefault();\r\n\r\n// //         // Check if any of the input fields are empty\r\n// //         if (!formData.name || !formData.email || !formData.password) {\r\n// //             Swal.fire({\r\n// //                 icon: 'error',\r\n// //                 title: 'Validation Error',\r\n// //                 text: 'Please fill in all fields.',\r\n// //             });\r\n// //             return;\r\n// //         }\r\n\r\n// //         // Password validation\r\n// //         const passwordRegex = /^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,}$/;\r\n// //         if (!passwordRegex.test(formData.password)) {\r\n// //             Swal.fire({\r\n// //                 icon: 'error',\r\n// //                 title: 'Validation Error',\r\n// //                 text: 'Password must contain at least one alphabetic character, one digit, one special character, and be at least 8 characters long.',\r\n// //             });\r\n// //             return;\r\n// //         }\r\n\r\n// //         // Email validation\r\n// //         const emailRegex = /\\S+@\\S+\\.\\S+/;\r\n// //         if (!emailRegex.test(formData.email)) {\r\n// //             Swal.fire({\r\n// //                 icon: 'error',\r\n// //                 title: 'Validation Error',\r\n// //                 text: 'Please enter a valid email address.',\r\n// //             });\r\n// //             return;\r\n// //         }\r\n\r\n// //         try {\r\n// //             const response = await axios.post('http://localhost:3000/api/auth/signin', formData);\r\n// //             console.log('API response:', response.data);\r\n            \r\n// //             if (response.data) {\r\n// //                 Swal.fire({\r\n// //                     icon: 'success',\r\n// //                     title: 'Registration Successful',\r\n// //                     text: 'You have registered successfully.',\r\n// //                 });\r\n// //                 navigate('/login'); // Redirect to login page or another route after successful registration\r\n// //             } else {\r\n// //                 Swal.fire({\r\n// //                     icon: 'warning',\r\n// //                     title: 'Registration Failed',\r\n// //                     text: 'Something went wrong...',\r\n// //                 });\r\n// //             }\r\n// //         } catch (error) {\r\n// //             console.error('Error submitting form:', error);\r\n// //             Swal.fire({\r\n// //                 icon: 'error',\r\n// //                 title: 'Registration Error',\r\n// //                 text: 'An error occurred while trying to register. Please try again later.',\r\n// //             });\r\n// //         }\r\n// //     };\r\n\r\n// //     return (\r\n// //         <div className=\"loginsignup\">\r\n// //             <div className=\"loginsignup-container\">\r\n// //                 <h1>Register</h1>\r\n// //                 <form className=\"loginsignup-fields\" onSubmit={handleSubmit}>\r\n// //                     <input\r\n// //                         type=\"text\"\r\n// //                         placeholder=\"Your Name\"\r\n// //                         name=\"name\"\r\n// //                         value={formData.name}\r\n// //                         onChange={handleChange}\r\n// //                     />\r\n// //                     <input\r\n// //                         type=\"email\"\r\n// //                         placeholder=\"Email Address\"\r\n// //                         name=\"email\"\r\n// //                         value={formData.email}\r\n// //                         onChange={handleChange}\r\n// //                     />\r\n// //                     <div className=\"password-container\">\r\n// //                         <input\r\n// //                             type={passwordVisible ? 'text' : 'password'}\r\n// //                             placeholder=\"Password\"\r\n// //                             name=\"password\"\r\n// //                             value={formData.password}\r\n// //                             onChange={handleChange}\r\n// //                         />\r\n// //                         <button\r\n// //                             type=\"button\"\r\n// //                             className=\"eye-button\"\r\n// //                             onClick={togglePasswordVisibility}\r\n// //                         >\r\n// //                             {passwordVisible ? <HiEyeOff /> : <HiEye />}\r\n// //                         </button>\r\n// //                     </div>\r\n// //                     <p className=\"loginsignup-login\">\r\n// //                         Already have an account? <a href=\"/login\">Login here</a>\r\n// //                     </p>\r\n// //                     <div className=\"loginsignup-agree\">\r\n// //                         <input\r\n// //                             type=\"checkbox\"\r\n// //                             name=\"agree\"\r\n// //                             id=\"agree\"\r\n// //                             checked={isChecked}\r\n// //                             onChange={handleCheckboxChange}\r\n// //                         />\r\n// //                         <label htmlFor=\"agree\">\r\n// //                             By continuing, I agree to the terms of use & privacy policy.\r\n// //                         </label>\r\n// //                     </div>\r\n// //                     <button type=\"submit\" disabled={!isChecked}>\r\n// //                         Register\r\n// //                     </button>\r\n// //                 </form>\r\n// //             </div>\r\n// //         </div>\r\n// //     );\r\n// // };\r\n\r\n// // export default Signin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}