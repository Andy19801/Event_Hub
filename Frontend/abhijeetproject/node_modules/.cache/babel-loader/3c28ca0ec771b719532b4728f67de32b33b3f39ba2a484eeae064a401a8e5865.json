{"ast":null,"code":"// import axios from 'axios';\n// import { \n//     FETCH_USERS_REQUEST, \n//     FETCH_USERS_SUCCESS, \n//     FETCH_USERS_FAILURE,\n//     DELETE_USER_REQUEST,\n//     DELETE_USER_SUCCESS,\n//     DELETE_USER_FAILURE,\n//     RESET_ERROR\n// } from './adminTypes';\n\n// // Action to fetch users\n// export const fetchUsers = () => async (dispatch) => {\n//     try {\n//         dispatch({ type: FETCH_USERS_REQUEST });\n\n//         const { data } = await axios.get('http://localhost:5000/api/admin/users', {\n//             headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n//         });\n\n//         dispatch({\n//             type: FETCH_USERS_SUCCESS,\n//             payload: data,\n//         });\n//     } catch (error) {\n//         dispatch({\n//             type: FETCH_USERS_FAILURE,\n//             payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n//         });\n//     }\n// };\n\n// // Action to delete a user\n// export const deleteUser = (id) => async (dispatch) => {\n//     try {\n//         dispatch({ type: DELETE_USER_REQUEST });\n\n//         await axios.delete(`http://localhost:5000/api/admin/users/${id}`, {\n//             headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n//         });\n\n//         dispatch({\n//             type: DELETE_USER_SUCCESS,\n//             payload: id,  // Send back the deleted user ID to update the state\n//         });\n//     } catch (error) {\n//         dispatch({\n//             type: DELETE_USER_FAILURE,\n//             payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n//         });\n//     }\n// };\n\n// // Action to reset error\n// export const resetError = () => (dispatch) => {\n//     dispatch({ type: RESET_ERROR });\n// };","map":{"version":3,"names":[],"sources":["E:/Final Year project/Event Hub/Frontend/abhijeetproject/src/features/admin/adminActions.js"],"sourcesContent":["// import axios from 'axios';\r\n// import { \r\n//     FETCH_USERS_REQUEST, \r\n//     FETCH_USERS_SUCCESS, \r\n//     FETCH_USERS_FAILURE,\r\n//     DELETE_USER_REQUEST,\r\n//     DELETE_USER_SUCCESS,\r\n//     DELETE_USER_FAILURE,\r\n//     RESET_ERROR\r\n// } from './adminTypes';\r\n\r\n// // Action to fetch users\r\n// export const fetchUsers = () => async (dispatch) => {\r\n//     try {\r\n//         dispatch({ type: FETCH_USERS_REQUEST });\r\n\r\n//         const { data } = await axios.get('http://localhost:5000/api/admin/users', {\r\n//             headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\r\n//         });\r\n\r\n//         dispatch({\r\n//             type: FETCH_USERS_SUCCESS,\r\n//             payload: data,\r\n//         });\r\n//     } catch (error) {\r\n//         dispatch({\r\n//             type: FETCH_USERS_FAILURE,\r\n//             payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n//         });\r\n//     }\r\n// };\r\n\r\n// // Action to delete a user\r\n// export const deleteUser = (id) => async (dispatch) => {\r\n//     try {\r\n//         dispatch({ type: DELETE_USER_REQUEST });\r\n\r\n//         await axios.delete(`http://localhost:5000/api/admin/users/${id}`, {\r\n//             headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\r\n//         });\r\n\r\n//         dispatch({\r\n//             type: DELETE_USER_SUCCESS,\r\n//             payload: id,  // Send back the deleted user ID to update the state\r\n//         });\r\n//     } catch (error) {\r\n//         dispatch({\r\n//             type: DELETE_USER_FAILURE,\r\n//             payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n//         });\r\n//     }\r\n// };\r\n\r\n// // Action to reset error\r\n// export const resetError = () => (dispatch) => {\r\n//     dispatch({ type: RESET_ERROR });\r\n// };\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}