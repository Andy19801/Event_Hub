{"ast":null,"code":"import{createSlice,createAsyncThunk}from'@reduxjs/toolkit';// Async thunk for changing profile picture\nexport const changeProfilePic=createAsyncThunk('auth/changeProfilePic',async(formData,_ref)=>{let{rejectWithValue}=_ref;try{// Replace with your API endpoint for uploading profile picture\nconst response=await fetch('/api/change-profile-pic',{method:'POST',body:formData// Include token if needed\n// headers: {\n//   'Authorization': `Bearer ${getState().auth.token}`,\n// },\n});if(!response.ok){throw new Error('Failed to upload profile picture');}const data=await response.json();return data;// Adjust based on your API response\n}catch(error){return rejectWithValue(error.message);}});const initialState={user:null,token:localStorage.getItem('authToken')||null,changePasswordStatus:'idle',// Track status of change password request\nchangePasswordError:null,changeProfilePicStatus:'idle',// Track status of change profile picture request\nchangeProfilePicError:null};const authSlice=createSlice({name:'auth',initialState,reducers:{setCredentials:(state,action)=>{const{user,token}=action.payload;state.user=user;state.token=token;localStorage.setItem('authToken',token);},logout:state=>{state.user=null;state.token=null;localStorage.removeItem('authToken');}},extraReducers:builder=>{builder.addCase(changePassword.pending,state=>{state.changePasswordStatus='loading';state.changePasswordError=null;}).addCase(changePassword.fulfilled,state=>{state.changePasswordStatus='succeeded';state.changePasswordError=null;}).addCase(changePassword.rejected,(state,action)=>{state.changePasswordStatus='failed';state.changePasswordError=action.payload;}).addCase(changeProfilePic.pending,state=>{state.changeProfilePicStatus='loading';state.changeProfilePicError=null;}).addCase(changeProfilePic.fulfilled,(state,action)=>{state.changeProfilePicStatus='succeeded';state.changeProfilePicError=null;// Assuming the response includes the updated user data\nstate.user=action.payload.user;}).addCase(changeProfilePic.rejected,(state,action)=>{state.changeProfilePicStatus='failed';state.changeProfilePicError=action.payload;});}});export const{setCredentials,logout}=authSlice.actions;export default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","changeProfilePic","formData","_ref","rejectWithValue","response","fetch","method","body","ok","Error","data","json","error","message","initialState","user","token","localStorage","getItem","changePasswordStatus","changePasswordError","changeProfilePicStatus","changeProfilePicError","authSlice","name","reducers","setCredentials","state","action","payload","setItem","logout","removeItem","extraReducers","builder","addCase","changePassword","pending","fulfilled","rejected","actions","reducer"],"sources":["G:/Event Event Hub/Frontend/abhijeetproject/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\n// Async thunk for changing profile picture\r\nexport const changeProfilePic = createAsyncThunk(\r\n  'auth/changeProfilePic',\r\n  async (formData, { rejectWithValue }) => {\r\n    try {\r\n      // Replace with your API endpoint for uploading profile picture\r\n      const response = await fetch('/api/change-profile-pic', {\r\n        method: 'POST',\r\n        body: formData,\r\n        // Include token if needed\r\n        // headers: {\r\n        //   'Authorization': `Bearer ${getState().auth.token}`,\r\n        // },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to upload profile picture');\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data; // Adjust based on your API response\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  user: null,\r\n  token: localStorage.getItem('authToken') || null,\r\n  changePasswordStatus: 'idle', // Track status of change password request\r\n  changePasswordError: null,\r\n  changeProfilePicStatus: 'idle', // Track status of change profile picture request\r\n  changeProfilePicError: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    setCredentials: (state, action) => {\r\n      const { user, token } = action.payload;\r\n      state.user = user;\r\n      state.token = token;\r\n      localStorage.setItem('authToken', token);\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n      state.token = null;\r\n      localStorage.removeItem('authToken');\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(changePassword.pending, (state) => {\r\n        state.changePasswordStatus = 'loading';\r\n        state.changePasswordError = null;\r\n      })\r\n      .addCase(changePassword.fulfilled, (state) => {\r\n        state.changePasswordStatus = 'succeeded';\r\n        state.changePasswordError = null;\r\n      })\r\n      .addCase(changePassword.rejected, (state, action) => {\r\n        state.changePasswordStatus = 'failed';\r\n        state.changePasswordError = action.payload;\r\n      })\r\n      .addCase(changeProfilePic.pending, (state) => {\r\n        state.changeProfilePicStatus = 'loading';\r\n        state.changeProfilePicError = null;\r\n      })\r\n      .addCase(changeProfilePic.fulfilled, (state, action) => {\r\n        state.changeProfilePicStatus = 'succeeded';\r\n        state.changeProfilePicError = null;\r\n        // Assuming the response includes the updated user data\r\n        state.user = action.payload.user;\r\n      })\r\n      .addCase(changeProfilePic.rejected, (state, action) => {\r\n        state.changeProfilePicStatus = 'failed';\r\n        state.changeProfilePicError = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { setCredentials, logout } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}