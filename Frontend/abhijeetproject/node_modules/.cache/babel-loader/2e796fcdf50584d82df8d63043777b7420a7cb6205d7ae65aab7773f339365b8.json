{"ast":null,"code":"// Import necessary actions from the adminSlice\nimport{fetchAdminData,approveEvent,fetchUserDetails}from'./adminSlice';// Action to refresh admin dashboard data\nexport const refreshAdminData=()=>async dispatch=>{try{await dispatch(fetchAdminData()).unwrap();}catch(error){console.error(\"Failed to refresh admin data:\",error);}};// Action to approve an event by its ID\nexport const approveEventAction=eventId=>async dispatch=>{try{await dispatch(approveEvent(eventId)).unwrap();}catch(error){console.error(`Failed to approve event with ID: ${eventId}`,error);}};// Action to fetch user details\nexport const fetchUserDetailsAction=()=>async dispatch=>{try{await dispatch(fetchUserDetails()).unwrap();}catch(error){console.error(\"Failed to fetch user details:\",error);}};","map":{"version":3,"names":["fetchAdminData","approveEvent","fetchUserDetails","refreshAdminData","dispatch","unwrap","error","console","approveEventAction","eventId","fetchUserDetailsAction"],"sources":["G:/Event Event Hub/Frontend/abhijeetproject/src/features/admin/adminActions.js"],"sourcesContent":["// Import necessary actions from the adminSlice\r\nimport { fetchAdminData, approveEvent, fetchUserDetails } from './adminSlice';\r\n\r\n// Action to refresh admin dashboard data\r\nexport const refreshAdminData = () => async (dispatch) => {\r\n    try {\r\n        await dispatch(fetchAdminData()).unwrap();\r\n    } catch (error) {\r\n        console.error(\"Failed to refresh admin data:\", error);\r\n    }\r\n};\r\n\r\n// Action to approve an event by its ID\r\nexport const approveEventAction = (eventId) => async (dispatch) => {\r\n    try {\r\n        await dispatch(approveEvent(eventId)).unwrap();\r\n    } catch (error) {\r\n        console.error(`Failed to approve event with ID: ${eventId}`, error);\r\n    }\r\n};\r\n\r\n// Action to fetch user details\r\nexport const fetchUserDetailsAction = () => async (dispatch) => {\r\n    try {\r\n        await dispatch(fetchUserDetails()).unwrap();\r\n    } catch (error) {\r\n        console.error(\"Failed to fetch user details:\", error);\r\n    }\r\n};\r\n"],"mappings":"AAAA;AACA,OAASA,cAAc,CAAEC,YAAY,CAAEC,gBAAgB,KAAQ,cAAc,CAE7E;AACA,MAAO,MAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,KAAO,CAAAC,QAAQ,EAAK,CACtD,GAAI,CACA,KAAM,CAAAA,QAAQ,CAACJ,cAAc,CAAC,CAAC,CAAC,CAACK,MAAM,CAAC,CAAC,CAC7C,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACzD,CACJ,CAAC,CAED;AACA,MAAO,MAAM,CAAAE,kBAAkB,CAAIC,OAAO,EAAK,KAAO,CAAAL,QAAQ,EAAK,CAC/D,GAAI,CACA,KAAM,CAAAA,QAAQ,CAACH,YAAY,CAACQ,OAAO,CAAC,CAAC,CAACJ,MAAM,CAAC,CAAC,CAClD,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,oCAAoCG,OAAO,EAAE,CAAEH,KAAK,CAAC,CACvE,CACJ,CAAC,CAED;AACA,MAAO,MAAM,CAAAI,sBAAsB,CAAGA,CAAA,GAAM,KAAO,CAAAN,QAAQ,EAAK,CAC5D,GAAI,CACA,KAAM,CAAAA,QAAQ,CAACF,gBAAgB,CAAC,CAAC,CAAC,CAACG,MAAM,CAAC,CAAC,CAC/C,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACzD,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}