{"ast":null,"code":"export const checkAuthStatus = async () => {\n  // Check if token exists in localStorage or sessionStorage\n  const token = localStorage.getItem('authToken');\n  if (!token) {\n    return {\n      status: false,\n      role: ''\n    }; // Not logged in\n  }\n  try {\n    // Decode token or fetch user info based on token (this can vary)\n    const response = await fetch('http://localhost:5000/api/auth/check', {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    if (response.ok) {\n      const data = await response.json();\n      return {\n        status: true,\n        role: data.role\n      }; // User is logged in and role is returned\n    } else {\n      return {\n        status: false,\n        role: ''\n      };\n    }\n  } catch (error) {\n    console.error('Error checking authentication status:', error);\n    return {\n      status: false,\n      role: ''\n    };\n  }\n};\n// // utils/auth.js\n// export const checkAuthStatus = async () => {\n//     // Example implementation: Check for a token in localStorage\n//     const token = localStorage.getItem('authToken');\n//     if (token) {\n//       try {\n//         // Optional: Make an API call to verify token validity\n//         const response = await fetch('/api/auth/verify-token', {\n//           method: 'GET',\n//           headers: {\n//             'Authorization': `Bearer ${token}`,\n//           },\n//         });\n\n//         if (response.ok) {\n//           return true; // Token is valid\n//         }\n//       } catch (error) {\n//         console.error('Error verifying token:', error);\n//       }\n//     }\n//     return false; // Token not present or invalid\n//   };","map":{"version":3,"names":["checkAuthStatus","token","localStorage","getItem","status","role","response","fetch","headers","ok","data","json","error","console"],"sources":["E:/Final Year project/Event Hub/Frontend/abhijeetproject/src/utils/auth.js"],"sourcesContent":["export const checkAuthStatus = async () => {\r\n  // Check if token exists in localStorage or sessionStorage\r\n  const token = localStorage.getItem('authToken');\r\n  \r\n  if (!token) {\r\n    return { status: false, role: '' }; // Not logged in\r\n  }\r\n\r\n  try {\r\n    // Decode token or fetch user info based on token (this can vary)\r\n    const response = await fetch('http://localhost:5000/api/auth/check', {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      return { status: true, role: data.role }; // User is logged in and role is returned\r\n    } else {\r\n      return { status: false, role: '' };\r\n    }\r\n  } catch (error) {\r\n    console.error('Error checking authentication status:', error);\r\n    return { status: false, role: '' };\r\n  }\r\n};\r\n// // utils/auth.js\r\n// export const checkAuthStatus = async () => {\r\n//     // Example implementation: Check for a token in localStorage\r\n//     const token = localStorage.getItem('authToken');\r\n//     if (token) {\r\n//       try {\r\n//         // Optional: Make an API call to verify token validity\r\n//         const response = await fetch('/api/auth/verify-token', {\r\n//           method: 'GET',\r\n//           headers: {\r\n//             'Authorization': `Bearer ${token}`,\r\n//           },\r\n//         });\r\n  \r\n//         if (response.ok) {\r\n//           return true; // Token is valid\r\n//         }\r\n//       } catch (error) {\r\n//         console.error('Error verifying token:', error);\r\n//       }\r\n//     }\r\n//     return false; // Token not present or invalid\r\n//   };\r\n  "],"mappings":"AAAA,OAAO,MAAMA,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAE/C,IAAI,CAACF,KAAK,EAAE;IACV,OAAO;MAAEG,MAAM,EAAE,KAAK;MAAEC,IAAI,EAAE;IAAG,CAAC,CAAC,CAAC;EACtC;EAEA,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;MACnEC,OAAO,EAAE;QACP,eAAe,EAAE,UAAUP,KAAK;MAClC;IACF,CAAC,CAAC;IAEF,IAAIK,QAAQ,CAACG,EAAE,EAAE;MACf,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,OAAO;QAAEP,MAAM,EAAE,IAAI;QAAEC,IAAI,EAAEK,IAAI,CAACL;MAAK,CAAC,CAAC,CAAC;IAC5C,CAAC,MAAM;MACL,OAAO;QAAED,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAE;MAAG,CAAC;IACpC;EACF,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC7D,OAAO;MAAER,MAAM,EAAE,KAAK;MAAEC,IAAI,EAAE;IAAG,CAAC;EACpC;AACF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}