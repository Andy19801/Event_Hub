{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './Signin.css'; // Import the CSS file for styling\n// const Signin = () => {\n//     const [formData, setFormData] = useState({\n//         name: '',\n//         email: '',\n//         password: '',\n//     });\n//     const navigate = useNavigate();\n//     const handleChange = (e) => {\n//         const { name, value } = e.target;\n//         setFormData({\n//             ...formData,\n//             [name]: value,\n//         });\n//     };\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             // Sending the signup data to the backend API\n//             const response = await fetch('http://localhost:3000/api/auth/signup', {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//                 body: JSON.stringify(formData),\n//             });\n//             if (!response.ok) {\n//                 throw new Error(`HTTP error! status: ${response.status}`);\n//             }\n//             const data = await response.json();\n//             if (response.ok) {\n//                 // Redirect to login page on successful signup\n//                 navigate('/login');\n//             } else {\n//                 // Handle signup errors here\n//                 console.error('Signup error:', data.message);\n//                 // Optionally, you can display the error message to the user\n//             }\n//         } catch (error) {\n//             console.error('An error occurred:', error.message);\n//         }\n//     };\n//     return (\n//         <div className=\"signup-page\">\n//             <h1>Sign Up</h1>\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"inputBox\">\n//                     <label>\n//                         Name:\n//                         <input\n//                             type=\"text\"\n//                             name=\"name\"\n//                             value={formData.name}\n//                             onChange={handleChange}\n//                             required\n//                         />\n//                     </label>\n//                 </div>\n//                 <div className=\"inputBox\">\n//                     <label>\n//                         Email Address:\n//                         <input\n//                             type=\"email\"\n//                             name=\"email\"\n//                             value={formData.email}\n//                             onChange={handleChange}\n//                             required\n//                         />\n//                     </label>\n//                 </div>\n//                 <div className=\"inputBox\">\n//                     <label>\n//                         Password:\n//                         <input\n//                             type=\"password\"\n//                             name=\"password\"\n//                             value={formData.password}\n//                             onChange={handleChange}\n//                             required\n//                         />\n//                     </label>\n//                 </div>\n//                 <div className=\"inputBox\">\n//                     <button type=\"submit\" className=\"submit-btn\">Sign Up</button>\n//                 </div>\n//                 <p>Already have an account? <a href=\"/login\">Login</a></p>\n//             </form>\n//         </div>\n//     );\n// };\n// export default Signin;\nimport React,{useState}from'react';import{useNavigate}from'react-router-dom';import'./Signin.css';// Import the CSS file for styling\nimport Swal from'sweetalert2';// SweetAlert for notifications\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Signin=()=>{const[formData,setFormData]=useState({name:'',email:'',password:''});const[loading,setLoading]=useState(false);// Loading state\nconst navigate=useNavigate();const handleChange=e=>{const{name,value}=e.target;setFormData({...formData,[name]:value});};const handleSubmit=async e=>{e.preventDefault();// Basic email validation\nconst emailRegex=/^[a-zA-Z0-9._%+-]+@gmail\\.com$/;if(!emailRegex.test(formData.email)){Swal.fire({icon:'error',title:'Email Error',text:'Please enter a valid Gmail address.'});return;}// Password validation (minimum 8 characters)\nif(formData.password.length<8){Swal.fire({icon:'error',title:'Password Error',text:'Password must be at least 8 characters long.'});return;}setLoading(true);// Show loading spinner\ntry{// Sending the signup data to the backend API\nconst response=await fetch('http://localhost:3000/api/auth/signup',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(formData)});const data=await response.json();if(!response.ok){throw new Error(data.message||'Signup failed');}Swal.fire({icon:'success',title:'Signup Successful',text:'You have signed up successfully!'});navigate('/login');// Redirect to login page on successful signup\n}catch(error){Swal.fire({icon:'error',title:'Signup Error',text:error.message});}finally{setLoading(false);// Hide loading spinner\n}};return/*#__PURE__*/_jsxs(\"div\",{className:\"signup-page\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Sign Up\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{className:\"inputBox\",children:/*#__PURE__*/_jsxs(\"label\",{children:[\"Name:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",value:formData.name,onChange:handleChange,required:true})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"inputBox\",children:/*#__PURE__*/_jsxs(\"label\",{children:[\"Email Address:\",/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:formData.email,onChange:handleChange,required:true})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"inputBox\",children:/*#__PURE__*/_jsxs(\"label\",{children:[\"Password:\",/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:formData.password,onChange:handleChange,required:true})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"inputBox\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit-btn\",disabled:loading,children:loading?'Signing Up...':'Sign Up'})}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Already have an account? \",/*#__PURE__*/_jsx(\"a\",{href:\"/login\",children:\"Login\"})]})]})]});};export default Signin;","map":{"version":3,"names":["React","useState","useNavigate","Swal","jsx","_jsx","jsxs","_jsxs","Signin","formData","setFormData","name","email","password","loading","setLoading","navigate","handleChange","e","value","target","handleSubmit","preventDefault","emailRegex","test","fire","icon","title","text","length","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","error","className","children","onSubmit","type","onChange","required","disabled","href"],"sources":["G:/Event Event Hub/Frontend/abhijeetproject/src/main/Signin/Signin.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import './Signin.css'; // Import the CSS file for styling\r\n\r\n// const Signin = () => {\r\n//     const [formData, setFormData] = useState({\r\n//         name: '',\r\n//         email: '',\r\n//         password: '',\r\n//     });\r\n\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setFormData({\r\n//             ...formData,\r\n//             [name]: value,\r\n//         });\r\n//     };\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             // Sending the signup data to the backend API\r\n//             const response = await fetch('http://localhost:3000/api/auth/signup', {\r\n//                 method: 'POST',\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//                 body: JSON.stringify(formData),\r\n//             });\r\n\r\n//             if (!response.ok) {\r\n//                 throw new Error(`HTTP error! status: ${response.status}`);\r\n//             }\r\n\r\n//             const data = await response.json();\r\n//             if (response.ok) {\r\n//                 // Redirect to login page on successful signup\r\n//                 navigate('/login');\r\n//             } else {\r\n//                 // Handle signup errors here\r\n//                 console.error('Signup error:', data.message);\r\n//                 // Optionally, you can display the error message to the user\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('An error occurred:', error.message);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"signup-page\">\r\n//             <h1>Sign Up</h1>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <div className=\"inputBox\">\r\n//                     <label>\r\n//                         Name:\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             name=\"name\"\r\n//                             value={formData.name}\r\n//                             onChange={handleChange}\r\n//                             required\r\n//                         />\r\n//                     </label>\r\n//                 </div>\r\n//                 <div className=\"inputBox\">\r\n//                     <label>\r\n//                         Email Address:\r\n//                         <input\r\n//                             type=\"email\"\r\n//                             name=\"email\"\r\n//                             value={formData.email}\r\n//                             onChange={handleChange}\r\n//                             required\r\n//                         />\r\n//                     </label>\r\n//                 </div>\r\n//                 <div className=\"inputBox\">\r\n//                     <label>\r\n//                         Password:\r\n//                         <input\r\n//                             type=\"password\"\r\n//                             name=\"password\"\r\n//                             value={formData.password}\r\n//                             onChange={handleChange}\r\n//                             required\r\n//                         />\r\n//                     </label>\r\n//                 </div>\r\n//                 <div className=\"inputBox\">\r\n//                     <button type=\"submit\" className=\"submit-btn\">Sign Up</button>\r\n//                 </div>\r\n//                 <p>Already have an account? <a href=\"/login\">Login</a></p>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Signin;\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Signin.css'; // Import the CSS file for styling\r\nimport Swal from 'sweetalert2'; // SweetAlert for notifications\r\n\r\nconst Signin = () => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n    });\r\n    const [loading, setLoading] = useState(false); // Loading state\r\n    const navigate = useNavigate();\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Basic email validation\r\n        const emailRegex = /^[a-zA-Z0-9._%+-]+@gmail\\.com$/;\r\n        if (!emailRegex.test(formData.email)) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Email Error',\r\n                text: 'Please enter a valid Gmail address.',\r\n            });\r\n            return;\r\n        }\r\n\r\n        // Password validation (minimum 8 characters)\r\n        if (formData.password.length < 8) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Password Error',\r\n                text: 'Password must be at least 8 characters long.',\r\n            });\r\n            return;\r\n        }\r\n\r\n        setLoading(true); // Show loading spinner\r\n\r\n        try {\r\n            // Sending the signup data to the backend API\r\n            const response = await fetch('http://localhost:3000/api/auth/signup', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.message || 'Signup failed');\r\n            }\r\n\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Signup Successful',\r\n                text: 'You have signed up successfully!',\r\n            });\r\n\r\n            navigate('/login'); // Redirect to login page on successful signup\r\n        } catch (error) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Signup Error',\r\n                text: error.message,\r\n            });\r\n        } finally {\r\n            setLoading(false); // Hide loading spinner\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"signup-page\">\r\n            <h1>Sign Up</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"inputBox\">\r\n                    <label>\r\n                        Name:\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            value={formData.name}\r\n                            onChange={handleChange}\r\n                            required\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <div className=\"inputBox\">\r\n                    <label>\r\n                        Email Address:\r\n                        <input\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            value={formData.email}\r\n                            onChange={handleChange}\r\n                            required\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <div className=\"inputBox\">\r\n                    <label>\r\n                        Password:\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            value={formData.password}\r\n                            onChange={handleChange}\r\n                            required\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <div className=\"inputBox\">\r\n                    <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\r\n                        {loading ? 'Signing Up...' : 'Sign Up'}\r\n                    </button>\r\n                </div>\r\n                <p>Already have an account? <a href=\"/login\">Login</a></p>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Signin;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}