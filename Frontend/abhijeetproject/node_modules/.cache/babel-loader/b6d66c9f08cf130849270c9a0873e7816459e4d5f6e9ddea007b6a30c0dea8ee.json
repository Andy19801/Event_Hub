{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import Swal from'sweetalert2';// SweetAlert for notifications\nimport{useNavigate}from'react-router-dom';import{useDispatch}from'react-redux';import{toggle_true_and_false_on_login}from'../../features/counter/counterSlice.js';// Correct action import\nimport'./Login.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const dispatch=useDispatch();const navigate=useNavigate();const[formData,setFormData]=useState({email:'',password:''});const[isChecked,setIsChecked]=useState(false);// Track checkbox status\nconst[loading,setLoading]=useState(false);// Loading state for submission\n// Handle input changes\nconst handleChange=e=>{const{name,value}=e.target;setFormData(prevData=>({...prevData,[name]:value}));};// Handle checkbox state\nconst handleCheckboxChange=e=>{setIsChecked(e.target.checked);};// Form submit handler\nconst handleSubmit=async e=>{e.preventDefault();// Validate that the checkbox is checked\nif(!isChecked){Swal.fire({icon:'error',title:'Agreement Error',text:'Please agree to the terms of use & privacy policy.'});return;}// Validate email and password fields\nif(!formData.email||!formData.password){Swal.fire({icon:'error',title:'Empty Fields',text:'Please fill in both email and password fields.'});return;}// Validate password (at least 8 characters, one letter, one number, one special char)\nconst passwordRegex=/^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;if(!passwordRegex.test(formData.password)){Swal.fire({icon:'error',title:'Password Error',text:'Password must contain at least 8 characters, one letter, one number, and one special character.'});return;}// Validate Gmail email address\nconst emailRegex=/^[a-zA-Z0-9._%+-]+@gmail\\.com$/;if(!emailRegex.test(formData.email)){Swal.fire({icon:'error',title:'Email Error',text:'Please enter a valid Gmail address.'});return;}// Show loading spinner while submitting\nsetLoading(true);// Submit form data to API\ntry{const response=await axios.post('http://localhost:3000/api/auth/login',formData);if(response.data.token){// Successful login, store token in localStorage\nlocalStorage.setItem('authToken',response.data.token);// Dispatch login status to Redux\ndispatch(toggle_true_and_false_on_login(true));Swal.fire({icon:'success',title:'Login Successful',text:'You have logged in successfully!'});// Redirect to home page\nnavigate('/');}else{Swal.fire({icon:'error',title:'Login Failed',text:'Invalid email or password.'});}}catch(error){Swal.fire({icon:'error',title:'Login Error',text:'An error occurred while trying to log in. Please try again later.'});console.error('Error logging in:',error);}finally{setLoading(false);// Stop loading spinner\n}};return/*#__PURE__*/_jsx(\"div\",{className:\"loginsignup\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"loginsignup-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Login\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"loginsignup-fields\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email Address\",name:\"email\",value:formData.email,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",name:\"password\",value:formData.password,onChange:handleChange,required:true}),/*#__PURE__*/_jsxs(\"div\",{className:\"loginsignup-agree\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",name:\"agree\",id:\"agree\",checked:isChecked,onChange:handleCheckboxChange}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"agree\",children:\"By continuing, I agree to the terms of use & privacy policy.\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!isChecked||loading,children:loading?'Loading...':'Continue'})]})]})});};export default Login;","map":{"version":3,"names":["React","useState","axios","Swal","useNavigate","useDispatch","toggle_true_and_false_on_login","jsx","_jsx","jsxs","_jsxs","Login","dispatch","navigate","formData","setFormData","email","password","isChecked","setIsChecked","loading","setLoading","handleChange","e","name","value","target","prevData","handleCheckboxChange","checked","handleSubmit","preventDefault","fire","icon","title","text","passwordRegex","test","emailRegex","response","post","data","token","localStorage","setItem","error","console","className","children","onSubmit","type","placeholder","onChange","required","id","htmlFor","disabled"],"sources":["G:/Event Event Hub/Frontend/abhijeetproject/src/main/Login/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2'; // SweetAlert for notifications\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toggle_true_and_false_on_login } from '../../features/counter/counterSlice.js'; // Correct action import\r\nimport './Login.css';\r\n\r\nconst Login = () => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n    const [isChecked, setIsChecked] = useState(false); // Track checkbox status\r\n    const [loading, setLoading] = useState(false); // Loading state for submission\r\n\r\n    // Handle input changes\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData((prevData) => ({\r\n            ...prevData,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    // Handle checkbox state\r\n    const handleCheckboxChange = (e) => {\r\n        setIsChecked(e.target.checked);\r\n    };\r\n\r\n    // Form submit handler\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Validate that the checkbox is checked\r\n        if (!isChecked) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Agreement Error',\r\n                text: 'Please agree to the terms of use & privacy policy.',\r\n            });\r\n            return;\r\n        }\r\n\r\n        // Validate email and password fields\r\n        if (!formData.email || !formData.password) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Empty Fields',\r\n                text: 'Please fill in both email and password fields.',\r\n            });\r\n            return;\r\n        }\r\n\r\n        // Validate password (at least 8 characters, one letter, one number, one special char)\r\n        const passwordRegex = /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n        if (!passwordRegex.test(formData.password)) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Password Error',\r\n                text: 'Password must contain at least 8 characters, one letter, one number, and one special character.',\r\n            });\r\n            return;\r\n        }\r\n\r\n        // Validate Gmail email address\r\n        const emailRegex = /^[a-zA-Z0-9._%+-]+@gmail\\.com$/;\r\n        if (!emailRegex.test(formData.email)) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Email Error',\r\n                text: 'Please enter a valid Gmail address.',\r\n            });\r\n            return;\r\n        }\r\n\r\n        // Show loading spinner while submitting\r\n        setLoading(true);\r\n\r\n        // Submit form data to API\r\n        try {\r\n            const response = await axios.post('http://localhost:3000/api/auth/login', formData);\r\n            if (response.data.token) {\r\n                // Successful login, store token in localStorage\r\n                localStorage.setItem('authToken', response.data.token);\r\n\r\n                // Dispatch login status to Redux\r\n                dispatch(toggle_true_and_false_on_login(true));\r\n\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Login Successful',\r\n                    text: 'You have logged in successfully!',\r\n                });\r\n\r\n                // Redirect to home page\r\n                navigate('/');\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Login Failed',\r\n                    text: 'Invalid email or password.',\r\n                });\r\n            }\r\n        } catch (error) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Login Error',\r\n                text: 'An error occurred while trying to log in. Please try again later.',\r\n            });\r\n            console.error('Error logging in:', error);\r\n        } finally {\r\n            setLoading(false); // Stop loading spinner\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"loginsignup\">\r\n            <div className=\"loginsignup-container\">\r\n                <h1>Login</h1>\r\n                <form className=\"loginsignup-fields\" onSubmit={handleSubmit}>\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Email Address\"\r\n                        name=\"email\"\r\n                        value={formData.email}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        value={formData.password}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                    <div className=\"loginsignup-agree\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"agree\"\r\n                            id=\"agree\"\r\n                            checked={isChecked}\r\n                            onChange={handleCheckboxChange}\r\n                        />\r\n                        <label htmlFor=\"agree\">\r\n                            By continuing, I agree to the terms of use & privacy policy.\r\n                        </label>\r\n                    </div>\r\n                    <button type=\"submit\" disabled={!isChecked || loading}>\r\n                        {loading ? 'Loading...' : 'Continue'}\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}