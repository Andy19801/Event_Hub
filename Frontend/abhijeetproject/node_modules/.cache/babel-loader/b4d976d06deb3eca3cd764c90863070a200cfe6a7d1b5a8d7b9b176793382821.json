{"ast":null,"code":"var _jsxFileName = \"G:\\\\event\\\\Frontend\\\\abhijeetproject\\\\src\\\\main\\\\Signin\\\\Signin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Swal from 'sweetalert2'; // Import SweetAlert\nimport { useNavigate } from 'react-router-dom';\nimport './Signin.css'; // Import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signin = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const [isChecked, setIsChecked] = useState(false); // State to track checkbox status\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleCheckboxChange = e => {\n    setIsChecked(e.target.checked);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Check if any of the input fields are empty\n    if (!formData.name || !formData.email || !formData.password) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Validation Error',\n        text: 'Please fill in all fields.'\n      });\n      return;\n    }\n\n    // Password validation\n    const passwordRegex = /^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,}$/;\n    if (!passwordRegex.test(formData.password)) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Validation Error',\n        text: 'Password must contain at least one alphabetic character, one digit, one special character, and be at least 8 characters long.'\n      });\n      return;\n    }\n\n    // Email validation\n    const emailRegex = /\\S+@\\S+\\.\\S+/;\n    if (!emailRegex.test(formData.email)) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Validation Error',\n        text: 'Please enter a valid email address.'\n      });\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/register', formData);\n      console.log('API response:', response.data);\n      if (response.data) {\n        Swal.fire({\n          icon: 'success',\n          title: 'Registration Successful',\n          text: 'You have registered successfully.'\n        });\n        navigate('/login'); // Redirect to login page or another route after successful registration\n      } else {\n        Swal.fire({\n          icon: 'warning',\n          title: 'Registration Failed',\n          text: 'Something went wrong...'\n        });\n      }\n    } catch (error) {\n      console.error('Error submitting form:', error);\n      Swal.fire({\n        icon: 'error',\n        title: 'Registration Error',\n        text: 'An error occurred while trying to register. Please try again later.'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginsignup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginsignup-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"loginsignup-fields\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Your Name\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email Address\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loginsignup-login\",\n          children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/login\",\n            children: \"Login here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginsignup-agree\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"agree\",\n            id: \"agree\",\n            checked: isChecked,\n            onChange: handleCheckboxChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"agree\",\n            children: \"By continuing, I agree to the terms of use & privacy policy.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !isChecked,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_s(Signin, \"UG2YlOMfmRWacLvNkyc35bsKdrI=\", false, function () {\n  return [useNavigate];\n});\n_c = Signin;\nexport default Signin;\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './Signin.css'; // Import the CSS file for styling\n\n// const Signin = () => {\n//     const [formData, setFormData] = useState({\n//         name: '',\n//         email: '',\n//         password: '',\n//     });\n\n//     const navigate = useNavigate();\n\n//     const handleChange = (e) => {\n//         const { name, value } = e.target;\n//         setFormData({\n//             ...formData,\n//             [name]: value,\n//         });\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             // Sending the signup data to the backend API\n//             const response = await fetch('http://localhost:5000/api/auth/signup', {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//                 body: JSON.stringify(formData),\n//             });\n\n//             if (!response.ok) {\n//                 throw new Error(`HTTP error! status: ${response.status}`);\n//             }\n\n//             const data = await response.json();\n//             if (response.ok) {\n//                 // Redirect to login page on successful signup\n//                 navigate('/login');\n//             } else {\n//                 // Handle signup errors here\n//                 console.error('Signup error:', data.message);\n//                 // Optionally, you can display the error message to the user\n//             }\n//         } catch (error) {\n//             console.error('An error occurred:', error.message);\n//         }\n//     };\n\n//     return (\n//         <div className=\"signup-page\">\n//             <h1>Sign Up</h1>\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"inputBox\">\n//                     <label>\n//                         Name:\n//                         <input\n//                             type=\"text\"\n//                             name=\"name\"\n//                             value={formData.name}\n//                             onChange={handleChange}\n//                             required\n//                         />\n//                     </label>\n//                 </div>\n//                 <div className=\"inputBox\">\n//                     <label>\n//                         Email Address:\n//                         <input\n//                             type=\"email\"\n//                             name=\"email\"\n//                             value={formData.email}\n//                             onChange={handleChange}\n//                             required\n//                         />\n//                     </label>\n//                 </div>\n//                 <div className=\"inputBox\">\n//                     <label>\n//                         Password:\n//                         <input\n//                             type=\"password\"\n//                             name=\"password\"\n//                             value={formData.password}\n//                             onChange={handleChange}\n//                             required\n//                         />\n//                     </label>\n//                 </div>\n//                 <div className=\"inputBox\">\n//                     <button type=\"submit\" className=\"submit-btn\">Sign Up</button>\n//                 </div>\n//                 <p>Already have an account? <a href=\"/login\">Login</a></p>\n//             </form>\n//         </div>\n//     );\n// };\n\n// export default Signin;\nvar _c;\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"names":["React","useState","axios","Swal","useNavigate","jsxDEV","_jsxDEV","Signin","_s","formData","setFormData","name","email","password","isChecked","setIsChecked","navigate","handleChange","e","value","target","handleCheckboxChange","checked","handleSubmit","preventDefault","fire","icon","title","text","passwordRegex","test","emailRegex","response","post","console","log","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","href","id","htmlFor","disabled","_c","$RefreshReg$"],"sources":["G:/event/Frontend/abhijeetproject/src/main/Signin/Signin.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2'; // Import SweetAlert\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Signin.css'; // Import the CSS file for styling\r\n\r\nconst Signin = () => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const [isChecked, setIsChecked] = useState(false); // State to track checkbox status\r\n    const navigate = useNavigate();\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleCheckboxChange = (e) => {\r\n        setIsChecked(e.target.checked);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Check if any of the input fields are empty\r\n        if (!formData.name || !formData.email || !formData.password) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Validation Error',\r\n                text: 'Please fill in all fields.',\r\n            });\r\n            return;\r\n        }\r\n\r\n        // Password validation\r\n        const passwordRegex = /^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,}$/;\r\n        if (!passwordRegex.test(formData.password)) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Validation Error',\r\n                text: 'Password must contain at least one alphabetic character, one digit, one special character, and be at least 8 characters long.',\r\n            });\r\n            return;\r\n        }\r\n\r\n        // Email validation\r\n        const emailRegex = /\\S+@\\S+\\.\\S+/;\r\n        if (!emailRegex.test(formData.email)) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Validation Error',\r\n                text: 'Please enter a valid email address.',\r\n            });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/register', formData);\r\n            console.log('API response:', response.data);\r\n            \r\n            if (response.data) {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Registration Successful',\r\n                    text: 'You have registered successfully.',\r\n                });\r\n                navigate('/login'); // Redirect to login page or another route after successful registration\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'warning',\r\n                    title: 'Registration Failed',\r\n                    text: 'Something went wrong...',\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error('Error submitting form:', error);\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Registration Error',\r\n                text: 'An error occurred while trying to register. Please try again later.',\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"loginsignup\">\r\n            <div className=\"loginsignup-container\">\r\n                <h1>Register</h1>\r\n                <form className=\"loginsignup-fields\" onSubmit={handleSubmit}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Your Name\"\r\n                        name=\"name\"\r\n                        value={formData.name}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Email Address\"\r\n                        name=\"email\"\r\n                        value={formData.email}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        value={formData.password}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <p className=\"loginsignup-login\">\r\n                        Already have an account? <a href=\"/login\">Login here</a>\r\n                    </p>\r\n                    <div className=\"loginsignup-agree\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"agree\"\r\n                            id=\"agree\"\r\n                            checked={isChecked}\r\n                            onChange={handleCheckboxChange}\r\n                        />\r\n                        <label htmlFor=\"agree\">\r\n                            By continuing, I agree to the terms of use & privacy policy.\r\n                        </label>\r\n                    </div>\r\n                    <button type=\"submit\" disabled={!isChecked}>\r\n                        Register\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Signin;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import './Signin.css'; // Import the CSS file for styling\r\n\r\n// const Signin = () => {\r\n//     const [formData, setFormData] = useState({\r\n//         name: '',\r\n//         email: '',\r\n//         password: '',\r\n//     });\r\n\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setFormData({\r\n//             ...formData,\r\n//             [name]: value,\r\n//         });\r\n//     };\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             // Sending the signup data to the backend API\r\n//             const response = await fetch('http://localhost:5000/api/auth/signup', {\r\n//                 method: 'POST',\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//                 body: JSON.stringify(formData),\r\n//             });\r\n\r\n//             if (!response.ok) {\r\n//                 throw new Error(`HTTP error! status: ${response.status}`);\r\n//             }\r\n\r\n//             const data = await response.json();\r\n//             if (response.ok) {\r\n//                 // Redirect to login page on successful signup\r\n//                 navigate('/login');\r\n//             } else {\r\n//                 // Handle signup errors here\r\n//                 console.error('Signup error:', data.message);\r\n//                 // Optionally, you can display the error message to the user\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('An error occurred:', error.message);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"signup-page\">\r\n//             <h1>Sign Up</h1>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <div className=\"inputBox\">\r\n//                     <label>\r\n//                         Name:\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             name=\"name\"\r\n//                             value={formData.name}\r\n//                             onChange={handleChange}\r\n//                             required\r\n//                         />\r\n//                     </label>\r\n//                 </div>\r\n//                 <div className=\"inputBox\">\r\n//                     <label>\r\n//                         Email Address:\r\n//                         <input\r\n//                             type=\"email\"\r\n//                             name=\"email\"\r\n//                             value={formData.email}\r\n//                             onChange={handleChange}\r\n//                             required\r\n//                         />\r\n//                     </label>\r\n//                 </div>\r\n//                 <div className=\"inputBox\">\r\n//                     <label>\r\n//                         Password:\r\n//                         <input\r\n//                             type=\"password\"\r\n//                             name=\"password\"\r\n//                             value={formData.password}\r\n//                             onChange={handleChange}\r\n//                             required\r\n//                         />\r\n//                     </label>\r\n//                 </div>\r\n//                 <div className=\"inputBox\">\r\n//                     <button type=\"submit\" className=\"submit-btn\">Sign Up</button>\r\n//                 </div>\r\n//                 <p>Already have an account? <a href=\"/login\">Login</a></p>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Signin;\r\n"],"mappings":"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CAAC,eACNrC,OAAA;UAAQuC,IAAI,EAAC,QAAQ;UAACM,QAAQ,EAAE,CAACrC,SAAU;UAAAyB,QAAA,EAAC;QAE5C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACnC,EAAA,CArIID,MAAM;EAAA,QAQSH,WAAW;AAAA;AAAAgD,EAAA,GAR1B7C,MAAM;AAuIZ,eAAeA,MAAM;;AAkBrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}