{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import Swal from'sweetalert2';// Import SweetAlert\nimport{useNavigate}from'react-router-dom';import'./Signin.css';// Import the CSS file for styling\nimport{HiEye,HiEyeOff}from'react-icons/hi';// Import eye icons for show/hide functionality\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Signin=()=>{const[formData,setFormData]=useState({name:'',email:'',password:'',role:'user'// Default role set to 'user'\n});const[isChecked,setIsChecked]=useState(false);// State to track checkbox status\nconst[passwordVisible,setPasswordVisible]=useState(false);// State to track password visibility\nconst navigate=useNavigate();const handleChange=e=>{const{name,value}=e.target;setFormData({...formData,[name]:value});};const handleCheckboxChange=e=>{setIsChecked(e.target.checked);};const togglePasswordVisibility=()=>{setPasswordVisible(!passwordVisible);};const handleSubmit=async e=>{e.preventDefault();// Check if any of the input fields are empty\nif(!formData.name||!formData.email||!formData.password){Swal.fire({icon:'error',title:'Validation Error',text:'Please fill in all fields.'});return;}// Password validation\nconst passwordRegex=/^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,}$/;if(!passwordRegex.test(formData.password)){Swal.fire({icon:'error',title:'Validation Error',text:'Password must contain at least one alphabetic character, one digit, one special character, and be at least 8 characters long.'});return;}// Email validation\nconst emailRegex=/\\S+@\\S+\\.\\S+/;if(!emailRegex.test(formData.email)){Swal.fire({icon:'error',title:'Validation Error',text:'Please enter a valid email address.'});return;}try{const response=await axios.post('http://localhost:3300/api/auth/signin',formData);console.log('API response:',response.data);if(response.data){Swal.fire({icon:'success',title:'Registration Successful',text:'You have registered successfully.'});navigate('/login');// Redirect to login page after successful registration\n}else{Swal.fire({icon:'warning',title:'Registration Failed',text:'Something went wrong...'});}}catch(error){console.error('Error submitting form:',error);Swal.fire({icon:'error',title:'Registration Error',text:'An error occurred while trying to register. Please try again later.'});}};return/*#__PURE__*/_jsx(\"div\",{className:\"loginsignup\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"loginsignup-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Register\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"loginsignup-fields\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Your Name\",name:\"name\",value:formData.name,onChange:handleChange}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email Address\",name:\"email\",value:formData.email,onChange:handleChange}),/*#__PURE__*/_jsxs(\"div\",{className:\"password-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:passwordVisible?'text':'password',placeholder:\"Password\",name:\"password\",value:formData.password,onChange:handleChange}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"eye-button\",onClick:togglePasswordVisibility,children:passwordVisible?/*#__PURE__*/_jsx(HiEyeOff,{}):/*#__PURE__*/_jsx(HiEye,{})})]}),/*#__PURE__*/_jsxs(\"select\",{name:\"role\",value:formData.role,onChange:handleChange,className:\"loginsignup-role\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"user\",children:\"User\"}),/*#__PURE__*/_jsx(\"option\",{value:\"event-owner\",children:\"Event Owner\"}),/*#__PURE__*/_jsx(\"option\",{value:\"admin\",children:\"Admin\"})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"loginsignup-login\",children:[\"Already have an account? \",/*#__PURE__*/_jsx(\"a\",{href:\"/login\",children:\"Login here\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"loginsignup-agree\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",name:\"agree\",id:\"agree\",checked:isChecked,onChange:handleCheckboxChange}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"agree\",children:\"By continuing, I agree to the terms of use & privacy policy.\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!isChecked,children:\"Register\"})]})]})});};export default Signin;// import React, { useState } from 'react';\n// import axios from 'axios';\n// import Swal from 'sweetalert2'; // Import SweetAlert\n// import { useNavigate } from 'react-router-dom';\n// import './Signin.css'; // Import the CSS file for styling\n// import { HiEye, HiEyeOff } from 'react-icons/hi'; // Import eye icons for show/hide functionality\n// const Signin = () => {\n//     const [formData, setFormData] = useState({\n//         name: '',\n//         email: '',\n//         password: '',\n//         role: 'user', // Default role set to 'user'\n//     });\n//     const [isChecked, setIsChecked] = useState(false); // State to track checkbox status\n//     const [passwordVisible, setPasswordVisible] = useState(false); // State to track password visibility\n//     const navigate = useNavigate();\n//     const handleChange = (e) => {\n//         const { name, value } = e.target;\n//         setFormData({\n//             ...formData,\n//             [name]: value,\n//         });\n//     };\n//     const handleCheckboxChange = (e) => {\n//         setIsChecked(e.target.checked);\n//     };\n//     const togglePasswordVisibility = () => {\n//         setPasswordVisible(!passwordVisible);\n//     };\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         // Check if any of the input fields are empty\n//         if (!formData.name || !formData.email || !formData.password) {\n//             Swal.fire({\n//                 icon: 'error',\n//                 title: 'Validation Error',\n//                 text: 'Please fill in all fields.',\n//             });\n//             return;\n//         }\n//         // Password validation\n//         const passwordRegex = /^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,}$/;\n//         if (!passwordRegex.test(formData.password)) {\n//             Swal.fire({\n//                 icon: 'error',\n//                 title: 'Validation Error',\n//                 text: 'Password must contain at least one alphabetic character, one digit, one special character, and be at least 8 characters long.',\n//             });\n//             return;\n//         }\n//         // Email validation\n//         const emailRegex = /\\S+@\\S+\\.\\S+/;\n//         if (!emailRegex.test(formData.email)) {\n//             Swal.fire({\n//                 icon: 'error',\n//                 title: 'Validation Error',\n//                 text: 'Please enter a valid email address.',\n//             });\n//             return;\n//         }\n//         try {\n//             const response = await axios.post('http://localhost:3000/api/auth/signin', formData);\n//             console.log('API response:', response.data);\n//             if (response.data) {\n//                 Swal.fire({\n//                     icon: 'success',\n//                     title: 'Registration Successful',\n//                     text: 'You have registered successfully.',\n//                 });\n//                 navigate('/login'); // Redirect to login page or another route after successful registration\n//             } else {\n//                 Swal.fire({\n//                     icon: 'warning',\n//                     title: 'Registration Failed',\n//                     text: 'Something went wrong...',\n//                 });\n//             }\n//         } catch (error) {\n//             console.error('Error submitting form:', error);\n//             Swal.fire({\n//                 icon: 'error',\n//                 title: 'Registration Error',\n//                 text: 'An error occurred while trying to register. Please try again later.',\n//             });\n//         }\n//     };\n//     return (\n//         <div className=\"loginsignup\">\n//             <div className=\"loginsignup-container\">\n//                 <h1>Register</h1>\n//                 <form className=\"loginsignup-fields\" onSubmit={handleSubmit}>\n//                     <input\n//                         type=\"text\"\n//                         placeholder=\"Your Name\"\n//                         name=\"name\"\n//                         value={formData.name}\n//                         onChange={handleChange}\n//                     />\n//                     <input\n//                         type=\"email\"\n//                         placeholder=\"Email Address\"\n//                         name=\"email\"\n//                         value={formData.email}\n//                         onChange={handleChange}\n//                     />\n//                     <div className=\"password-container\">\n//                         <input\n//                             type={passwordVisible ? 'text' : 'password'}\n//                             placeholder=\"Password\"\n//                             name=\"password\"\n//                             value={formData.password}\n//                             onChange={handleChange}\n//                         />\n//                         <button\n//                             type=\"button\"\n//                             className=\"eye-button\"\n//                             onClick={togglePasswordVisibility}\n//                         >\n//                             {passwordVisible ? <HiEyeOff /> : <HiEye />}\n//                         </button>\n//                     </div>\n//                     {/* Role Selection Dropdown */}\n//                     <select\n//                         name=\"role\"\n//                         value={formData.role}\n//                         onChange={handleChange}\n//                         className=\"loginsignup-role\"\n//                     >\n//                         <option value=\"user\">User</option>\n//                         <option value=\"event-owner\">Event Owner</option>\n//                         <option value=\"admin\">Admin</option>\n//                     </select>\n//                     <p className=\"loginsignup-login\">\n//                         Already have an account? <a href=\"/login\">Login here</a>\n//                     </p>\n//                     <div className=\"loginsignup-agree\">\n//                         <input\n//                             type=\"checkbox\"\n//                             name=\"agree\"\n//                             id=\"agree\"\n//                             checked={isChecked}\n//                             onChange={handleCheckboxChange}\n//                         />\n//                         <label htmlFor=\"agree\">\n//                             By continuing, I agree to the terms of use & privacy policy.\n//                         </label>\n//                     </div>\n//                     <button type=\"submit\" disabled={!isChecked}>\n//                         Register\n//                     </button>\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// };\n// export default Signin;\n// // import React, { useState } from 'react';\n// // import axios from 'axios';\n// // import Swal from 'sweetalert2'; // Import SweetAlert\n// // import { useNavigate } from 'react-router-dom';\n// // import './Signin.css'; // Import the CSS file for styling\n// // import { HiEye, HiEyeOff } from 'react-icons/hi'; // Import eye icons for show/hide functionality\n// // const Signin = () => {\n// //     const [formData, setFormData] = useState({\n// //         name: '',\n// //         email: '',\n// //         password: '',\n// //     });\n// //     const [isChecked, setIsChecked] = useState(false); // State to track checkbox status\n// //     const [passwordVisible, setPasswordVisible] = useState(false); // State to track password visibility\n// //     const navigate = useNavigate();\n// //     const handleChange = (e) => {\n// //         const { name, value } = e.target;\n// //         setFormData({\n// //             ...formData,\n// //             [name]: value,\n// //         });\n// //     };\n// //     const handleCheckboxChange = (e) => {\n// //         setIsChecked(e.target.checked);\n// //     };\n// //     const togglePasswordVisibility = () => {\n// //         setPasswordVisible(!passwordVisible);\n// //     };\n// //     const handleSubmit = async (e) => {\n// //         e.preventDefault();\n// //         // Check if any of the input fields are empty\n// //         if (!formData.name || !formData.email || !formData.password) {\n// //             Swal.fire({\n// //                 icon: 'error',\n// //                 title: 'Validation Error',\n// //                 text: 'Please fill in all fields.',\n// //             });\n// //             return;\n// //         }\n// //         // Password validation\n// //         const passwordRegex = /^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,}$/;\n// //         if (!passwordRegex.test(formData.password)) {\n// //             Swal.fire({\n// //                 icon: 'error',\n// //                 title: 'Validation Error',\n// //                 text: 'Password must contain at least one alphabetic character, one digit, one special character, and be at least 8 characters long.',\n// //             });\n// //             return;\n// //         }\n// //         // Email validation\n// //         const emailRegex = /\\S+@\\S+\\.\\S+/;\n// //         if (!emailRegex.test(formData.email)) {\n// //             Swal.fire({\n// //                 icon: 'error',\n// //                 title: 'Validation Error',\n// //                 text: 'Please enter a valid email address.',\n// //             });\n// //             return;\n// //         }\n// //         try {\n// //             const response = await axios.post('http://localhost:3000/api/auth/signin', formData);\n// //             console.log('API response:', response.data);\n// //             if (response.data) {\n// //                 Swal.fire({\n// //                     icon: 'success',\n// //                     title: 'Registration Successful',\n// //                     text: 'You have registered successfully.',\n// //                 });\n// //                 navigate('/login'); // Redirect to login page or another route after successful registration\n// //             } else {\n// //                 Swal.fire({\n// //                     icon: 'warning',\n// //                     title: 'Registration Failed',\n// //                     text: 'Something went wrong...',\n// //                 });\n// //             }\n// //         } catch (error) {\n// //             console.error('Error submitting form:', error);\n// //             Swal.fire({\n// //                 icon: 'error',\n// //                 title: 'Registration Error',\n// //                 text: 'An error occurred while trying to register. Please try again later.',\n// //             });\n// //         }\n// //     };\n// //     return (\n// //         <div className=\"loginsignup\">\n// //             <div className=\"loginsignup-container\">\n// //                 <h1>Register</h1>\n// //                 <form className=\"loginsignup-fields\" onSubmit={handleSubmit}>\n// //                     <input\n// //                         type=\"text\"\n// //                         placeholder=\"Your Name\"\n// //                         name=\"name\"\n// //                         value={formData.name}\n// //                         onChange={handleChange}\n// //                     />\n// //                     <input\n// //                         type=\"email\"\n// //                         placeholder=\"Email Address\"\n// //                         name=\"email\"\n// //                         value={formData.email}\n// //                         onChange={handleChange}\n// //                     />\n// //                     <div className=\"password-container\">\n// //                         <input\n// //                             type={passwordVisible ? 'text' : 'password'}\n// //                             placeholder=\"Password\"\n// //                             name=\"password\"\n// //                             value={formData.password}\n// //                             onChange={handleChange}\n// //                         />\n// //                         <button\n// //                             type=\"button\"\n// //                             className=\"eye-button\"\n// //                             onClick={togglePasswordVisibility}\n// //                         >\n// //                             {passwordVisible ? <HiEyeOff /> : <HiEye />}\n// //                         </button>\n// //                     </div>\n// //                     <p className=\"loginsignup-login\">\n// //                         Already have an account? <a href=\"/login\">Login here</a>\n// //                     </p>\n// //                     <div className=\"loginsignup-agree\">\n// //                         <input\n// //                             type=\"checkbox\"\n// //                             name=\"agree\"\n// //                             id=\"agree\"\n// //                             checked={isChecked}\n// //                             onChange={handleCheckboxChange}\n// //                         />\n// //                         <label htmlFor=\"agree\">\n// //                             By continuing, I agree to the terms of use & privacy policy.\n// //                         </label>\n// //                     </div>\n// //                     <button type=\"submit\" disabled={!isChecked}>\n// //                         Register\n// //                     </button>\n// //                 </form>\n// //             </div>\n// //         </div>\n// //     );\n// // };\n// // export default Signin;","map":{"version":3,"names":["React","useState","axios","Swal","useNavigate","HiEye","HiEyeOff","jsx","_jsx","jsxs","_jsxs","Signin","formData","setFormData","name","email","password","role","isChecked","setIsChecked","passwordVisible","setPasswordVisible","navigate","handleChange","e","value","target","handleCheckboxChange","checked","togglePasswordVisibility","handleSubmit","preventDefault","fire","icon","title","text","passwordRegex","test","emailRegex","response","post","console","log","data","error","className","children","onSubmit","type","placeholder","onChange","onClick","href","id","htmlFor","disabled"],"sources":["E:/Final Year project/Event Hub/Frontend/abhijeetproject/src/main/Signin/Signin.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2'; // Import SweetAlert\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Signin.css'; // Import the CSS file for styling\r\nimport { HiEye, HiEyeOff } from 'react-icons/hi'; // Import eye icons for show/hide functionality\r\n\r\nconst Signin = () => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        role: 'user', // Default role set to 'user'\r\n    });\r\n\r\n    const [isChecked, setIsChecked] = useState(false); // State to track checkbox status\r\n    const [passwordVisible, setPasswordVisible] = useState(false); // State to track password visibility\r\n    const navigate = useNavigate();\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleCheckboxChange = (e) => {\r\n        setIsChecked(e.target.checked);\r\n    };\r\n\r\n    const togglePasswordVisibility = () => {\r\n        setPasswordVisible(!passwordVisible);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Check if any of the input fields are empty\r\n        if (!formData.name || !formData.email || !formData.password) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Validation Error',\r\n                text: 'Please fill in all fields.',\r\n            });\r\n            return;\r\n        }\r\n\r\n        // Password validation\r\n        const passwordRegex = /^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,}$/;\r\n        if (!passwordRegex.test(formData.password)) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Validation Error',\r\n                text: 'Password must contain at least one alphabetic character, one digit, one special character, and be at least 8 characters long.',\r\n            });\r\n            return;\r\n        }\r\n\r\n        // Email validation\r\n        const emailRegex = /\\S+@\\S+\\.\\S+/;\r\n        if (!emailRegex.test(formData.email)) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Validation Error',\r\n                text: 'Please enter a valid email address.',\r\n            });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:3300/api/auth/signin', formData);\r\n            console.log('API response:', response.data);\r\n            \r\n            if (response.data) {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Registration Successful',\r\n                    text: 'You have registered successfully.',\r\n                });\r\n                navigate('/login'); // Redirect to login page after successful registration\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'warning',\r\n                    title: 'Registration Failed',\r\n                    text: 'Something went wrong...',\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error('Error submitting form:', error);\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Registration Error',\r\n                text: 'An error occurred while trying to register. Please try again later.',\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"loginsignup\">\r\n            <div className=\"loginsignup-container\">\r\n                <h1>Register</h1>\r\n                <form className=\"loginsignup-fields\" onSubmit={handleSubmit}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Your Name\"\r\n                        name=\"name\"\r\n                        value={formData.name}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Email Address\"\r\n                        name=\"email\"\r\n                        value={formData.email}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <div className=\"password-container\">\r\n                        <input\r\n                            type={passwordVisible ? 'text' : 'password'}\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            value={formData.password}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"eye-button\"\r\n                            onClick={togglePasswordVisibility}\r\n                        >\r\n                            {passwordVisible ? <HiEyeOff /> : <HiEye />}\r\n                        </button>\r\n                    </div>\r\n\r\n                    {/* Role Selection Dropdown */}\r\n                    <select\r\n                        name=\"role\"\r\n                        value={formData.role}\r\n                        onChange={handleChange}\r\n                        className=\"loginsignup-role\"\r\n                    >\r\n                        <option value=\"user\">User</option>\r\n                        <option value=\"event-owner\">Event Owner</option>\r\n                        <option value=\"admin\">Admin</option>\r\n                    </select>\r\n\r\n                    <p className=\"loginsignup-login\">\r\n                        Already have an account? <a href=\"/login\">Login here</a>\r\n                    </p>\r\n                    <div className=\"loginsignup-agree\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"agree\"\r\n                            id=\"agree\"\r\n                            checked={isChecked}\r\n                            onChange={handleCheckboxChange}\r\n                        />\r\n                        <label htmlFor=\"agree\">\r\n                            By continuing, I agree to the terms of use & privacy policy.\r\n                        </label>\r\n                    </div>\r\n                    <button type=\"submit\" disabled={!isChecked}>\r\n                        Register\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Signin;\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import Swal from 'sweetalert2'; // Import SweetAlert\r\n// import { useNavigate } from 'react-router-dom';\r\n// import './Signin.css'; // Import the CSS file for styling\r\n// import { HiEye, HiEyeOff } from 'react-icons/hi'; // Import eye icons for show/hide functionality\r\n\r\n// const Signin = () => {\r\n//     const [formData, setFormData] = useState({\r\n//         name: '',\r\n//         email: '',\r\n//         password: '',\r\n//         role: 'user', // Default role set to 'user'\r\n//     });\r\n\r\n//     const [isChecked, setIsChecked] = useState(false); // State to track checkbox status\r\n//     const [passwordVisible, setPasswordVisible] = useState(false); // State to track password visibility\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setFormData({\r\n//             ...formData,\r\n//             [name]: value,\r\n//         });\r\n//     };\r\n\r\n//     const handleCheckboxChange = (e) => {\r\n//         setIsChecked(e.target.checked);\r\n//     };\r\n\r\n//     const togglePasswordVisibility = () => {\r\n//         setPasswordVisible(!passwordVisible);\r\n//     };\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n\r\n//         // Check if any of the input fields are empty\r\n//         if (!formData.name || !formData.email || !formData.password) {\r\n//             Swal.fire({\r\n//                 icon: 'error',\r\n//                 title: 'Validation Error',\r\n//                 text: 'Please fill in all fields.',\r\n//             });\r\n//             return;\r\n//         }\r\n\r\n//         // Password validation\r\n//         const passwordRegex = /^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,}$/;\r\n//         if (!passwordRegex.test(formData.password)) {\r\n//             Swal.fire({\r\n//                 icon: 'error',\r\n//                 title: 'Validation Error',\r\n//                 text: 'Password must contain at least one alphabetic character, one digit, one special character, and be at least 8 characters long.',\r\n//             });\r\n//             return;\r\n//         }\r\n\r\n//         // Email validation\r\n//         const emailRegex = /\\S+@\\S+\\.\\S+/;\r\n//         if (!emailRegex.test(formData.email)) {\r\n//             Swal.fire({\r\n//                 icon: 'error',\r\n//                 title: 'Validation Error',\r\n//                 text: 'Please enter a valid email address.',\r\n//             });\r\n//             return;\r\n//         }\r\n\r\n//         try {\r\n//             const response = await axios.post('http://localhost:3000/api/auth/signin', formData);\r\n//             console.log('API response:', response.data);\r\n            \r\n//             if (response.data) {\r\n//                 Swal.fire({\r\n//                     icon: 'success',\r\n//                     title: 'Registration Successful',\r\n//                     text: 'You have registered successfully.',\r\n//                 });\r\n//                 navigate('/login'); // Redirect to login page or another route after successful registration\r\n//             } else {\r\n//                 Swal.fire({\r\n//                     icon: 'warning',\r\n//                     title: 'Registration Failed',\r\n//                     text: 'Something went wrong...',\r\n//                 });\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('Error submitting form:', error);\r\n//             Swal.fire({\r\n//                 icon: 'error',\r\n//                 title: 'Registration Error',\r\n//                 text: 'An error occurred while trying to register. Please try again later.',\r\n//             });\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"loginsignup\">\r\n//             <div className=\"loginsignup-container\">\r\n//                 <h1>Register</h1>\r\n//                 <form className=\"loginsignup-fields\" onSubmit={handleSubmit}>\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         placeholder=\"Your Name\"\r\n//                         name=\"name\"\r\n//                         value={formData.name}\r\n//                         onChange={handleChange}\r\n//                     />\r\n//                     <input\r\n//                         type=\"email\"\r\n//                         placeholder=\"Email Address\"\r\n//                         name=\"email\"\r\n//                         value={formData.email}\r\n//                         onChange={handleChange}\r\n//                     />\r\n//                     <div className=\"password-container\">\r\n//                         <input\r\n//                             type={passwordVisible ? 'text' : 'password'}\r\n//                             placeholder=\"Password\"\r\n//                             name=\"password\"\r\n//                             value={formData.password}\r\n//                             onChange={handleChange}\r\n//                         />\r\n//                         <button\r\n//                             type=\"button\"\r\n//                             className=\"eye-button\"\r\n//                             onClick={togglePasswordVisibility}\r\n//                         >\r\n//                             {passwordVisible ? <HiEyeOff /> : <HiEye />}\r\n//                         </button>\r\n//                     </div>\r\n\r\n//                     {/* Role Selection Dropdown */}\r\n//                     <select\r\n//                         name=\"role\"\r\n//                         value={formData.role}\r\n//                         onChange={handleChange}\r\n//                         className=\"loginsignup-role\"\r\n//                     >\r\n//                         <option value=\"user\">User</option>\r\n//                         <option value=\"event-owner\">Event Owner</option>\r\n//                         <option value=\"admin\">Admin</option>\r\n//                     </select>\r\n\r\n//                     <p className=\"loginsignup-login\">\r\n//                         Already have an account? <a href=\"/login\">Login here</a>\r\n//                     </p>\r\n//                     <div className=\"loginsignup-agree\">\r\n//                         <input\r\n//                             type=\"checkbox\"\r\n//                             name=\"agree\"\r\n//                             id=\"agree\"\r\n//                             checked={isChecked}\r\n//                             onChange={handleCheckboxChange}\r\n//                         />\r\n//                         <label htmlFor=\"agree\">\r\n//                             By continuing, I agree to the terms of use & privacy policy.\r\n//                         </label>\r\n//                     </div>\r\n//                     <button type=\"submit\" disabled={!isChecked}>\r\n//                         Register\r\n//                     </button>\r\n//                 </form>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Signin;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // import React, { useState } from 'react';\r\n// // import axios from 'axios';\r\n// // import Swal from 'sweetalert2'; // Import SweetAlert\r\n// // import { useNavigate } from 'react-router-dom';\r\n// // import './Signin.css'; // Import the CSS file for styling\r\n// // import { HiEye, HiEyeOff } from 'react-icons/hi'; // Import eye icons for show/hide functionality\r\n\r\n// // const Signin = () => {\r\n// //     const [formData, setFormData] = useState({\r\n// //         name: '',\r\n// //         email: '',\r\n// //         password: '',\r\n// //     });\r\n\r\n// //     const [isChecked, setIsChecked] = useState(false); // State to track checkbox status\r\n// //     const [passwordVisible, setPasswordVisible] = useState(false); // State to track password visibility\r\n// //     const navigate = useNavigate();\r\n\r\n// //     const handleChange = (e) => {\r\n// //         const { name, value } = e.target;\r\n// //         setFormData({\r\n// //             ...formData,\r\n// //             [name]: value,\r\n// //         });\r\n// //     };\r\n\r\n// //     const handleCheckboxChange = (e) => {\r\n// //         setIsChecked(e.target.checked);\r\n// //     };\r\n\r\n// //     const togglePasswordVisibility = () => {\r\n// //         setPasswordVisible(!passwordVisible);\r\n// //     };\r\n\r\n// //     const handleSubmit = async (e) => {\r\n// //         e.preventDefault();\r\n\r\n// //         // Check if any of the input fields are empty\r\n// //         if (!formData.name || !formData.email || !formData.password) {\r\n// //             Swal.fire({\r\n// //                 icon: 'error',\r\n// //                 title: 'Validation Error',\r\n// //                 text: 'Please fill in all fields.',\r\n// //             });\r\n// //             return;\r\n// //         }\r\n\r\n// //         // Password validation\r\n// //         const passwordRegex = /^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,}$/;\r\n// //         if (!passwordRegex.test(formData.password)) {\r\n// //             Swal.fire({\r\n// //                 icon: 'error',\r\n// //                 title: 'Validation Error',\r\n// //                 text: 'Password must contain at least one alphabetic character, one digit, one special character, and be at least 8 characters long.',\r\n// //             });\r\n// //             return;\r\n// //         }\r\n\r\n// //         // Email validation\r\n// //         const emailRegex = /\\S+@\\S+\\.\\S+/;\r\n// //         if (!emailRegex.test(formData.email)) {\r\n// //             Swal.fire({\r\n// //                 icon: 'error',\r\n// //                 title: 'Validation Error',\r\n// //                 text: 'Please enter a valid email address.',\r\n// //             });\r\n// //             return;\r\n// //         }\r\n\r\n// //         try {\r\n// //             const response = await axios.post('http://localhost:3000/api/auth/signin', formData);\r\n// //             console.log('API response:', response.data);\r\n            \r\n// //             if (response.data) {\r\n// //                 Swal.fire({\r\n// //                     icon: 'success',\r\n// //                     title: 'Registration Successful',\r\n// //                     text: 'You have registered successfully.',\r\n// //                 });\r\n// //                 navigate('/login'); // Redirect to login page or another route after successful registration\r\n// //             } else {\r\n// //                 Swal.fire({\r\n// //                     icon: 'warning',\r\n// //                     title: 'Registration Failed',\r\n// //                     text: 'Something went wrong...',\r\n// //                 });\r\n// //             }\r\n// //         } catch (error) {\r\n// //             console.error('Error submitting form:', error);\r\n// //             Swal.fire({\r\n// //                 icon: 'error',\r\n// //                 title: 'Registration Error',\r\n// //                 text: 'An error occurred while trying to register. Please try again later.',\r\n// //             });\r\n// //         }\r\n// //     };\r\n\r\n// //     return (\r\n// //         <div className=\"loginsignup\">\r\n// //             <div className=\"loginsignup-container\">\r\n// //                 <h1>Register</h1>\r\n// //                 <form className=\"loginsignup-fields\" onSubmit={handleSubmit}>\r\n// //                     <input\r\n// //                         type=\"text\"\r\n// //                         placeholder=\"Your Name\"\r\n// //                         name=\"name\"\r\n// //                         value={formData.name}\r\n// //                         onChange={handleChange}\r\n// //                     />\r\n// //                     <input\r\n// //                         type=\"email\"\r\n// //                         placeholder=\"Email Address\"\r\n// //                         name=\"email\"\r\n// //                         value={formData.email}\r\n// //                         onChange={handleChange}\r\n// //                     />\r\n// //                     <div className=\"password-container\">\r\n// //                         <input\r\n// //                             type={passwordVisible ? 'text' : 'password'}\r\n// //                             placeholder=\"Password\"\r\n// //                             name=\"password\"\r\n// //                             value={formData.password}\r\n// //                             onChange={handleChange}\r\n// //                         />\r\n// //                         <button\r\n// //                             type=\"button\"\r\n// //                             className=\"eye-button\"\r\n// //                             onClick={togglePasswordVisibility}\r\n// //                         >\r\n// //                             {passwordVisible ? <HiEyeOff /> : <HiEye />}\r\n// //                         </button>\r\n// //                     </div>\r\n// //                     <p className=\"loginsignup-login\">\r\n// //                         Already have an account? <a href=\"/login\">Login here</a>\r\n// //                     </p>\r\n// //                     <div className=\"loginsignup-agree\">\r\n// //                         <input\r\n// //                             type=\"checkbox\"\r\n// //                             name=\"agree\"\r\n// //                             id=\"agree\"\r\n// //                             checked={isChecked}\r\n// //                             onChange={handleCheckboxChange}\r\n// //                         />\r\n// //                         <label htmlFor=\"agree\">\r\n// //                             By continuing, I agree to the terms of use & privacy policy.\r\n// //                         </label>\r\n// //                     </div>\r\n// //                     <button type=\"submit\" disabled={!isChecked}>\r\n// //                         Register\r\n// //                     </button>\r\n// //                 </form>\r\n// //             </div>\r\n// //         </div>\r\n// //     );\r\n// // };\r\n\r\n// // export default Signin;\r\n"],"mappings":"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B,QAAA,CAAC,OAAK,CAAQ,CAAC,EAChC,CAAC,cAETpC,KAAA,MAAGmC,SAAS,CAAC,mBAAmB,CAAAC,QAAA,EAAC,2BACJ,cAAAtC,IAAA,MAAG4C,IAAI,CAAC,QAAQ,CAAAN,QAAA,CAAC,YAAU,CAAG,CAAC,EACzD,CAAC,cACJpC,KAAA,QAAKmC,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAC9BtC,IAAA,UACIwC,IAAI,CAAC,UAAU,CACflC,IAAI,CAAC,OAAO,CACZuC,EAAE,CAAC,OAAO,CACVzB,OAAO,CAAEV,SAAU,CACnBgC,QAAQ,CAAEvB,oBAAqB,CAClC,CAAC,cACFnB,IAAA,UAAO8C,OAAO,CAAC,OAAO,CAAAR,QAAA,CAAC,8DAEvB,CAAO,CAAC,EACP,CAAC,cACNtC,IAAA,WAAQwC,IAAI,CAAC,QAAQ,CAACO,QAAQ,CAAE,CAACrC,SAAU,CAAA4B,QAAA,CAAC,UAE5C,CAAQ,CAAC,EACP,CAAC,EACN,CAAC,CACL,CAAC,CAEd,CAAC,CAED,cAAe,CAAAnC,MAAM,CAKrB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAoBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}