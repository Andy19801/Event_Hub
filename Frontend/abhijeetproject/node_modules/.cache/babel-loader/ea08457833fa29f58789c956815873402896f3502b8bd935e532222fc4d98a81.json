{"ast":null,"code":"var _jsxFileName = \"E:\\\\Final Year project\\\\Event Hub\\\\Frontend\\\\abhijeetproject\\\\src\\\\main\\\\ProtectedRoute.jsx\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  isLoggedIn,\n  userRole,\n  requiredRole,\n  children\n}) => {\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 12\n    }, this);\n  }\n  if (requiredRole && userRole !== requiredRole) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this); // Redirect if user role doesn't match\n  }\n  return children;\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\n// import React from 'react';\n// import { Navigate } from 'react-router-dom';\n// import { useSelector } from 'react-redux';\n\n// const ProtectedRoute = ({ element: Component, ...rest }) => {\n//   const isLoggedIn = useSelector((state) => state.auth.token !== null);\n\n//   return isLoggedIn ? <Component {...rest} /> : <Navigate to=\"/login\" />;\n// };\n\n// export default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","isLoggedIn","userRole","requiredRole","children","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Final Year project/Event Hub/Frontend/abhijeetproject/src/main/ProtectedRoute.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ isLoggedIn, userRole, requiredRole, children }) => {\r\n  if (!isLoggedIn) {\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  if (requiredRole && userRole !== requiredRole) {\r\n    return <Navigate to=\"/login\" />; // Redirect if user role doesn't match\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import { Navigate } from 'react-router-dom';\r\n// import { useSelector } from 'react-redux';\r\n\r\n// const ProtectedRoute = ({ element: Component, ...rest }) => {\r\n//   const isLoggedIn = useSelector((state) => state.auth.token !== null);\r\n\r\n//   return isLoggedIn ? <Component {...rest} /> : <Navigate to=\"/login\" />;\r\n// };\r\n\r\n// export default ProtectedRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,UAAU;EAAEC,QAAQ;EAAEC,YAAY;EAAEC;AAAS,CAAC,KAAK;EAC3E,IAAI,CAACH,UAAU,EAAE;IACf,oBAAOF,OAAA,CAACF,QAAQ;MAACQ,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;EAEA,IAAIN,YAAY,IAAID,QAAQ,KAAKC,YAAY,EAAE;IAC7C,oBAAOJ,OAAA,CAACF,QAAQ;MAACQ,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC,CAAC;EACnC;EAEA,OAAOL,QAAQ;AACjB,CAAC;AAACM,EAAA,GAVIV,cAAc;AAYpB,eAAeA,cAAc;;AAU7B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}