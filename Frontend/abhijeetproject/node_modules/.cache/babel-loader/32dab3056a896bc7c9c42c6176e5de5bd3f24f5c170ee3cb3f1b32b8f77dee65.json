{"ast":null,"code":"// utils/auth.js\nexport const checkAuthStatus = async () => {\n  // Example implementation: Check for a token in localStorage\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    try {\n      // Optional: Make an API call to verify token validity\n      const response = await fetch('/api/auth/verify-token', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        return true; // Token is valid\n      }\n    } catch (error) {\n      console.error('Error verifying token:', error);\n    }\n  }\n  return false; // Token not present or invalid\n};","map":{"version":3,"names":["checkAuthStatus","token","localStorage","getItem","response","fetch","method","headers","ok","error","console"],"sources":["E:/Final Year project/Event Hub/Frontend/abhijeetproject/src/utils/auth.js"],"sourcesContent":["// utils/auth.js\r\nexport const checkAuthStatus = async () => {\r\n    // Example implementation: Check for a token in localStorage\r\n    const token = localStorage.getItem('authToken');\r\n    if (token) {\r\n      try {\r\n        // Optional: Make an API call to verify token validity\r\n        const response = await fetch('/api/auth/verify-token', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n          },\r\n        });\r\n  \r\n        if (response.ok) {\r\n          return true; // Token is valid\r\n        }\r\n      } catch (error) {\r\n        console.error('Error verifying token:', error);\r\n      }\r\n    }\r\n    return false; // Token not present or invalid\r\n  };\r\n  "],"mappings":"AAAA;AACA,OAAO,MAAMA,eAAe,GAAG,MAAAA,CAAA,KAAY;EACvC;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC/C,IAAIF,KAAK,EAAE;IACT,IAAI;MACF;MACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,EAAE;QACrDC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUN,KAAK;QAClC;MACF,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACI,EAAE,EAAE;QACf,OAAO,IAAI,CAAC,CAAC;MACf;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF;EACA,OAAO,KAAK,CAAC,CAAC;AAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}