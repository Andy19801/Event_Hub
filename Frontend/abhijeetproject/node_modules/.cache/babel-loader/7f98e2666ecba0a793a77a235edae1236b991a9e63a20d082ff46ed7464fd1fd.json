{"ast":null,"code":"var _jsxFileName = \"E:\\\\Final Year project\\\\Event Hub\\\\Frontend\\\\abhijeetproject\\\\src\\\\components\\\\AA\\\\Admin\\\\Dashboard\\\\AdminDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchUsers, deleteUser, resetError } from '../../../../features/admin/adminActions';\nimport './AdminDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const dispatch = useDispatch();\n\n  // Accessing state from Redux store\n  const {\n    users,\n    loading,\n    error\n  } = useSelector(state => state.admin);\n\n  // Fetch users on component mount\n  useEffect(() => {\n    dispatch(fetchUsers());\n\n    // Cleanup any existing error on unmount\n    return () => {\n      dispatch(resetError());\n    };\n  }, [dispatch]);\n\n  // Handle user deletion\n  const handleDeleteUser = id => {\n    if (window.confirm('Are you sure you want to delete this user?')) {\n      dispatch(deleteUser(id));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Manage Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), users.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No users found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [user.name, \" (\", user.email, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteUser(user._id),\n            children: \"Delete User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminDashboard, \"iPh8OznB/keIwwkQjP9x50Xsfvs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\n\n// // src/features/admin/AdminDashboard.jsx\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { fetchUsers, deleteUser, resetError } from '../../../../features/admin/adminActions';\n\n// const AdminDashboard = () => {\n//     const dispatch = useDispatch();\n//     const { users, loading, error } = useSelector((state) => state.admin);\n\n//     useEffect(() => {   \n//         dispatch(fetchUsers());\n//     }, [dispatch]);\n\n//     const handleDelete = (userId) => {\n//         dispatch(deleteUser(userId));\n//     };\n\n//     const handleResetError = () => {\n//         dispatch(resetError());\n//     };\n\n//     return (\n//         <div>\n//             <h2>Admin Dashboard</h2>\n//             {loading && <p>Loading...</p>}\n//             {error && (\n//                 <div>\n//                     <p>Error: {error}</p>\n//                     <button onClick={handleResetError}>Clear Error</button>\n//                 </div>\n//             )}\n//             <table>\n//                 <thead>\n//                     <tr>\n//                         <th>Name</th>\n//                         <th>Email</th>\n//                         <th>Actions</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {users.map((user) => (\n//                         <tr key={user._id}>\n//                             <td>{user.name}</td>\n//                             <td>{user.email}</td>\n//                             <td>\n//                                 <button onClick={() => handleDelete(user._id)}>Delete</button>\n//                             </td>\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </table>\n//         </div>\n//     );\n// };\n\n// export default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","fetchUsers","deleteUser","resetError","jsxDEV","_jsxDEV","AdminDashboard","_s","dispatch","users","loading","error","state","admin","handleDeleteUser","id","window","confirm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","user","name","email","onClick","_id","_c","$RefreshReg$"],"sources":["E:/Final Year project/Event Hub/Frontend/abhijeetproject/src/components/AA/Admin/Dashboard/AdminDashboard.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchUsers, deleteUser, resetError } from '../../../../features/admin/adminActions';\r\nimport './AdminDashboard.css';\r\n\r\nconst AdminDashboard = () => {\r\n    const dispatch = useDispatch();\r\n    \r\n    // Accessing state from Redux store\r\n    const { users, loading, error } = useSelector((state) => state.admin);\r\n\r\n    // Fetch users on component mount\r\n    useEffect(() => {\r\n        dispatch(fetchUsers());\r\n\r\n        // Cleanup any existing error on unmount\r\n        return () => {\r\n            dispatch(resetError());\r\n        };\r\n    }, [dispatch]);\r\n\r\n    // Handle user deletion\r\n    const handleDeleteUser = (id) => {\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"admin-dashboard\">\r\n            <h1>Admin Dashboard</h1>\r\n\r\n            {loading && <p>Loading...</p>}\r\n            {error && <p className=\"error\">{error}</p>}\r\n\r\n            <section>\r\n                <h2>Manage Users</h2>\r\n                {users.length === 0 ? (\r\n                    <p>No users found</p>\r\n                ) : (\r\n                    <ul>\r\n                        {users.map((user) => (\r\n                            <li key={user._id}>\r\n                                <p>{user.name} ({user.email})</p>\r\n                                <button onClick={() => handleDeleteUser(user._id)}>Delete User</button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                )}\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminDashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // src/features/admin/AdminDashboard.jsx\r\n// import React, { useEffect } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { fetchUsers, deleteUser, resetError } from '../../../../features/admin/adminActions';\r\n\r\n// const AdminDashboard = () => {\r\n//     const dispatch = useDispatch();\r\n//     const { users, loading, error } = useSelector((state) => state.admin);\r\n\r\n//     useEffect(() => {   \r\n//         dispatch(fetchUsers());\r\n//     }, [dispatch]);\r\n\r\n//     const handleDelete = (userId) => {\r\n//         dispatch(deleteUser(userId));\r\n//     };\r\n\r\n//     const handleResetError = () => {\r\n//         dispatch(resetError());\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>Admin Dashboard</h2>\r\n//             {loading && <p>Loading...</p>}\r\n//             {error && (\r\n//                 <div>\r\n//                     <p>Error: {error}</p>\r\n//                     <button onClick={handleResetError}>Clear Error</button>\r\n//                 </div>\r\n//             )}\r\n//             <table>\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <th>Name</th>\r\n//                         <th>Email</th>\r\n//                         <th>Actions</th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                     {users.map((user) => (\r\n//                         <tr key={user._id}>\r\n//                             <td>{user.name}</td>\r\n//                             <td>{user.email}</td>\r\n//                             <td>\r\n//                                 <button onClick={() => handleDelete(user._id)}>Delete</button>\r\n//                             </td>\r\n//                         </tr>\r\n//                     ))}\r\n//                 </tbody>\r\n//             </table>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default AdminDashboard;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}