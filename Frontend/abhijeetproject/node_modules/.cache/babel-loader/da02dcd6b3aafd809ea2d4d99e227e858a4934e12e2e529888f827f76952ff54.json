{"ast":null,"code":"var _jsxFileName = \"E:\\\\Final Year project\\\\Event Hub\\\\Frontend\\\\abhijeetproject\\\\src\\\\components\\\\AA\\\\EventOwner\\\\Dashboard\\\\EventOwnerDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchEvents, fetchBookings, fetchFeedbacks } from '../../../../features/eventOwner/eventOwnerActions';\nimport { selectEvents, selectBookings, selectFeedbacks, selectLoading, selectError } from '../../../../features/eventOwner/eventOwnerSelectors';\nimport EventList from '../EventList';\nimport BookingList from '../BookingList';\nimport FeedbackList from '../FeedbackList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventOwnerDashboard = () => {\n  _s();\n  const dispatch = useDispatch();\n  const events = useSelector(selectEvents);\n  const bookings = useSelector(selectBookings);\n  const feedbacks = useSelector(selectFeedbacks);\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  useEffect(() => {\n    dispatch(fetchEvents());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Event Owner Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EventList, {\n        events: events\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Bookings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BookingList, {\n        bookings: bookings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Feedbacks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FeedbackList, {\n        feedbacks: feedbacks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(EventOwnerDashboard, \"eQb46BDHMdyOQXOBPo2WguyJc1s=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n_c = EventOwnerDashboard;\nexport default EventOwnerDashboard;\n\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import {\n//   fetchBookings,\n//   fetchFeedbacks,\n//   createEvent,\n//   updateEvent,\n//   deleteEvent,\n// } from '../../../../features/eventOwner/eventOwnerActions';\n// import {\n//   selectBookings,\n//   selectFeedbacks,\n//   selectEvents,\n//   selectLoading,\n//   selectError,\n// } from '../../../../features/eventOwner/eventOwnerSelectors'; // Adjust the import path as necessary\n// import './EventOwnerDashboard.css';\n\n// const EventOwnerDashboard = () => {\n//   const dispatch = useDispatch();\n//   const bookings = useSelector(selectBookings);\n//   const feedbacks = useSelector(selectFeedbacks);\n//   const events = useSelector(selectEvents);\n//   const loading = useSelector(selectLoading);\n//   const error = useSelector(selectError);\n\n//   useEffect(() => {\n//     const eventId = 'your-event-id'; // Replace with actual event ID\n//     dispatch(fetchBookings(eventId));\n//     dispatch(fetchFeedbacks(eventId));\n//   }, [dispatch]);\n\n//   const handleCreateEvent = (eventDetails) => {\n//     dispatch(createEvent(eventDetails));\n//   };\n\n//   const handleUpdateEvent = (eventId, updatedDetails) => {\n//     dispatch(updateEvent({ eventId, updatedDetails }));\n//   };\n\n//   const handleDeleteEvent = (eventId) => {\n//     dispatch(deleteEvent(eventId));\n//   };\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div>Error: {error}</div>;\n//   }\n\n//   return (\n//     <div className=\"dashboard\">\n//       <h1>Event Owner Dashboard</h1>\n\n//       <h2>Bookings</h2>\n//       <ul>\n//         {bookings.map((booking) => (\n//           <li key={booking.id}>{booking.details}</li>\n//         ))}\n//       </ul>\n\n//       <h2>Feedbacks</h2>\n//       <ul>\n//         {feedbacks.map((feedback) => (\n//           <li key={feedback.id}>{feedback.message}</li>\n//         ))}\n//       </ul>\n\n//       <h2>Manage Events</h2>\n//       {events.map((event) => (\n//         <div key={event.id}>\n//           <h3>{event.title}</h3>\n//           <button className=\"button\" onClick={() => handleUpdateEvent(event.id, { title: 'Updated Title' })}>\n//             Update Event\n//           </button>\n//           <button className=\"button\" onClick={() => handleDeleteEvent(event.id)}>Delete Event</button>\n//         </div>\n//       ))}\n\n//       <button className=\"button\" onClick={() => handleCreateEvent({ title: 'New Event', details: 'Event details here' })}>\n//         Create New Event\n//       </button>\n//     </div>\n//   );\n// };\n\n// export default EventOwnerDashboard;\nvar _c;\n$RefreshReg$(_c, \"EventOwnerDashboard\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","fetchEvents","fetchBookings","fetchFeedbacks","selectEvents","selectBookings","selectFeedbacks","selectLoading","selectError","EventList","BookingList","FeedbackList","jsxDEV","_jsxDEV","EventOwnerDashboard","_s","dispatch","events","bookings","feedbacks","loading","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Final Year project/Event Hub/Frontend/abhijeetproject/src/components/AA/EventOwner/Dashboard/EventOwnerDashboard.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchEvents, fetchBookings, fetchFeedbacks } from '../../../../features/eventOwner/eventOwnerActions';\r\nimport { selectEvents, selectBookings, selectFeedbacks, selectLoading, selectError } from '../../../../features/eventOwner/eventOwnerSelectors';\r\nimport EventList from '../EventList';\r\nimport BookingList from '../BookingList';\r\nimport FeedbackList from '../FeedbackList';\r\n\r\nconst EventOwnerDashboard = () => {\r\n    const dispatch = useDispatch();\r\n    const events = useSelector(selectEvents);\r\n    const bookings = useSelector(selectBookings);\r\n    const feedbacks = useSelector(selectFeedbacks);\r\n    const loading = useSelector(selectLoading);\r\n    const error = useSelector(selectError); \r\n\r\n    useEffect(() => {\r\n        dispatch(fetchEvents());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Event Owner Dashboard</h1>\r\n            {loading && <p>Loading...</p>}\r\n            {error && <p>{error}</p>}\r\n            \r\n            <section>\r\n                <h2>My Events</h2>\r\n                <EventList events={events} />\r\n            </section>\r\n\r\n            <section>\r\n                <h2>Bookings</h2>\r\n                <BookingList bookings={bookings} />\r\n            </section>\r\n\r\n            <section>\r\n                <h2>Feedbacks</h2>\r\n                <FeedbackList feedbacks={feedbacks} />\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventOwnerDashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import {\r\n//   fetchBookings,\r\n//   fetchFeedbacks,\r\n//   createEvent,\r\n//   updateEvent,\r\n//   deleteEvent,\r\n// } from '../../../../features/eventOwner/eventOwnerActions';\r\n// import {\r\n//   selectBookings,\r\n//   selectFeedbacks,\r\n//   selectEvents,\r\n//   selectLoading,\r\n//   selectError,\r\n// } from '../../../../features/eventOwner/eventOwnerSelectors'; // Adjust the import path as necessary\r\n// import './EventOwnerDashboard.css';\r\n\r\n// const EventOwnerDashboard = () => {\r\n//   const dispatch = useDispatch();\r\n//   const bookings = useSelector(selectBookings);\r\n//   const feedbacks = useSelector(selectFeedbacks);\r\n//   const events = useSelector(selectEvents);\r\n//   const loading = useSelector(selectLoading);\r\n//   const error = useSelector(selectError);\r\n\r\n//   useEffect(() => {\r\n//     const eventId = 'your-event-id'; // Replace with actual event ID\r\n//     dispatch(fetchBookings(eventId));\r\n//     dispatch(fetchFeedbacks(eventId));\r\n//   }, [dispatch]);\r\n\r\n//   const handleCreateEvent = (eventDetails) => {\r\n//     dispatch(createEvent(eventDetails));\r\n//   };\r\n\r\n//   const handleUpdateEvent = (eventId, updatedDetails) => {\r\n//     dispatch(updateEvent({ eventId, updatedDetails }));\r\n//   };\r\n\r\n//   const handleDeleteEvent = (eventId) => {\r\n//     dispatch(deleteEvent(eventId));\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   if (error) {\r\n//     return <div>Error: {error}</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"dashboard\">\r\n//       <h1>Event Owner Dashboard</h1>\r\n\r\n//       <h2>Bookings</h2>\r\n//       <ul>\r\n//         {bookings.map((booking) => (\r\n//           <li key={booking.id}>{booking.details}</li>\r\n//         ))}\r\n//       </ul>\r\n\r\n//       <h2>Feedbacks</h2>\r\n//       <ul>\r\n//         {feedbacks.map((feedback) => (\r\n//           <li key={feedback.id}>{feedback.message}</li>\r\n//         ))}\r\n//       </ul>\r\n\r\n//       <h2>Manage Events</h2>\r\n//       {events.map((event) => (\r\n//         <div key={event.id}>\r\n//           <h3>{event.title}</h3>\r\n//           <button className=\"button\" onClick={() => handleUpdateEvent(event.id, { title: 'Updated Title' })}>\r\n//             Update Event\r\n//           </button>\r\n//           <button className=\"button\" onClick={() => handleDeleteEvent(event.id)}>Delete Event</button>\r\n//         </div>\r\n//       ))}\r\n      \r\n//       <button className=\"button\" onClick={() => handleCreateEvent({ title: 'New Event', details: 'Event details here' })}>\r\n//         Create New Event\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default EventOwnerDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}