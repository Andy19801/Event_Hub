{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';// Create a slice of the Redux store to manage login state\nexport const counterSlice=createSlice({name:'counter',// Name of the slice\ninitialState:{isLoggedIn:false// Initial state of login status\n},reducers:{// Action to toggle login state\ntoggleLoginState:(state,action)=>{state.isLoggedIn=action.payload;// Update login state based on payload\n}// Additional actions can be added here if needed\n}});// Export the action creators generated by createSlice\nexport const{toggleLoginState}=counterSlice.actions;// Export the reducer to be used in the store\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","counterSlice","name","initialState","isLoggedIn","reducers","toggleLoginState","state","action","payload","actions","reducer"],"sources":["G:/Event Event Hub/Frontend/abhijeetproject/src/features/counter/counterSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\n// Create a slice of the Redux store to manage login state\r\nexport const counterSlice = createSlice({\r\n    name: 'counter', // Name of the slice\r\n    initialState: {\r\n        isLoggedIn: false, // Initial state of login status\r\n    },\r\n    reducers: {\r\n        // Action to toggle login state\r\n        toggleLoginState: (state, action) => {\r\n            state.isLoggedIn = action.payload; // Update login state based on payload\r\n        },\r\n        // Additional actions can be added here if needed\r\n    },\r\n});\r\n\r\n// Export the action creators generated by createSlice\r\nexport const { toggleLoginState } = counterSlice.actions;\r\n\r\n// Export the reducer to be used in the store\r\nexport default counterSlice.reducer;\r\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C;AACA,MAAO,MAAM,CAAAC,YAAY,CAAGD,WAAW,CAAC,CACpCE,IAAI,CAAE,SAAS,CAAE;AACjBC,YAAY,CAAE,CACVC,UAAU,CAAE,KAAO;AACvB,CAAC,CACDC,QAAQ,CAAE,CACN;AACAC,gBAAgB,CAAEA,CAACC,KAAK,CAAEC,MAAM,GAAK,CACjCD,KAAK,CAACH,UAAU,CAAGI,MAAM,CAACC,OAAO,CAAE;AACvC,CACA;AACJ,CACJ,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAEH,gBAAiB,CAAC,CAAGL,YAAY,CAACS,OAAO,CAExD;AACA,cAAe,CAAAT,YAAY,CAACU,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}