{"ast":null,"code":"// utils/auth.js\nexport const checkAuthStatus=async()=>{// Example implementation: Check for a token in localStorage\nconst token=localStorage.getItem('authToken');if(token){try{// Optional: Make an API call to verify token validity\nconst response=await fetch('/api/auth/verify-token',{method:'GET',headers:{'Authorization':`Bearer ${token}`}});if(response.ok){return true;// Token is valid\n}}catch(error){console.error('Error verifying token:',error);}}return false;// Token not present or invalid\n};","map":{"version":3,"names":["checkAuthStatus","token","localStorage","getItem","response","fetch","method","headers","ok","error","console"],"sources":["G:/Event Event Hub/Frontend/abhijeetproject/src/utils/auth.js"],"sourcesContent":["// utils/auth.js\r\nexport const checkAuthStatus = async () => {\r\n    // Example implementation: Check for a token in localStorage\r\n    const token = localStorage.getItem('authToken');\r\n    if (token) {\r\n      try {\r\n        // Optional: Make an API call to verify token validity\r\n        const response = await fetch('/api/auth/verify-token', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n          },\r\n        });\r\n  \r\n        if (response.ok) {\r\n          return true; // Token is valid\r\n        }\r\n      } catch (error) {\r\n        console.error('Error verifying token:', error);\r\n      }\r\n    }\r\n    return false; // Token not present or invalid\r\n  };\r\n  "],"mappings":"AAAA;AACA,MAAO,MAAM,CAAAA,eAAe,CAAG,KAAAA,CAAA,GAAY,CACvC;AACA,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAC/C,GAAIF,KAAK,CAAE,CACT,GAAI,CACF;AACA,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,wBAAwB,CAAE,CACrDC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,eAAe,CAAE,UAAUN,KAAK,EAClC,CACF,CAAC,CAAC,CAEF,GAAIG,QAAQ,CAACI,EAAE,CAAE,CACf,MAAO,KAAI,CAAE;AACf,CACF,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAChD,CACF,CACA,MAAO,MAAK,CAAE;AAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}