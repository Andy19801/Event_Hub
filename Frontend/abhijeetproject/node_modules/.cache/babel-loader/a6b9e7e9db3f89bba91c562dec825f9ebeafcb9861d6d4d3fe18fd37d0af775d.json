{"ast":null,"code":"// ProtectedRoute.jsx\nimport React from'react';import{Route,Navigate}from'react-router-dom';import{useSelector}from'react-redux';import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{component:Component,...rest}=_ref;const isLoggedIn=useSelector(state=>state.auth.token!==null);return/*#__PURE__*/_jsx(Route,{...rest,element:isLoggedIn?/*#__PURE__*/_jsx(Component,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})});};export default ProtectedRoute;","map":{"version":3,"names":["React","Route","Navigate","useSelector","jsx","_jsx","ProtectedRoute","_ref","component","Component","rest","isLoggedIn","state","auth","token","element","to"],"sources":["G:/Event Event Hub/Frontend/abhijeetproject/src/main/ProtectedRoute.jsx"],"sourcesContent":["// ProtectedRoute.jsx\r\nimport React from 'react';\r\nimport { Route, Navigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  const isLoggedIn = useSelector((state) => state.auth.token !== null);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      element={isLoggedIn ? <Component /> : <Navigate to=\"/login\" />}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,KAAK,CAAEC,QAAQ,KAAQ,kBAAkB,CAClD,OAASC,WAAW,KAAQ,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1C,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAuC,IAAtC,CAAEC,SAAS,CAAEC,SAAS,CAAE,GAAGC,IAAK,CAAC,CAAAH,IAAA,CACvD,KAAM,CAAAI,UAAU,CAAGR,WAAW,CAAES,KAAK,EAAKA,KAAK,CAACC,IAAI,CAACC,KAAK,GAAK,IAAI,CAAC,CAEpE,mBACET,IAAA,CAACJ,KAAK,KACAS,IAAI,CACRK,OAAO,CAAEJ,UAAU,cAAGN,IAAA,CAACI,SAAS,GAAE,CAAC,cAAGJ,IAAA,CAACH,QAAQ,EAACc,EAAE,CAAC,QAAQ,CAAE,CAAE,CAChE,CAAC,CAEN,CAAC,CAED,cAAe,CAAAV,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}