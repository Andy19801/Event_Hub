{"ast":null,"code":"import{createSlice,createAsyncThunk}from'@reduxjs/toolkit';import axios from'axios';// Define an initial state\nconst initialState={token:null,user:null,loading:false,error:null};// Async thunk for login\nexport const loginUser=createAsyncThunk('auth/login',async credentials=>{const response=await axios.post('/api/auth/login',credentials);return response.data;// Assumes the response contains { token, user }\n});// Async thunk for logout\nexport const logoutUser=createAsyncThunk('auth/logout',async()=>{// Perform any logout logic here (e.g., invalidate token)\nreturn null;// Return null to reset the state\n});// Create the auth slice\nconst authSlice=createSlice({name:'auth',initialState,reducers:{logout:state=>{state.token=null;state.user=null;}},extraReducers:builder=>{builder.addCase(loginUser.pending,state=>{state.loading=true;state.error=null;}).addCase(loginUser.fulfilled,(state,action)=>{state.loading=false;state.token=action.payload.token;state.user=action.payload.user;}).addCase(loginUser.rejected,(state,action)=>{state.loading=false;state.error=action.error.message;}).addCase(logoutUser.fulfilled,state=>{state.token=null;state.user=null;});}});// Export the actions and reducer\nexport const{logout}=authSlice.actions;export default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","token","user","loading","error","loginUser","credentials","response","post","data","logoutUser","authSlice","name","reducers","logout","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","message","actions","reducer"],"sources":["D:/New folder/Event Hub/Frontend/abhijeetproject/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\n// Define an initial state\r\nconst initialState = {\r\n  token: null,\r\n  user: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\n// Async thunk for login\r\nexport const loginUser = createAsyncThunk('auth/login', async (credentials) => {\r\n  const response = await axios.post('/api/auth/login', credentials);\r\n  return response.data; // Assumes the response contains { token, user }\r\n});\r\n\r\n// Async thunk for logout\r\nexport const logoutUser = createAsyncThunk('auth/logout', async () => {\r\n  // Perform any logout logic here (e.g., invalidate token)\r\n  return null; // Return null to reset the state\r\n});\r\n\r\n// Create the auth slice\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    logout: (state) => {\r\n      state.token = null;\r\n      state.user = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(loginUser.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(loginUser.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.token = action.payload.token;\r\n        state.user = action.payload.user;\r\n      })\r\n      .addCase(loginUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n      .addCase(logoutUser.fulfilled, (state) => {\r\n        state.token = null;\r\n        state.user = null;\r\n      });\r\n  },\r\n});\r\n\r\n// Export the actions and reducer\r\nexport const { logout } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"AAAA,OAASA,WAAW,CAAEC,gBAAgB,KAAQ,kBAAkB,CAChE,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,YAAY,CAAG,CACnBC,KAAK,CAAE,IAAI,CACXC,IAAI,CAAE,IAAI,CACVC,OAAO,CAAE,KAAK,CACdC,KAAK,CAAE,IACT,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,SAAS,CAAGP,gBAAgB,CAAC,YAAY,CAAE,KAAO,CAAAQ,WAAW,EAAK,CAC7E,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAR,KAAK,CAACS,IAAI,CAAC,iBAAiB,CAAEF,WAAW,CAAC,CACjE,MAAO,CAAAC,QAAQ,CAACE,IAAI,CAAE;AACxB,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAAC,UAAU,CAAGZ,gBAAgB,CAAC,aAAa,CAAE,SAAY,CACpE;AACA,MAAO,KAAI,CAAE;AACf,CAAC,CAAC,CAEF;AACA,KAAM,CAAAa,SAAS,CAAGd,WAAW,CAAC,CAC5Be,IAAI,CAAE,MAAM,CACZZ,YAAY,CACZa,QAAQ,CAAE,CACRC,MAAM,CAAGC,KAAK,EAAK,CACjBA,KAAK,CAACd,KAAK,CAAG,IAAI,CAClBc,KAAK,CAACb,IAAI,CAAG,IAAI,CACnB,CACF,CAAC,CACDc,aAAa,CAAGC,OAAO,EAAK,CAC1BA,OAAO,CACJC,OAAO,CAACb,SAAS,CAACc,OAAO,CAAGJ,KAAK,EAAK,CACrCA,KAAK,CAACZ,OAAO,CAAG,IAAI,CACpBY,KAAK,CAACX,KAAK,CAAG,IAAI,CACpB,CAAC,CAAC,CACDc,OAAO,CAACb,SAAS,CAACe,SAAS,CAAE,CAACL,KAAK,CAAEM,MAAM,GAAK,CAC/CN,KAAK,CAACZ,OAAO,CAAG,KAAK,CACrBY,KAAK,CAACd,KAAK,CAAGoB,MAAM,CAACC,OAAO,CAACrB,KAAK,CAClCc,KAAK,CAACb,IAAI,CAAGmB,MAAM,CAACC,OAAO,CAACpB,IAAI,CAClC,CAAC,CAAC,CACDgB,OAAO,CAACb,SAAS,CAACkB,QAAQ,CAAE,CAACR,KAAK,CAAEM,MAAM,GAAK,CAC9CN,KAAK,CAACZ,OAAO,CAAG,KAAK,CACrBY,KAAK,CAACX,KAAK,CAAGiB,MAAM,CAACjB,KAAK,CAACoB,OAAO,CACpC,CAAC,CAAC,CACDN,OAAO,CAACR,UAAU,CAACU,SAAS,CAAGL,KAAK,EAAK,CACxCA,KAAK,CAACd,KAAK,CAAG,IAAI,CAClBc,KAAK,CAACb,IAAI,CAAG,IAAI,CACnB,CAAC,CAAC,CACN,CACF,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAEY,MAAO,CAAC,CAAGH,SAAS,CAACc,OAAO,CAC3C,cAAe,CAAAd,SAAS,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}