{"ast":null,"code":"import React,{useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{fetchEvents,fetchBookings,fetchFeedbacks}from'../../../../features/eventOwner/eventOwnerSlice';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EventOwnerDashboard=()=>{const dispatch=useDispatch();const{events,bookings,feedbacks,loading,error}=useSelector(state=>state.eventOwner);useEffect(()=>{dispatch(fetchEvents());// Example for fetching bookings and feedbacks for a specific event\ndispatch(fetchBookings('eventId'));dispatch(fetchFeedbacks('eventId'));},[dispatch]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Event Owner Dashboard\"}),loading&&/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}),error&&/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"My Events\"}),/*#__PURE__*/_jsx(\"ul\",{children:events.map(event=>/*#__PURE__*/_jsx(\"li\",{children:event.name},event._id))})]}),/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Bookings for Event\"}),/*#__PURE__*/_jsx(\"ul\",{children:bookings.map(booking=>/*#__PURE__*/_jsxs(\"li\",{children:[booking.user.name,\" - \",booking.event.name]},booking._id))})]}),/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Feedback for Event\"}),/*#__PURE__*/_jsx(\"ul\",{children:feedbacks.map(feedback=>/*#__PURE__*/_jsxs(\"li\",{children:[feedback.comment,\" - Rating: \",feedback.rating]},feedback._id))})]})]});};export default EventOwnerDashboard;// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import {\n//   fetchBookings,\n//   fetchFeedbacks,\n//   createEvent,\n//   updateEvent,\n//   deleteEvent,\n// } from '../../../../features/eventOwner/eventOwnerActions';\n// import {\n//   selectBookings,\n//   selectFeedbacks,\n//   selectEvents,\n//   selectLoading,\n//   selectError,\n// } from '../../../../features/eventOwner/eventOwnerSelectors'; // Adjust the import path as necessary\n// import './EventOwnerDashboard.css';\n// const EventOwnerDashboard = () => {\n//   const dispatch = useDispatch();\n//   const bookings = useSelector(selectBookings);\n//   const feedbacks = useSelector(selectFeedbacks);\n//   const events = useSelector(selectEvents);\n//   const loading = useSelector(selectLoading);\n//   const error = useSelector(selectError);\n//   useEffect(() => {\n//     const eventId = 'your-event-id'; // Replace with actual event ID\n//     dispatch(fetchBookings(eventId));\n//     dispatch(fetchFeedbacks(eventId));\n//   }, [dispatch]);\n//   const handleCreateEvent = (eventDetails) => {\n//     dispatch(createEvent(eventDetails));\n//   };\n//   const handleUpdateEvent = (eventId, updatedDetails) => {\n//     dispatch(updateEvent({ eventId, updatedDetails }));\n//   };\n//   const handleDeleteEvent = (eventId) => {\n//     dispatch(deleteEvent(eventId));\n//   };\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n//   if (error) {\n//     return <div>Error: {error}</div>;\n//   }\n//   return (\n//     <div className=\"dashboard\">\n//       <h1>Event Owner Dashboard</h1>\n//       <h2>Bookings</h2>\n//       <ul>\n//         {bookings.map((booking) => (\n//           <li key={booking.id}>{booking.details}</li>\n//         ))}\n//       </ul>\n//       <h2>Feedbacks</h2>\n//       <ul>\n//         {feedbacks.map((feedback) => (\n//           <li key={feedback.id}>{feedback.message}</li>\n//         ))}\n//       </ul>\n//       <h2>Manage Events</h2>\n//       {events.map((event) => (\n//         <div key={event.id}>\n//           <h3>{event.title}</h3>\n//           <button className=\"button\" onClick={() => handleUpdateEvent(event.id, { title: 'Updated Title' })}>\n//             Update Event\n//           </button>\n//           <button className=\"button\" onClick={() => handleDeleteEvent(event.id)}>Delete Event</button>\n//         </div>\n//       ))}\n//       <button className=\"button\" onClick={() => handleCreateEvent({ title: 'New Event', details: 'Event details here' })}>\n//         Create New Event\n//       </button>\n//     </div>\n//   );\n// };\n// export default EventOwnerDashboard;","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","fetchEvents","fetchBookings","fetchFeedbacks","jsx","_jsx","jsxs","_jsxs","EventOwnerDashboard","dispatch","events","bookings","feedbacks","loading","error","state","eventOwner","children","map","event","name","_id","booking","user","feedback","comment","rating"],"sources":["D:/New folder/Event Hub/Frontend/abhijeetproject/src/components/AA/EventOwner/Dashboard/EventOwnerDashboard.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchEvents, fetchBookings, fetchFeedbacks } from '../../../../features/eventOwner/eventOwnerSlice';\r\n\r\nconst EventOwnerDashboard = () => {\r\n    const dispatch = useDispatch();\r\n    const { events, bookings, feedbacks, loading, error } = useSelector((state) => state.eventOwner);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchEvents());\r\n        // Example for fetching bookings and feedbacks for a specific event\r\n        dispatch(fetchBookings('eventId'));\r\n        dispatch(fetchFeedbacks('eventId'));\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Event Owner Dashboard</h1>\r\n            {loading && <p>Loading...</p>}\r\n            {error && <p>{error}</p>}\r\n\r\n            <section>\r\n                <h2>My Events</h2>\r\n                <ul>\r\n                    {events.map(event => (\r\n                        <li key={event._id}>{event.name}</li>\r\n                    ))}\r\n                </ul>\r\n            </section>\r\n\r\n            <section>\r\n                <h2>Bookings for Event</h2>\r\n                <ul>\r\n                    {bookings.map(booking => (\r\n                        <li key={booking._id}>{booking.user.name} - {booking.event.name}</li>\r\n                    ))}\r\n                </ul>\r\n            </section>\r\n\r\n            <section>\r\n                <h2>Feedback for Event</h2>\r\n                <ul>\r\n                    {feedbacks.map(feedback => (\r\n                        <li key={feedback._id}>{feedback.comment} - Rating: {feedback.rating}</li>\r\n                    ))}\r\n                </ul>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventOwnerDashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import {\r\n//   fetchBookings,\r\n//   fetchFeedbacks,\r\n//   createEvent,\r\n//   updateEvent,\r\n//   deleteEvent,\r\n// } from '../../../../features/eventOwner/eventOwnerActions';\r\n// import {\r\n//   selectBookings,\r\n//   selectFeedbacks,\r\n//   selectEvents,\r\n//   selectLoading,\r\n//   selectError,\r\n// } from '../../../../features/eventOwner/eventOwnerSelectors'; // Adjust the import path as necessary\r\n// import './EventOwnerDashboard.css';\r\n\r\n// const EventOwnerDashboard = () => {\r\n//   const dispatch = useDispatch();\r\n//   const bookings = useSelector(selectBookings);\r\n//   const feedbacks = useSelector(selectFeedbacks);\r\n//   const events = useSelector(selectEvents);\r\n//   const loading = useSelector(selectLoading);\r\n//   const error = useSelector(selectError);\r\n\r\n//   useEffect(() => {\r\n//     const eventId = 'your-event-id'; // Replace with actual event ID\r\n//     dispatch(fetchBookings(eventId));\r\n//     dispatch(fetchFeedbacks(eventId));\r\n//   }, [dispatch]);\r\n\r\n//   const handleCreateEvent = (eventDetails) => {\r\n//     dispatch(createEvent(eventDetails));\r\n//   };\r\n\r\n//   const handleUpdateEvent = (eventId, updatedDetails) => {\r\n//     dispatch(updateEvent({ eventId, updatedDetails }));\r\n//   };\r\n\r\n//   const handleDeleteEvent = (eventId) => {\r\n//     dispatch(deleteEvent(eventId));\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   if (error) {\r\n//     return <div>Error: {error}</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"dashboard\">\r\n//       <h1>Event Owner Dashboard</h1>\r\n\r\n//       <h2>Bookings</h2>\r\n//       <ul>\r\n//         {bookings.map((booking) => (\r\n//           <li key={booking.id}>{booking.details}</li>\r\n//         ))}\r\n//       </ul>\r\n\r\n//       <h2>Feedbacks</h2>\r\n//       <ul>\r\n//         {feedbacks.map((feedback) => (\r\n//           <li key={feedback.id}>{feedback.message}</li>\r\n//         ))}\r\n//       </ul>\r\n\r\n//       <h2>Manage Events</h2>\r\n//       {events.map((event) => (\r\n//         <div key={event.id}>\r\n//           <h3>{event.title}</h3>\r\n//           <button className=\"button\" onClick={() => handleUpdateEvent(event.id, { title: 'Updated Title' })}>\r\n//             Update Event\r\n//           </button>\r\n//           <button className=\"button\" onClick={() => handleDeleteEvent(event.id)}>Delete Event</button>\r\n//         </div>\r\n//       ))}\r\n      \r\n//       <button className=\"button\" onClick={() => handleCreateEvent({ title: 'New Event', details: 'Event details here' })}>\r\n//         Create New Event\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default EventOwnerDashboard;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,WAAW,CAAEC,aAAa,CAAEC,cAAc,KAAQ,iDAAiD,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE7G,KAAM,CAAAC,mBAAmB,CAAGA,CAAA,GAAM,CAC9B,KAAM,CAAAC,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAEW,MAAM,CAAEC,QAAQ,CAAEC,SAAS,CAAEC,OAAO,CAAEC,KAAM,CAAC,CAAGd,WAAW,CAAEe,KAAK,EAAKA,KAAK,CAACC,UAAU,CAAC,CAEhGlB,SAAS,CAAC,IAAM,CACZW,QAAQ,CAACR,WAAW,CAAC,CAAC,CAAC,CACvB;AACAQ,QAAQ,CAACP,aAAa,CAAC,SAAS,CAAC,CAAC,CAClCO,QAAQ,CAACN,cAAc,CAAC,SAAS,CAAC,CAAC,CACvC,CAAC,CAAE,CAACM,QAAQ,CAAC,CAAC,CAEd,mBACIF,KAAA,QAAAU,QAAA,eACIZ,IAAA,OAAAY,QAAA,CAAI,uBAAqB,CAAI,CAAC,CAC7BJ,OAAO,eAAIR,IAAA,MAAAY,QAAA,CAAG,YAAU,CAAG,CAAC,CAC5BH,KAAK,eAAIT,IAAA,MAAAY,QAAA,CAAIH,KAAK,CAAI,CAAC,cAExBP,KAAA,YAAAU,QAAA,eACIZ,IAAA,OAAAY,QAAA,CAAI,WAAS,CAAI,CAAC,cAClBZ,IAAA,OAAAY,QAAA,CACKP,MAAM,CAACQ,GAAG,CAACC,KAAK,eACbd,IAAA,OAAAY,QAAA,CAAqBE,KAAK,CAACC,IAAI,EAAtBD,KAAK,CAACE,GAAqB,CACvC,CAAC,CACF,CAAC,EACA,CAAC,cAEVd,KAAA,YAAAU,QAAA,eACIZ,IAAA,OAAAY,QAAA,CAAI,oBAAkB,CAAI,CAAC,cAC3BZ,IAAA,OAAAY,QAAA,CACKN,QAAQ,CAACO,GAAG,CAACI,OAAO,eACjBf,KAAA,OAAAU,QAAA,EAAuBK,OAAO,CAACC,IAAI,CAACH,IAAI,CAAC,KAAG,CAACE,OAAO,CAACH,KAAK,CAACC,IAAI,GAAtDE,OAAO,CAACD,GAAmD,CACvE,CAAC,CACF,CAAC,EACA,CAAC,cAEVd,KAAA,YAAAU,QAAA,eACIZ,IAAA,OAAAY,QAAA,CAAI,oBAAkB,CAAI,CAAC,cAC3BZ,IAAA,OAAAY,QAAA,CACKL,SAAS,CAACM,GAAG,CAACM,QAAQ,eACnBjB,KAAA,OAAAU,QAAA,EAAwBO,QAAQ,CAACC,OAAO,CAAC,aAAW,CAACD,QAAQ,CAACE,MAAM,GAA3DF,QAAQ,CAACH,GAAuD,CAC5E,CAAC,CACF,CAAC,EACA,CAAC,EACT,CAAC,CAEd,CAAC,CAED,cAAe,CAAAb,mBAAmB,CAalC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}