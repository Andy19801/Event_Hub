{"ast":null,"code":"import { combineReducers, applyMiddleware, createStore } from 'redux';\nimport { thunk } from 'redux-thunk';\nimport counterReducer from '../features/counter/counterSlice';\nimport { adminReducer } from '../features/admin/adminReducer';\n\n// Combine reducers\nconst rootReducer = combineReducers({\n  admin: adminReducer\n  // other reducers\n});\n\n// Create store\nconst store = createStore(rootReducer, applyMiddleware(thunk));\nexport default store;\n\n// import { configureStore } from '@reduxjs/toolkit';\n// import authReducer from '../features/auth/authSlice';\n// import counterReducer from '../features/counter/counterSlice';\n// import adminReducer from '../features/admin/adminSlice'; // Admin slice\n// import eventOwnerReducer from '../features/eventOwner/eventOwnerSlice'; // Event owner slice\n// import userReducer from '../features/user/userSlice'; // User slice\n\n// // Configure the Redux store\n// export const store = configureStore({\n//   reducer: {\n//     auth: authReducer,           // Manages authentication state\n//     counter: counterReducer,     // Manages counter state\n//     admin: adminReducer,         // Manages admin-related state\n//     eventOwner: eventOwnerReducer, // Manages event owner-related state\n//     user: userReducer,           // Manages user-related state\n//   },\n// });\n\n// export default store;\n\n// import { configureStore } from '@reduxjs/toolkit';\n// import authReducer from '../features/auth/authSlice';\n// import counterReducer from '../features/counter/counterSlice';\n\n// // Configure the Redux store\n// export const store = configureStore({\n//   reducer: {\n//     auth: authReducer,  // Manages authentication state, including user info, token, and actions for login, logout, and profile management\n//     counter: counterReducer,  // Manages counter state and related actions\n//   },\n// });\n\n// export default store;","map":{"version":3,"names":["combineReducers","applyMiddleware","createStore","thunk","counterReducer","adminReducer","rootReducer","admin","store"],"sources":["E:/Final Year project/Event Hub/Frontend/abhijeetproject/src/app/store.js"],"sourcesContent":["import { combineReducers, applyMiddleware, createStore } from 'redux';\r\nimport { thunk } from 'redux-thunk';\r\n\r\nimport counterReducer from '../features/counter/counterSlice';\r\nimport { adminReducer } from '../features/admin/adminReducer';\r\n\r\n// Combine reducers\r\nconst rootReducer = combineReducers({\r\n    admin: adminReducer,\r\n    // other reducers\r\n});\r\n\r\n// Create store\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n\r\n\r\n\r\n\r\n\r\n// import { configureStore } from '@reduxjs/toolkit';\r\n// import authReducer from '../features/auth/authSlice';\r\n// import counterReducer from '../features/counter/counterSlice';\r\n// import adminReducer from '../features/admin/adminSlice'; // Admin slice\r\n// import eventOwnerReducer from '../features/eventOwner/eventOwnerSlice'; // Event owner slice\r\n// import userReducer from '../features/user/userSlice'; // User slice\r\n\r\n// // Configure the Redux store\r\n// export const store = configureStore({\r\n//   reducer: {\r\n//     auth: authReducer,           // Manages authentication state\r\n//     counter: counterReducer,     // Manages counter state\r\n//     admin: adminReducer,         // Manages admin-related state\r\n//     eventOwner: eventOwnerReducer, // Manages event owner-related state\r\n//     user: userReducer,           // Manages user-related state\r\n//   },\r\n// });\r\n\r\n// export default store;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { configureStore } from '@reduxjs/toolkit';\r\n// import authReducer from '../features/auth/authSlice';\r\n// import counterReducer from '../features/counter/counterSlice';\r\n\r\n\r\n// // Configure the Redux store\r\n// export const store = configureStore({\r\n//   reducer: {\r\n//     auth: authReducer,  // Manages authentication state, including user info, token, and actions for login, logout, and profile management\r\n//     counter: counterReducer,  // Manages counter state and related actions\r\n//   },\r\n// });\r\n\r\n// export default store;\r\n\r\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,eAAe,EAAEC,WAAW,QAAQ,OAAO;AACrE,SAASC,KAAK,QAAQ,aAAa;AAEnC,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,SAASC,YAAY,QAAQ,gCAAgC;;AAE7D;AACA,MAAMC,WAAW,GAAGN,eAAe,CAAC;EAChCO,KAAK,EAAEF;EACP;AACJ,CAAC,CAAC;;AAEF;AACA,MAAMG,KAAK,GAAGN,WAAW,CAACI,WAAW,EAAEL,eAAe,CAACE,KAAK,CAAC,CAAC;AAE9D,eAAeK,KAAK;;AAMpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAUA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}