{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  events: [],\n  bookings: [],\n  userProfile: {\n    name: '',\n    email: '',\n    mobile: ''\n  },\n  loading: false,\n  error: null\n};\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    searchEvents: (state, action) => {\n      const {\n        area,\n        city,\n        filters\n      } = action.payload;\n      // Add logic to filter events based on area, city, and any other fields\n      state.events = state.events.filter(event => {\n        const matchesArea = area ? event.area === area : true;\n        const matchesCity = city ? event.city === city : true;\n        const matchesFilters = Object.keys(filters).every(key => event[key] === filters[key]);\n        return matchesArea && matchesCity && matchesFilters;\n      });\n    },\n    checkTicketAvailability: (state, action) => {\n      const eventId = action.payload;\n      const event = state.events.find(event => event.id === eventId);\n      return event ? event.tickets : [];\n    },\n    makeBooking: (state, action) => {\n      const bookingDetails = action.payload;\n      state.bookings.push(bookingDetails);\n    },\n    viewBookings: (state, action) => {\n      state.bookings = action.payload;\n    },\n    updateProfile: (state, action) => {\n      state.userProfile = {\n        ...state.userProfile,\n        ...action.payload\n      };\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    }\n  }\n});\n\n// Export actions\nexport const {\n  searchEvents,\n  checkTicketAvailability,\n  makeBooking,\n  viewBookings,\n  updateProfile,\n  setLoading,\n  setError\n} = userSlice.actions;\n\n// Export the reducer\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","events","bookings","userProfile","name","email","mobile","loading","error","userSlice","reducers","searchEvents","state","action","area","city","filters","payload","filter","event","matchesArea","matchesCity","matchesFilters","Object","keys","every","key","checkTicketAvailability","eventId","find","id","tickets","makeBooking","bookingDetails","push","viewBookings","updateProfile","setLoading","setError","actions","reducer"],"sources":["E:/Final Year project/Event Hub/Frontend/abhijeetproject/src/features/user/userSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  events: [],\r\n  bookings: [],\r\n  userProfile: {\r\n    name: '',\r\n    email: '',\r\n    mobile: '',\r\n  },\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    searchEvents: (state, action) => {\r\n      const { area, city, filters } = action.payload;\r\n      // Add logic to filter events based on area, city, and any other fields\r\n      state.events = state.events.filter(event => {\r\n        const matchesArea = area ? event.area === area : true;\r\n        const matchesCity = city ? event.city === city : true;\r\n        const matchesFilters = Object.keys(filters).every(key => event[key] === filters[key]);\r\n        return matchesArea && matchesCity && matchesFilters;\r\n      });\r\n    },\r\n    checkTicketAvailability: (state, action) => {\r\n      const eventId = action.payload;\r\n      const event = state.events.find(event => event.id === eventId);\r\n      return event ? event.tickets : [];\r\n    },\r\n    makeBooking: (state, action) => {\r\n      const bookingDetails = action.payload;\r\n      state.bookings.push(bookingDetails);\r\n    },\r\n    viewBookings: (state, action) => {\r\n      state.bookings = action.payload;\r\n    },\r\n    updateProfile: (state, action) => {\r\n      state.userProfile = { ...state.userProfile, ...action.payload };\r\n    },\r\n    setLoading: (state, action) => {\r\n      state.loading = action.payload;\r\n    },\r\n    setError: (state, action) => {\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// Export actions\r\nexport const {\r\n  searchEvents,\r\n  checkTicketAvailability,\r\n  makeBooking,\r\n  viewBookings,\r\n  updateProfile,\r\n  setLoading,\r\n  setError,\r\n} = userSlice.actions;\r\n\r\n// Export the reducer\r\nexport default userSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,EAAE;EACVC,QAAQ,EAAE,EAAE;EACZC,WAAW,EAAE;IACXC,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE;EACV,CAAC;EACDC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGV,WAAW,CAAC;EAC5BK,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZU,QAAQ,EAAE;IACRC,YAAY,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/B,MAAM;QAAEC,IAAI;QAAEC,IAAI;QAAEC;MAAQ,CAAC,GAAGH,MAAM,CAACI,OAAO;MAC9C;MACAL,KAAK,CAACX,MAAM,GAAGW,KAAK,CAACX,MAAM,CAACiB,MAAM,CAACC,KAAK,IAAI;QAC1C,MAAMC,WAAW,GAAGN,IAAI,GAAGK,KAAK,CAACL,IAAI,KAAKA,IAAI,GAAG,IAAI;QACrD,MAAMO,WAAW,GAAGN,IAAI,GAAGI,KAAK,CAACJ,IAAI,KAAKA,IAAI,GAAG,IAAI;QACrD,MAAMO,cAAc,GAAGC,MAAM,CAACC,IAAI,CAACR,OAAO,CAAC,CAACS,KAAK,CAACC,GAAG,IAAIP,KAAK,CAACO,GAAG,CAAC,KAAKV,OAAO,CAACU,GAAG,CAAC,CAAC;QACrF,OAAON,WAAW,IAAIC,WAAW,IAAIC,cAAc;MACrD,CAAC,CAAC;IACJ,CAAC;IACDK,uBAAuB,EAAEA,CAACf,KAAK,EAAEC,MAAM,KAAK;MAC1C,MAAMe,OAAO,GAAGf,MAAM,CAACI,OAAO;MAC9B,MAAME,KAAK,GAAGP,KAAK,CAACX,MAAM,CAAC4B,IAAI,CAACV,KAAK,IAAIA,KAAK,CAACW,EAAE,KAAKF,OAAO,CAAC;MAC9D,OAAOT,KAAK,GAAGA,KAAK,CAACY,OAAO,GAAG,EAAE;IACnC,CAAC;IACDC,WAAW,EAAEA,CAACpB,KAAK,EAAEC,MAAM,KAAK;MAC9B,MAAMoB,cAAc,GAAGpB,MAAM,CAACI,OAAO;MACrCL,KAAK,CAACV,QAAQ,CAACgC,IAAI,CAACD,cAAc,CAAC;IACrC,CAAC;IACDE,YAAY,EAAEA,CAACvB,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACV,QAAQ,GAAGW,MAAM,CAACI,OAAO;IACjC,CAAC;IACDmB,aAAa,EAAEA,CAACxB,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACT,WAAW,GAAG;QAAE,GAAGS,KAAK,CAACT,WAAW;QAAE,GAAGU,MAAM,CAACI;MAAQ,CAAC;IACjE,CAAC;IACDoB,UAAU,EAAEA,CAACzB,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACL,OAAO,GAAGM,MAAM,CAACI,OAAO;IAChC,CAAC;IACDqB,QAAQ,EAAEA,CAAC1B,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACJ,KAAK,GAAGK,MAAM,CAACI,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EACXN,YAAY;EACZgB,uBAAuB;EACvBK,WAAW;EACXG,YAAY;EACZC,aAAa;EACbC,UAAU;EACVC;AACF,CAAC,GAAG7B,SAAS,CAAC8B,OAAO;;AAErB;AACA,eAAe9B,SAAS,CAAC+B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}