{"ast":null,"code":"import React from'react';import'./App.css';import{BrowserRouter,Routes,Route,Navigate}from'react-router-dom';import Header from'./components/Header/Header';import Home from'./components/Home/Home';import About from'./components/About/About';import Ourservice from'./components/Ourservice/Ourservice';import Gallary from'./components/Gallary/Gallary';import Review from'./components/Review/Review';import Contact from'./components/Contact/Contact';import Order from'./components/Order/Order';import ProtectedRoute from'./main/ProtectedRoute';// Custom ProtectedRoute Component\nimport Login from'./main/Login/Login';import Signin from'./main/Signin/Signin';import{useSelector}from'react-redux';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// Access the authToken from Redux store\nconst authToken=useSelector(state=>state.auth.token);// Assuming you have a proper auth slice, not counter\nconst isLoggedIn=!!authToken;// Convert authToken to a boolean (true if exists)\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"app\",children:/*#__PURE__*/_jsxs(BrowserRouter,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Home,{})}),/*#__PURE__*/_jsx(Route,{path:\"/about\",element:/*#__PURE__*/_jsx(About,{})}),/*#__PURE__*/_jsx(Route,{path:\"/ourservice\",element:/*#__PURE__*/_jsx(Ourservice,{})}),/*#__PURE__*/_jsx(Route,{path:\"/gallary\",element:/*#__PURE__*/_jsx(Gallary,{})}),/*#__PURE__*/_jsx(Route,{path:\"/review\",element:/*#__PURE__*/_jsx(Review,{})}),/*#__PURE__*/_jsx(Route,{path:\"/contact\",element:/*#__PURE__*/_jsx(Contact,{})}),/*#__PURE__*/_jsx(Route,{path:\"/order\",element:/*#__PURE__*/_jsx(ProtectedRoute,{isLoggedIn:isLoggedIn,children:/*#__PURE__*/_jsx(Order,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Login,{})}),/*#__PURE__*/_jsx(Route,{path:\"/signin\",element:/*#__PURE__*/_jsx(Signin,{})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/\"})})]})]})});}export default App;// import React from 'react';\n// import './App.css';\n// import { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\n// import Header from './components/Header/Header';\n// import Home from './components/Home/Home';\n// import About from './components/About/About';\n// import Ourservice from './components/Ourservice/Ourservice';\n// import Gallary from './components/Gallary/Gallary';\n// import Review from './components/Review/Review';\n// import Contact from './components/Contact/Contact';\n// import Order from './components/Order/Order';\n// import ProtectedRoute from './main/ProtectedRoute';\n// import Login from './main/Login/Login';\n// import Signin from './main/Signin/Signin';\n// import { useSelector } from 'react-redux';\n// function App() {\n//   // Access the authToken from Redux store\n//   const authToken = useSelector((state) => state.counter.token); // Accessing token from counter slice\n//   const isLoggedIn = !!authToken; // Convert authToken to a boolean value (true if token exists, false otherwise)\n//   return (\n//     <div className=\"app\">\n//       <BrowserRouter>\n//         {/* Header component will be visible on all pages */}\n//         <Header />\n//         <Routes>\n//           {/* Public Routes */}\n//           <Route path=\"/\" element={<Home />} />\n//           <Route path=\"/about\" element={<About />} />\n//           <Route path=\"/ourservice\" element={<Ourservice />} />\n//           <Route path=\"/gallary\" element={<Gallary />} />\n//           <Route path=\"/review\" element={<Review />} />\n//           <Route path=\"/contact\" element={<Contact />} />\n//           {/* Protected Route - Only accessible if user is logged in */}\n//           <Route\n//             path=\"/order\"\n//             element={isLoggedIn ? <Order /> : <Navigate to=\"/login\" />}`\n//           />\n//           {/* Authentication Routes */}\n//           <Route path=\"/login\" element={<Login />} />\n//           <Route path=\"/signin\" element={<Signin />} />\n//           {/* Catch-all for undefined routes */}\n//           <Route path=\"*\" element={<Navigate to=\"/\" />} />\n//         </Routes>\n//       </BrowserRouter>\n//     </div>\n//   );\n// }\n// export default App;","map":{"version":3,"names":["React","BrowserRouter","Routes","Route","Navigate","Header","Home","About","Ourservice","Gallary","Review","Contact","Order","ProtectedRoute","Login","Signin","useSelector","jsx","_jsx","jsxs","_jsxs","App","authToken","state","auth","token","isLoggedIn","className","children","path","element","to"],"sources":["G:/Event Event Hub/Frontend/abhijeetproject/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport Header from './components/Header/Header';\nimport Home from './components/Home/Home';\nimport About from './components/About/About';\nimport Ourservice from './components/Ourservice/Ourservice';\nimport Gallary from './components/Gallary/Gallary';\nimport Review from './components/Review/Review';\nimport Contact from './components/Contact/Contact';\nimport Order from './components/Order/Order';\nimport ProtectedRoute from './main/ProtectedRoute';  // Custom ProtectedRoute Component\nimport Login from './main/Login/Login';\nimport Signin from './main/Signin/Signin';\nimport { useSelector } from 'react-redux';\n\nfunction App() {\n  // Access the authToken from Redux store\n  const authToken = useSelector((state) => state.auth.token);  // Assuming you have a proper auth slice, not counter\n  const isLoggedIn = !!authToken;  // Convert authToken to a boolean (true if exists)\n\n  return (\n    <div className=\"app\">\n      <BrowserRouter>\n        {/* Header component will be visible on all pages */}\n        <Header />\n\n        <Routes>\n          {/* Public Routes */}\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/about\" element={<About />} />\n          <Route path=\"/ourservice\" element={<Ourservice />} />\n          <Route path=\"/gallary\" element={<Gallary />} />\n          <Route path=\"/review\" element={<Review />} />\n          <Route path=\"/contact\" element={<Contact />} />\n\n          {/* Protected Route */}\n          <Route \n            path=\"/order\" \n            element={<ProtectedRoute isLoggedIn={isLoggedIn}><Order /></ProtectedRoute>} \n          />\n\n          {/* Authentication Routes */}\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/signin\" element={<Signin />} />\n\n          {/* Catch-all for undefined routes */}\n          <Route path=\"*\" element={<Navigate to=\"/\" />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React from 'react';\n// import './App.css';\n// import { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\n// import Header from './components/Header/Header';\n// import Home from './components/Home/Home';\n// import About from './components/About/About';\n// import Ourservice from './components/Ourservice/Ourservice';\n// import Gallary from './components/Gallary/Gallary';\n// import Review from './components/Review/Review';\n// import Contact from './components/Contact/Contact';\n// import Order from './components/Order/Order';\n// import ProtectedRoute from './main/ProtectedRoute';\n// import Login from './main/Login/Login';\n// import Signin from './main/Signin/Signin';\n// import { useSelector } from 'react-redux';\n\n// function App() {\n//   // Access the authToken from Redux store\n//   const authToken = useSelector((state) => state.counter.token); // Accessing token from counter slice\n//   const isLoggedIn = !!authToken; // Convert authToken to a boolean value (true if token exists, false otherwise)\n\n//   return (\n//     <div className=\"app\">\n//       <BrowserRouter>\n//         {/* Header component will be visible on all pages */}\n//         <Header />\n\n//         <Routes>\n//           {/* Public Routes */}\n//           <Route path=\"/\" element={<Home />} />\n//           <Route path=\"/about\" element={<About />} />\n//           <Route path=\"/ourservice\" element={<Ourservice />} />\n//           <Route path=\"/gallary\" element={<Gallary />} />\n//           <Route path=\"/review\" element={<Review />} />\n//           <Route path=\"/contact\" element={<Contact />} />\n\n//           {/* Protected Route - Only accessible if user is logged in */}\n//           <Route\n//             path=\"/order\"\n//             element={isLoggedIn ? <Order /> : <Navigate to=\"/login\" />}`\n//           />\n\n//           {/* Authentication Routes */}\n//           <Route path=\"/login\" element={<Login />} />\n//           <Route path=\"/signin\" element={<Signin />} />\n\n//           {/* Catch-all for undefined routes */}\n//           <Route path=\"*\" element={<Navigate to=\"/\" />} />\n//         </Routes>\n//       </BrowserRouter>\n//     </div>\n//   );\n// }\n\n// export default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}