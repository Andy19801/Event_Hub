{"ast":null,"code":"import React,{useState}from'react';import{Link,useNavigate}from'react-router-dom';import{ToastContainer,toast}from'react-toastify';// Assuming react-toastify is used for notifications\nimport'react-toastify/dist/ReactToastify.css';// Import the CSS file for react-toastify\nimport'./Signin.css';// Import the CSS file for styling\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Signin=()=>{const[signupInfo,setSignupInfo]=useState({name:'',email:'',password:''});const navigate=useNavigate();const handleChange=e=>{const{name,value}=e.target;setSignupInfo(prevInfo=>({...prevInfo,[name]:value}));};const handleSignup=async e=>{e.preventDefault();const{name,email,password}=signupInfo;// Validate inputs\nif(!name||!email||!password){return toast.error('Name, email, and password are required');}try{const response=await fetch('http://localhost:3000/api/auth/signup',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(signupInfo)});const result=await response.json();const{success,message,error}=result;if(success){toast.success(message);setTimeout(()=>navigate('/login'),1000);}else if(error){var _error$details$;const details=error===null||error===void 0?void 0:(_error$details$=error.details[0])===null||_error$details$===void 0?void 0:_error$details$.message;toast.error(details||message);}else{toast.error(message);}}catch(err){toast.error(err.message||'An error occurred');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"signin-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Sign Up\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSignup,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",placeholder:\"Enter your name...\",value:signupInfo.name,onChange:handleChange,autoFocus:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",placeholder:\"Enter your email...\",value:signupInfo.email,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",placeholder:\"Enter your password...\",value:signupInfo.password,onChange:handleChange})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Sign Up\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Already have an account? \",/*#__PURE__*/_jsx(Link,{to:\"/login\",children:\"Login\"})]})]}),/*#__PURE__*/_jsx(ToastContainer,{})]});};export default Signin;// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './Signin.css'; // Import the CSS file for styling\n// const Signin = () => {\n//     const [formData, setFormData] = useState({\n//         name: '',\n//         email: '',\n//         password: '',\n//     });\n//     const navigate = useNavigate();\n//     const handleChange = (e) => {\n//         const { name, value } = e.target;\n//         setFormData({\n//             ...formData,\n//             [name]: value,\n//         });\n//     };\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             // Sending the signup data to the backend API\n//             const response = await fetch('http://localhost:5000/api/auth/signup', {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//                 body: JSON.stringify(formData),\n//             });\n//             if (!response.ok) {\n//                 throw new Error(`HTTP error! status: ${response.status}`);\n//             }\n//             const data = await response.json();\n//             if (response.ok) {\n//                 // Redirect to login page on successful signup\n//                 navigate('/login');\n//             } else {\n//                 // Handle signup errors here\n//                 console.error('Signup error:', data.message);\n//                 // Optionally, you can display the error message to the user\n//             }\n//         } catch (error) {\n//             console.error('An error occurred:', error.message);\n//         }\n//     };\n//     return (\n//         <div className=\"signup-page\">\n//             <h1>Sign Up</h1>\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"inputBox\">\n//                     <label>\n//                         Name:\n//                         <input\n//                             type=\"text\"\n//                             name=\"name\"\n//                             value={formData.name}\n//                             onChange={handleChange}\n//                             required\n//                         />\n//                     </label>\n//                 </div>\n//                 <div className=\"inputBox\">\n//                     <label>\n//                         Email Address:\n//                         <input\n//                             type=\"email\"\n//                             name=\"email\"\n//                             value={formData.email}\n//                             onChange={handleChange}\n//                             required\n//                         />\n//                     </label>\n//                 </div>\n//                 <div className=\"inputBox\">\n//                     <label>\n//                         Password:\n//                         <input\n//                             type=\"password\"\n//                             name=\"password\"\n//                             value={formData.password}\n//                             onChange={handleChange}\n//                             required\n//                         />\n//                     </label>\n//                 </div>\n//                 <div className=\"inputBox\">\n//                     <button type=\"submit\" className=\"submit-btn\">Sign Up</button>\n//                 </div>\n//                 <p>Already have an account? <a href=\"/login\">Login</a></p>\n//             </form>\n//         </div>\n//     );\n// };\n// export default Signin;","map":{"version":3,"names":["React","useState","Link","useNavigate","ToastContainer","toast","jsx","_jsx","jsxs","_jsxs","Signin","signupInfo","setSignupInfo","name","email","password","navigate","handleChange","e","value","target","prevInfo","handleSignup","preventDefault","error","response","fetch","method","headers","body","JSON","stringify","result","json","success","message","setTimeout","_error$details$","details","err","className","children","onSubmit","htmlFor","type","placeholder","onChange","autoFocus","to"],"sources":["G:/Event Event Hub/Frontend/abhijeetproject/src/main/Signin/Signin.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify'; // Assuming react-toastify is used for notifications\r\nimport 'react-toastify/dist/ReactToastify.css'; // Import the CSS file for react-toastify\r\nimport './Signin.css'; // Import the CSS file for styling\r\n\r\nconst Signin = () => {\r\n    const [signupInfo, setSignupInfo] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setSignupInfo(prevInfo => ({\r\n            ...prevInfo,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const handleSignup = async (e) => {\r\n        e.preventDefault();\r\n        const { name, email, password } = signupInfo;\r\n\r\n        // Validate inputs\r\n        if (!name || !email || !password) {\r\n            return toast.error('Name, email, and password are required');\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:3000/api/auth/signup', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(signupInfo)\r\n            });\r\n            const result = await response.json();\r\n            const { success, message, error } = result;\r\n\r\n            if (success) {\r\n                toast.success(message);\r\n                setTimeout(() => navigate('/login'), 1000);\r\n            } else if (error) {\r\n                const details = error?.details[0]?.message;\r\n                toast.error(details || message);\r\n            } else {\r\n                toast.error(message);\r\n            }\r\n        } catch (err) {\r\n            toast.error(err.message || 'An error occurred');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='signin-container'>\r\n            <h1>Sign Up</h1>\r\n            <form onSubmit={handleSignup}>\r\n                <div className='input-group'>\r\n                    <label htmlFor='name'>Name</label>\r\n                    <input\r\n                        type='text'\r\n                        name='name'\r\n                        placeholder='Enter your name...'\r\n                        value={signupInfo.name}\r\n                        onChange={handleChange}\r\n                        autoFocus\r\n                    />\r\n                </div>\r\n                <div className='input-group'>\r\n                    <label htmlFor='email'>Email</label>\r\n                    <input\r\n                        type='email'\r\n                        name='email'\r\n                        placeholder='Enter your email...'\r\n                        value={signupInfo.email}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className='input-group'>\r\n                    <label htmlFor='password'>Password</label>\r\n                    <input\r\n                        type='password'\r\n                        name='password'\r\n                        placeholder='Enter your password...'\r\n                        value={signupInfo.password}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <button type='submit'>Sign Up</button>\r\n                <p>Already have an account? <Link to=\"/login\">Login</Link></p>\r\n            </form>\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Signin;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import './Signin.css'; // Import the CSS file for styling\r\n\r\n// const Signin = () => {\r\n//     const [formData, setFormData] = useState({\r\n//         name: '',\r\n//         email: '',\r\n//         password: '',\r\n//     });\r\n\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setFormData({\r\n//             ...formData,\r\n//             [name]: value,\r\n//         });\r\n//     };\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             // Sending the signup data to the backend API\r\n//             const response = await fetch('http://localhost:5000/api/auth/signup', {\r\n//                 method: 'POST',\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//                 body: JSON.stringify(formData),\r\n//             });\r\n\r\n//             if (!response.ok) {\r\n//                 throw new Error(`HTTP error! status: ${response.status}`);\r\n//             }\r\n\r\n//             const data = await response.json();\r\n//             if (response.ok) {\r\n//                 // Redirect to login page on successful signup\r\n//                 navigate('/login');\r\n//             } else {\r\n//                 // Handle signup errors here\r\n//                 console.error('Signup error:', data.message);\r\n//                 // Optionally, you can display the error message to the user\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('An error occurred:', error.message);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"signup-page\">\r\n//             <h1>Sign Up</h1>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <div className=\"inputBox\">\r\n//                     <label>\r\n//                         Name:\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             name=\"name\"\r\n//                             value={formData.name}\r\n//                             onChange={handleChange}\r\n//                             required\r\n//                         />\r\n//                     </label>\r\n//                 </div>\r\n//                 <div className=\"inputBox\">\r\n//                     <label>\r\n//                         Email Address:\r\n//                         <input\r\n//                             type=\"email\"\r\n//                             name=\"email\"\r\n//                             value={formData.email}\r\n//                             onChange={handleChange}\r\n//                             required\r\n//                         />\r\n//                     </label>\r\n//                 </div>\r\n//                 <div className=\"inputBox\">\r\n//                     <label>\r\n//                         Password:\r\n//                         <input\r\n//                             type=\"password\"\r\n//                             name=\"password\"\r\n//                             value={formData.password}\r\n//                             onChange={handleChange}\r\n//                             required\r\n//                         />\r\n//                     </label>\r\n//                 </div>\r\n//                 <div className=\"inputBox\">\r\n//                     <button type=\"submit\" className=\"submit-btn\">Sign Up</button>\r\n//                 </div>\r\n//                 <p>Already have an account? <a href=\"/login\">Login</a></p>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Signin;\r\n"],"mappings":"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CAC1B,CAAC,EACD,CAAC,cACNR,KAAA,QAAK+B,SAAS,CAAC,aAAa,CAAAC,QAAA,eACxBlC,IAAA,UAAOoC,OAAO,CAAC,UAAU,CAAAF,QAAA,CAAC,UAAQ,CAAO,CAAC,cAC1ClC,IAAA,UACIqC,IAAI,CAAC,UAAU,CACf/B,IAAI,CAAC,UAAU,CACfgC,WAAW,CAAC,wBAAwB,CACpC1B,KAAK,CAAER,UAAU,CAACI,QAAS,CAC3B+B,QAAQ,CAAE7B,YAAa,CAC1B,CAAC,EACD,CAAC,cACNV,IAAA,WAAQqC,IAAI,CAAC,QAAQ,CAAAH,QAAA,CAAC,SAAO,CAAQ,CAAC,cACtChC,KAAA,MAAAgC,QAAA,EAAG,2BAAyB,cAAAlC,IAAA,CAACL,IAAI,EAAC8C,EAAE,CAAC,QAAQ,CAAAP,QAAA,CAAC,OAAK,CAAM,CAAC,EAAG,CAAC,EAC5D,CAAC,cACPlC,IAAA,CAACH,cAAc,GAAE,CAAC,EACjB,CAAC,CAEd,CAAC,CAED,cAAe,CAAAM,MAAM,CAqBrB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}