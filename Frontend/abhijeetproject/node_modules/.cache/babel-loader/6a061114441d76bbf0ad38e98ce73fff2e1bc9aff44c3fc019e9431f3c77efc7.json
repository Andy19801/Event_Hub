{"ast":null,"code":"var _jsxFileName = \"G:\\\\event\\\\Frontend\\\\abhijeetproject\\\\src\\\\main\\\\Login\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Swal from 'sweetalert2'; // Import SweetAlert\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toggle_true_and_false_on_login } from '../../component/CounterComponent'; // Update the import path as per your project structure\nimport './Login.css'; // Import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const count = useSelector(state => state.counter.value);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [isChecked, setIsChecked] = useState(false); // State to track checkbox status\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleCheckboxChange = e => {\n    setIsChecked(e.target.checked);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log('hii', count);\n\n    // Check if the checkbox is checked\n    if (!isChecked) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Agreement Error',\n        text: 'Please agree to the terms of use & privacy policy.'\n      });\n      return; // Stop further execution\n    }\n\n    // Check for empty input fields\n    if (!formData.email || !formData.password) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Empty Fields',\n        text: 'Please fill in all fields.'\n      });\n      return; // Stop further execution\n    }\n\n    // Regular expression for password validation\n    const passwordRegex = /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n    if (!passwordRegex.test(formData.password)) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Password Error',\n        text: 'Password must be at least 8 characters long and contain at least one alphabet, one numeric character, and one special character.'\n      });\n      return; // Stop further execution\n    }\n    let em = formData.email.slice(-10);\n    if (formData.email.length < 12 || em !== '@gmail.com') {\n      // Use SweetAlert for email validation alert\n      Swal.fire({\n        icon: 'error',\n        title: 'Email Error',\n        text: 'Email must be a valid Gmail address.'\n      });\n      return; // Stop further execution\n    }\n    try {\n      const response = await axios.post('http://localhost:8000/login', formData);\n      console.log('API response:', response.data);\n      if (response.data) {\n        Swal.fire({\n          icon: 'success',\n          title: 'Login Successful',\n          text: 'Login successful.'\n        });\n        dispatch(toggle_true_and_false_on_login(true));\n        navigate('/');\n      } else {\n        Swal.fire({\n          icon: 'warning',\n          title: 'Login Failed',\n          text: 'Something went wrong...'\n        });\n      }\n    } catch (error) {\n      console.error('Error submitting form:', error);\n      Swal.fire({\n        icon: 'error',\n        title: 'Login Error',\n        text: 'An error occurred while trying to log in. Please try again later.'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginsignup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginsignup-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"loginsignup-fields\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email Address\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginsignup-agree\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"agree\",\n            id: \"agree\",\n            checked: isChecked,\n            onChange: handleCheckboxChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"agree\",\n            children: \"By continuing, I agree to the terms of use & privacy policy.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !isChecked,\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"9JoLjgeEKwMK3xhzUHlCb40ZgCs=\", false, function () {\n  return [useSelector, useDispatch, useNavigate];\n});\n_c = Login;\nexport default Login;\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './Login.css'; // Import the CSS file for styling\n\n// const Login = () => {\n//     const [formData, setFormData] = useState({\n//         email: '',\n//         password: '',\n//     });\n\n//     const navigate = useNavigate();\n\n//     const handleChange = (e) => {\n//         const { name, value } = e.target;\n//         setFormData({\n//             ...formData,\n//             [name]: value,\n//         });\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             // Handle login logic here\n//             const response = await fetch('/api/auth/login', {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//                 body: JSON.stringify(formData),\n//             });\n\n//             const data = await response.json();\n//             if (response.ok) {\n//                 // Store the token in local storage or handle it accordingly\n//                 localStorage.setItem('token', data.token);\n//                 // Redirect to home2 page on successful login\n//                 navigate('/home2');\n//             } else {\n//                 // Handle login errors here\n//                 console.error('Login error:', data.message);\n//                 // Optionally, you can display the error message to the user\n//             }\n//         } catch (error) {\n//             console.error('An error occurred:', error);\n//         }\n//     };\n\n//     return (\n//         <div className=\"login-page\">\n//             <h1>Login</h1>\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"inputBox\">\n//                     <label>\n//                         Email Address:\n//                         <input\n//                             type=\"email\"\n//                             name=\"email\"\n//                             value={formData.email}\n//                             onChange={handleChange}\n//                             required\n//                         />\n//                     </label>\n//                 </div>\n//                 <div className=\"inputBox\">\n//                     <label>\n//                         Password:\n//                         <input\n//                             type=\"password\"\n//                             name=\"password\"\n//                             value={formData.password}\n//                             onChange={handleChange}\n//                             required\n//                         />\n//                     </label>\n//                 </div>\n//                 <div className=\"inputBox\">\n//                     <button type=\"submit\" className=\"submit-btn\">Login</button>\n//                 </div>\n//                 <p>Don't have an account? <a href=\"/signin\">Sign Up</a></p>\n//             </form>\n//         </div>\n//     );\n// };\n\n// export default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","Swal","useNavigate","useSelector","useDispatch","toggle_true_and_false_on_login","jsxDEV","_jsxDEV","Login","_s","count","state","counter","value","dispatch","navigate","formData","setFormData","email","password","isChecked","setIsChecked","handleChange","e","name","target","handleCheckboxChange","checked","handleSubmit","preventDefault","console","log","fire","icon","title","text","passwordRegex","test","em","slice","length","response","post","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","id","htmlFor","disabled","_c","$RefreshReg$"],"sources":["G:/event/Frontend/abhijeetproject/src/main/Login/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2'; // Import SweetAlert\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { toggle_true_and_false_on_login } from '../../component/CounterComponent'; // Update the import path as per your project structure\r\nimport './Login.css'; // Import the CSS file for styling\r\n\r\nconst Login = () => {\r\n    const count = useSelector((state) => state.counter.value);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const [isChecked, setIsChecked] = useState(false); // State to track checkbox status\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleCheckboxChange = (e) => {\r\n        setIsChecked(e.target.checked);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        console.log('hii', count);\r\n\r\n        // Check if the checkbox is checked\r\n        if (!isChecked) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Agreement Error',\r\n                text: 'Please agree to the terms of use & privacy policy.',\r\n            });\r\n            return; // Stop further execution\r\n        }\r\n\r\n        // Check for empty input fields\r\n        if (!formData.email || !formData.password) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Empty Fields',\r\n                text: 'Please fill in all fields.',\r\n            });\r\n            return; // Stop further execution\r\n        }\r\n\r\n        // Regular expression for password validation\r\n        const passwordRegex = /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n        if (!passwordRegex.test(formData.password)) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Password Error',\r\n                text: 'Password must be at least 8 characters long and contain at least one alphabet, one numeric character, and one special character.',\r\n            });\r\n            return; // Stop further execution\r\n        }\r\n\r\n        let em = formData.email.slice(-10);\r\n        if (formData.email.length < 12 || em !== '@gmail.com') {\r\n            // Use SweetAlert for email validation alert\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Email Error',\r\n                text: 'Email must be a valid Gmail address.',\r\n            });\r\n            return; // Stop further execution\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:8000/login', formData);\r\n            console.log('API response:', response.data);\r\n\r\n            if (response.data) {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Login Successful',\r\n                    text: 'Login successful.',\r\n                });\r\n                dispatch(toggle_true_and_false_on_login(true));\r\n                navigate('/');\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'warning',\r\n                    title: 'Login Failed',\r\n                    text: 'Something went wrong...',\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error('Error submitting form:', error);\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Login Error',\r\n                text: 'An error occurred while trying to log in. Please try again later.',\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"loginsignup\">\r\n            <div className=\"loginsignup-container\">\r\n                <h1>Login</h1>\r\n                <form className=\"loginsignup-fields\" onSubmit={handleSubmit}>\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Email Address\"\r\n                        name=\"email\"\r\n                        value={formData.email}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        value={formData.password}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <div className=\"loginsignup-agree\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"agree\"\r\n                            id=\"agree\"\r\n                            checked={isChecked}\r\n                            onChange={handleCheckboxChange}\r\n                        />\r\n                        <label htmlFor=\"agree\">\r\n                            By continuing, I agree to the terms of use & privacy policy.\r\n                        </label>\r\n                    </div>\r\n                    <button type=\"submit\" disabled={!isChecked}>\r\n                        Continue\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import './Login.css'; // Import the CSS file for styling\r\n\r\n// const Login = () => {\r\n//     const [formData, setFormData] = useState({\r\n//         email: '',\r\n//         password: '',\r\n//     });\r\n\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setFormData({\r\n//             ...formData,\r\n//             [name]: value,\r\n//         });\r\n//     };\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             // Handle login logic here\r\n//             const response = await fetch('/api/auth/login', {\r\n//                 method: 'POST',\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//                 body: JSON.stringify(formData),\r\n//             });\r\n\r\n//             const data = await response.json();\r\n//             if (response.ok) {\r\n//                 // Store the token in local storage or handle it accordingly\r\n//                 localStorage.setItem('token', data.token);\r\n//                 // Redirect to home2 page on successful login\r\n//                 navigate('/home2');\r\n//             } else {\r\n//                 // Handle login errors here\r\n//                 console.error('Login error:', data.message);\r\n//                 // Optionally, you can display the error message to the user\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('An error occurred:', error);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"login-page\">\r\n//             <h1>Login</h1>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <div className=\"inputBox\">\r\n//                     <label>\r\n//                         Email Address:\r\n//                         <input\r\n//                             type=\"email\"\r\n//                             name=\"email\"\r\n//                             value={formData.email}\r\n//                             onChange={handleChange}\r\n//                             required\r\n//                         />\r\n//                     </label>\r\n//                 </div>\r\n//                 <div className=\"inputBox\">\r\n//                     <label>\r\n//                         Password:\r\n//                         <input\r\n//                             type=\"password\"\r\n//                             name=\"password\"\r\n//                             value={formData.password}\r\n//                             onChange={handleChange}\r\n//                             required\r\n//                         />\r\n//                     </label>\r\n//                 </div>\r\n//                 <div className=\"inputBox\">\r\n//                     <button type=\"submit\" className=\"submit-btn\">Login</button>\r\n//                 </div>\r\n//                 <p>Don't have an account? <a href=\"/signin\">Sign Up</a></p>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}