{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  value: false // Adjust as needed\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    toggle_true_and_false_on_login: (state, action) => {\n      state.value = action.payload;\n    }\n  }\n});\nexport const {\n  toggle_true_and_false_on_login\n} = counterSlice.actions;\nexport default counterSlice.reducer;\n\n// // counterSlice.js\n// import { createSlice } from '@reduxjs/toolkit';\n\n// export const counterSlice = createSlice({\n//   name: 'counter',\n//   initialState: {\n//     token: null,       // Initialize token as null\n//     isLoggedIn: false, // Initialize isLoggedIn as false\n//   },\n//   reducers: {\n//     login: (state, action) => {\n//       state.token = action.payload.token;  // Set token when logging in\n//       state.isLoggedIn = true;             // Set isLoggedIn to true on login\n//     },\n//     logout: (state) => {\n//       state.token = null;                  // Clear token on logout\n//       state.isLoggedIn = false;            // Set isLoggedIn to false on logout\n//     },\n//   },\n// });\n\n// // Export actions generated by createSlice\n// export const { login, logout } = counterSlice.actions;\n\n// // Export the reducer\n// export default counterSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","value","counterSlice","name","reducers","toggle_true_and_false_on_login","state","action","payload","actions","reducer"],"sources":["G:/Event Event Hub/Frontend/abhijeetproject/src/features/counter/counterSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  value: false, // Adjust as needed\r\n};\r\n\r\nconst counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    toggle_true_and_false_on_login: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { toggle_true_and_false_on_login } = counterSlice.actions;\r\nexport default counterSlice.reducer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // counterSlice.js\r\n// import { createSlice } from '@reduxjs/toolkit';\r\n\r\n// export const counterSlice = createSlice({\r\n//   name: 'counter',\r\n//   initialState: {\r\n//     token: null,       // Initialize token as null\r\n//     isLoggedIn: false, // Initialize isLoggedIn as false\r\n//   },\r\n//   reducers: {\r\n//     login: (state, action) => {\r\n//       state.token = action.payload.token;  // Set token when logging in\r\n//       state.isLoggedIn = true;             // Set isLoggedIn to true on login\r\n//     },\r\n//     logout: (state) => {\r\n//       state.token = null;                  // Clear token on logout\r\n//       state.isLoggedIn = false;            // Set isLoggedIn to false on logout\r\n//     },\r\n//   },\r\n// });\r\n\r\n// // Export actions generated by createSlice\r\n// export const { login, logout } = counterSlice.actions;\r\n\r\n// // Export the reducer\r\n// export default counterSlice.reducer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,KAAK,CAAE;AAChB,CAAC;AAED,MAAMC,YAAY,GAAGH,WAAW,CAAC;EAC/BI,IAAI,EAAE,SAAS;EACfH,YAAY;EACZI,QAAQ,EAAE;IACRC,8BAA8B,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACjDD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH;AAA+B,CAAC,GAAGH,YAAY,CAACO,OAAO;AACtE,eAAeP,YAAY,CAACQ,OAAO;;AAenC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}