{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import Swal from'sweetalert2';// SweetAlert for notifications\nimport{useNavigate}from'react-router-dom';import{useDispatch}from'react-redux';import{setCredentials}from'../../features/auth/authSlice';// Import the setCredentials action\nimport'./Login.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const dispatch=useDispatch();const navigate=useNavigate();const[formData,setFormData]=useState({email:'',password:'',role:'user'// default role is user\n});const[isChecked,setIsChecked]=useState(false);const[loading,setLoading]=useState(false);const handleChange=e=>{const{name,value}=e.target;setFormData(prevData=>({...prevData,[name]:value}));};const handleCheckboxChange=e=>{setIsChecked(e.target.checked);};const handleSubmit=async e=>{e.preventDefault();if(!isChecked){Swal.fire({icon:'error',title:'Agreement Error',text:'Please agree to the terms of use & privacy policy.'});return;}if(!formData.email||!formData.password){Swal.fire({icon:'error',title:'Empty Fields',text:'Please fill in both email and password fields.'});return;}const emailRegex=/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;if(!emailRegex.test(formData.email)){Swal.fire({icon:'error',title:'Email Error',text:'Please enter a valid email address.'});return;}setLoading(true);try{// Based on role, different APIs can be called (admin, event owner, or user)\nconst response=await axios.post(`http://localhost:3000/api/auth/${formData.role}-login`,formData);if(response.data.token){// Dispatch the setCredentials action with user and token\ndispatch(setCredentials({user:{name:response.data.name,email:response.data.email,role:formData.role},token:response.data.token}));Swal.fire({icon:'success',title:'Login Successful',text:`Logged in as ${formData.role}!`});// Redirect based on role\nif(formData.role==='admin'){navigate('/admin/dashboard');}else if(formData.role==='event-owner'){navigate('/event-owner/dashboard');}else{navigate('/');// Redirect to home for users\n}}else{Swal.fire({icon:'error',title:'Login Failed',text:'Invalid email or password.'});}}catch(error){Swal.fire({icon:'error',title:'Login Error',text:'An error occurred while trying to log in. Please try again later.'});console.error('Error logging in:',error);}finally{setLoading(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"loginsignup\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"loginsignup-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Login\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"loginsignup-fields\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email Address\",name:\"email\",value:formData.email,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",name:\"password\",value:formData.password,onChange:handleChange,required:true}),/*#__PURE__*/_jsxs(\"div\",{className:\"loginsignup-role\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"role\",children:\"Select Role:\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"role\",value:formData.role,onChange:handleChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"user\",children:\"User\"}),/*#__PURE__*/_jsx(\"option\",{value:\"event-owner\",children:\"Event Owner\"}),/*#__PURE__*/_jsx(\"option\",{value:\"admin\",children:\"Admin\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"loginsignup-agree\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",name:\"agree\",id:\"agree\",checked:isChecked,onChange:handleCheckboxChange}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"agree\",children:\"By continuing, I agree to the terms of use & privacy policy.\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!isChecked||loading,children:loading?'Loading...':'Continue'})]})]})});};export default Login;// import React, { useState } from 'react';\n// import axios from 'axios';\n// import Swal from 'sweetalert2';\n// import { useNavigate } from 'react-router-dom';\n// import { useDispatch } from 'react-redux';\n// import { setCredentials } from '../../features/auth/authSlice';\n// import './Login.css';\n// import { HiEye, HiEyeOff } from 'react-icons/hi';\n// const Login = () => {\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n//   const [formData, setFormData] = useState({ email: '', password: '' });\n//   const [isChecked, setIsChecked] = useState(false);\n//   const [passwordVisible, setPasswordVisible] = useState(false);\n//   const [loading, setLoading] = useState(false);\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData((prevData) => ({ ...prevData, [name]: value }));\n//   };\n//   const handleCheckboxChange = (e) => {\n//     setIsChecked(e.target.checked);\n//   };\n//   const togglePasswordVisibility = () => {\n//     setPasswordVisible(!passwordVisible);\n//   };\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!isChecked) {\n//       Swal.fire({\n//         icon: 'error',\n//         title: 'Agreement Error',\n//         text: 'Please agree to the terms of use & privacy policy.',\n//       });\n//       return;\n//     }\n//     if (!formData.email || !formData.password) {\n//       Swal.fire({\n//         icon: 'error',\n//         title: 'Empty Fields',\n//         text: 'Please fill in both email and password fields.',\n//       });\n//       return;\n//     }\n//     const passwordRegex = /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n//     if (!passwordRegex.test(formData.password)) {\n//       Swal.fire({\n//         icon: 'error',\n//         title: 'Password Error',\n//         text: 'Password must contain at least 8 characters, one letter, one number, and one special character.',\n//       });\n//       return;\n//     }\n//     const emailRegex = /^[a-zA-Z0-9._%+-]+@gmail\\.com$/;\n//     if (!emailRegex.test(formData.email)) {\n//       Swal.fire({\n//         icon: 'error',\n//         title: 'Email Error',\n//         text: 'Please enter a valid Gmail address.',\n//       });\n//       return;\n//     }\n//     setLoading(true);\n//     try {\n//       const response = await axios.post('http://localhost:3000/api/auth/login', formData);\n//       if (response.data.token) {\n//         dispatch(setCredentials({ user: { name: response.data.name, email: response.data.email }, token: response.data.token }));\n//         Swal.fire({\n//           icon: 'success',\n//           title: 'Login Successful',\n//           text: 'You have logged in successfully!',\n//         });\n//         navigate('/');\n//       } else {\n//         Swal.fire({\n//           icon: 'error',\n//           title: 'Login Failed',\n//           text: 'Invalid email or password.',\n//         });\n//       }\n//     } catch (error) {\n//       Swal.fire({\n//         icon: 'error',\n//         title: 'Login Error',\n//         text: 'An error occurred while trying to log in. Please try again later.',\n//       });\n//       console.error('Error logging in:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n//   return (\n//     <div className=\"loginsignup\">\n//       <div className=\"loginsignup-container\">\n//         <h1>Login</h1>\n//         <form className=\"loginsignup-fields\" onSubmit={handleSubmit}>\n//           <input\n//             type=\"email\"\n//             placeholder=\"Email Address\"\n//             name=\"email\"\n//             value={formData.email}\n//             onChange={handleChange}\n//             required\n//             aria-label=\"Email Address\"\n//           />\n//           <div className=\"password-container\">\n//             <input\n//               type={passwordVisible ? 'text' : 'password'}\n//               placeholder=\"Password\"\n//               name=\"password\"\n//               value={formData.password}\n//               onChange={handleChange}\n//               required\n//             />\n//             <button\n//               type=\"button\"\n//               className=\"eye-button\"\n//               onClick={togglePasswordVisibility}\n//               aria-label={passwordVisible ? 'Hide Password' : 'Show Password'}\n//             >\n//               {passwordVisible ? <HiEyeOff /> : <HiEye />}\n//             </button>\n//           </div>\n//           <div className=\"loginsignup-agree\">\n//             <input\n//               type=\"checkbox\"\n//               name=\"agree\"\n//               id=\"agree\"\n//               checked={isChecked}\n//               onChange={handleCheckboxChange}\n//             />\n//             <label htmlFor=\"agree\">\n//               By continuing, I agree to the terms of use & privacy policy.\n//             </label>\n//           </div>\n//           <button type=\"submit\" disabled={!isChecked || loading}>\n//             {loading ? 'Loading...' : 'Continue'}\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n// export default Login;","map":{"version":3,"names":["React","useState","axios","Swal","useNavigate","useDispatch","setCredentials","jsx","_jsx","jsxs","_jsxs","Login","dispatch","navigate","formData","setFormData","email","password","role","isChecked","setIsChecked","loading","setLoading","handleChange","e","name","value","target","prevData","handleCheckboxChange","checked","handleSubmit","preventDefault","fire","icon","title","text","emailRegex","test","response","post","data","token","user","error","console","className","children","onSubmit","type","placeholder","onChange","required","htmlFor","id","disabled"],"sources":["G:/Event Event Hub/Frontend/abhijeetproject/src/main/Login/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2'; // SweetAlert for notifications\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCredentials } from '../../features/auth/authSlice'; // Import the setCredentials action\r\nimport './Login.css';\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n    role: 'user', // default role is user\r\n  });\r\n\r\n  const [isChecked, setIsChecked] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    setIsChecked(e.target.checked);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!isChecked) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Agreement Error',\r\n        text: 'Please agree to the terms of use & privacy policy.',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!formData.email || !formData.password) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Empty Fields',\r\n        text: 'Please fill in both email and password fields.',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    if (!emailRegex.test(formData.email)) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Email Error',\r\n        text: 'Please enter a valid email address.',\r\n      });\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      // Based on role, different APIs can be called (admin, event owner, or user)\r\n      const response = await axios.post(`http://localhost:3000/api/auth/${formData.role}-login`, formData);\r\n\r\n      if (response.data.token) {\r\n        // Dispatch the setCredentials action with user and token\r\n        dispatch(\r\n          setCredentials({\r\n            user: { name: response.data.name, email: response.data.email, role: formData.role },\r\n            token: response.data.token,\r\n          })\r\n        );\r\n\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Login Successful',\r\n          text: `Logged in as ${formData.role}!`,\r\n        });\r\n\r\n        // Redirect based on role\r\n        if (formData.role === 'admin') {\r\n          navigate('/admin/dashboard');\r\n        } else if (formData.role === 'event-owner') {\r\n          navigate('/event-owner/dashboard');\r\n        } else {\r\n          navigate('/'); // Redirect to home for users\r\n        }\r\n      } else {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Login Failed',\r\n          text: 'Invalid email or password.',\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Login Error',\r\n        text: 'An error occurred while trying to log in. Please try again later.',\r\n      });\r\n      console.error('Error logging in:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"loginsignup\">\r\n      <div className=\"loginsignup-container\">\r\n        <h1>Login</h1>\r\n        <form className=\"loginsignup-fields\" onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email Address\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n\r\n          {/* Role selection dropdown */}\r\n          <div className=\"loginsignup-role\">\r\n            <label htmlFor=\"role\">Select Role:</label>\r\n            <select name=\"role\" value={formData.role} onChange={handleChange}>\r\n              <option value=\"user\">User</option>\r\n              <option value=\"event-owner\">Event Owner</option>\r\n              <option value=\"admin\">Admin</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"loginsignup-agree\">\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"agree\"\r\n              id=\"agree\"\r\n              checked={isChecked}\r\n              onChange={handleCheckboxChange}\r\n            />\r\n            <label htmlFor=\"agree\">\r\n              By continuing, I agree to the terms of use & privacy policy.\r\n            </label>\r\n          </div>\r\n\r\n          <button type=\"submit\" disabled={!isChecked || loading}>\r\n            {loading ? 'Loading...' : 'Continue'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import Swal from 'sweetalert2';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { useDispatch } from 'react-redux';\r\n// import { setCredentials } from '../../features/auth/authSlice';\r\n// import './Login.css';\r\n// import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n\r\n// const Login = () => {\r\n//   const dispatch = useDispatch();\r\n//   const navigate = useNavigate();\r\n\r\n//   const [formData, setFormData] = useState({ email: '', password: '' });\r\n//   const [isChecked, setIsChecked] = useState(false);\r\n//   const [passwordVisible, setPasswordVisible] = useState(false);\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n//   };\r\n\r\n//   const handleCheckboxChange = (e) => {\r\n//     setIsChecked(e.target.checked);\r\n//   };\r\n\r\n//   const togglePasswordVisibility = () => {\r\n//     setPasswordVisible(!passwordVisible);\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (!isChecked) {\r\n//       Swal.fire({\r\n//         icon: 'error',\r\n//         title: 'Agreement Error',\r\n//         text: 'Please agree to the terms of use & privacy policy.',\r\n//       });\r\n//       return;\r\n//     }\r\n\r\n//     if (!formData.email || !formData.password) {\r\n//       Swal.fire({\r\n//         icon: 'error',\r\n//         title: 'Empty Fields',\r\n//         text: 'Please fill in both email and password fields.',\r\n//       });\r\n//       return;\r\n//     }\r\n\r\n//     const passwordRegex = /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n//     if (!passwordRegex.test(formData.password)) {\r\n//       Swal.fire({\r\n//         icon: 'error',\r\n//         title: 'Password Error',\r\n//         text: 'Password must contain at least 8 characters, one letter, one number, and one special character.',\r\n//       });\r\n//       return;\r\n//     }\r\n\r\n//     const emailRegex = /^[a-zA-Z0-9._%+-]+@gmail\\.com$/;\r\n//     if (!emailRegex.test(formData.email)) {\r\n//       Swal.fire({\r\n//         icon: 'error',\r\n//         title: 'Email Error',\r\n//         text: 'Please enter a valid Gmail address.',\r\n//       });\r\n//       return;\r\n//     }\r\n\r\n//     setLoading(true);\r\n\r\n//     try {\r\n//       const response = await axios.post('http://localhost:3000/api/auth/login', formData);\r\n//       if (response.data.token) {\r\n//         dispatch(setCredentials({ user: { name: response.data.name, email: response.data.email }, token: response.data.token }));\r\n\r\n//         Swal.fire({\r\n//           icon: 'success',\r\n//           title: 'Login Successful',\r\n//           text: 'You have logged in successfully!',\r\n//         });\r\n\r\n//         navigate('/');\r\n//       } else {\r\n//         Swal.fire({\r\n//           icon: 'error',\r\n//           title: 'Login Failed',\r\n//           text: 'Invalid email or password.',\r\n//         });\r\n//       }\r\n//     } catch (error) {\r\n//       Swal.fire({\r\n//         icon: 'error',\r\n//         title: 'Login Error',\r\n//         text: 'An error occurred while trying to log in. Please try again later.',\r\n//       });\r\n//       console.error('Error logging in:', error);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"loginsignup\">\r\n//       <div className=\"loginsignup-container\">\r\n//         <h1>Login</h1>\r\n//         <form className=\"loginsignup-fields\" onSubmit={handleSubmit}>\r\n//           <input\r\n//             type=\"email\"\r\n//             placeholder=\"Email Address\"\r\n//             name=\"email\"\r\n//             value={formData.email}\r\n//             onChange={handleChange}\r\n//             required\r\n//             aria-label=\"Email Address\"\r\n//           />\r\n//           <div className=\"password-container\">\r\n//             <input\r\n//               type={passwordVisible ? 'text' : 'password'}\r\n//               placeholder=\"Password\"\r\n//               name=\"password\"\r\n//               value={formData.password}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//             <button\r\n//               type=\"button\"\r\n//               className=\"eye-button\"\r\n//               onClick={togglePasswordVisibility}\r\n//               aria-label={passwordVisible ? 'Hide Password' : 'Show Password'}\r\n//             >\r\n//               {passwordVisible ? <HiEyeOff /> : <HiEye />}\r\n//             </button>\r\n//           </div>\r\n//           <div className=\"loginsignup-agree\">\r\n//             <input\r\n//               type=\"checkbox\"\r\n//               name=\"agree\"\r\n//               id=\"agree\"\r\n//               checked={isChecked}\r\n//               onChange={handleCheckboxChange}\r\n//             />\r\n//             <label htmlFor=\"agree\">\r\n//               By continuing, I agree to the terms of use & privacy policy.\r\n//             </label>\r\n//           </div>\r\n//           <button type=\"submit\" disabled={!isChecked || loading}>\r\n//             {loading ? 'Loading...' : 'Continue'}\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,IAAI,KAAM,aAAa,CAAE;AAChC,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,WAAW,KAAQ,aAAa,CACzC,OAASC,cAAc,KAAQ,+BAA+B,CAAE;AAChE,MAAO,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErB,KAAM,CAAAC,KAAK,CAAGA,CAAA,GAAM,CAClB,KAAM,CAAAC,QAAQ,CAAGP,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAQ,QAAQ,CAAGT,WAAW,CAAC,CAAC,CAE9B,KAAM,CAACU,QAAQ,CAAEC,WAAW,CAAC,CAAGd,QAAQ,CAAC,CACvCe,KAAK,CAAE,EAAE,CACTC,QAAQ,CAAE,EAAE,CACZC,IAAI,CAAE,MAAQ;AAChB,CAAC,CAAC,CAEF,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGnB,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACoB,OAAO,CAAEC,UAAU,CAAC,CAAGrB,QAAQ,CAAC,KAAK,CAAC,CAE7C,KAAM,CAAAsB,YAAY,CAAIC,CAAC,EAAK,CAC1B,KAAM,CAAEC,IAAI,CAAEC,KAAM,CAAC,CAAGF,CAAC,CAACG,MAAM,CAChCZ,WAAW,CAAEa,QAAQ,GAAM,CACzB,GAAGA,QAAQ,CACX,CAACH,IAAI,EAAGC,KACV,CAAC,CAAC,CAAC,CACL,CAAC,CAED,KAAM,CAAAG,oBAAoB,CAAIL,CAAC,EAAK,CAClCJ,YAAY,CAACI,CAAC,CAACG,MAAM,CAACG,OAAO,CAAC,CAChC,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAP,CAAC,EAAK,CAChCA,CAAC,CAACQ,cAAc,CAAC,CAAC,CAElB,GAAI,CAACb,SAAS,CAAE,CACdhB,IAAI,CAAC8B,IAAI,CAAC,CACRC,IAAI,CAAE,OAAO,CACbC,KAAK,CAAE,iBAAiB,CACxBC,IAAI,CAAE,oDACR,CAAC,CAAC,CACF,OACF,CAEA,GAAI,CAACtB,QAAQ,CAACE,KAAK,EAAI,CAACF,QAAQ,CAACG,QAAQ,CAAE,CACzCd,IAAI,CAAC8B,IAAI,CAAC,CACRC,IAAI,CAAE,OAAO,CACbC,KAAK,CAAE,cAAc,CACrBC,IAAI,CAAE,gDACR,CAAC,CAAC,CACF,OACF,CAEA,KAAM,CAAAC,UAAU,CAAG,kDAAkD,CACrE,GAAI,CAACA,UAAU,CAACC,IAAI,CAACxB,QAAQ,CAACE,KAAK,CAAC,CAAE,CACpCb,IAAI,CAAC8B,IAAI,CAAC,CACRC,IAAI,CAAE,OAAO,CACbC,KAAK,CAAE,aAAa,CACpBC,IAAI,CAAE,qCACR,CAAC,CAAC,CACF,OACF,CAEAd,UAAU,CAAC,IAAI,CAAC,CAEhB,GAAI,CACF;AACA,KAAM,CAAAiB,QAAQ,CAAG,KAAM,CAAArC,KAAK,CAACsC,IAAI,CAAC,kCAAkC1B,QAAQ,CAACI,IAAI,QAAQ,CAAEJ,QAAQ,CAAC,CAEpG,GAAIyB,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAE,CACvB;AACA9B,QAAQ,CACNN,cAAc,CAAC,CACbqC,IAAI,CAAE,CAAElB,IAAI,CAAEc,QAAQ,CAACE,IAAI,CAAChB,IAAI,CAAET,KAAK,CAAEuB,QAAQ,CAACE,IAAI,CAACzB,KAAK,CAAEE,IAAI,CAAEJ,QAAQ,CAACI,IAAK,CAAC,CACnFwB,KAAK,CAAEH,QAAQ,CAACE,IAAI,CAACC,KACvB,CAAC,CACH,CAAC,CAEDvC,IAAI,CAAC8B,IAAI,CAAC,CACRC,IAAI,CAAE,SAAS,CACfC,KAAK,CAAE,kBAAkB,CACzBC,IAAI,CAAE,gBAAgBtB,QAAQ,CAACI,IAAI,GACrC,CAAC,CAAC,CAEF;AACA,GAAIJ,QAAQ,CAACI,IAAI,GAAK,OAAO,CAAE,CAC7BL,QAAQ,CAAC,kBAAkB,CAAC,CAC9B,CAAC,IAAM,IAAIC,QAAQ,CAACI,IAAI,GAAK,aAAa,CAAE,CAC1CL,QAAQ,CAAC,wBAAwB,CAAC,CACpC,CAAC,IAAM,CACLA,QAAQ,CAAC,GAAG,CAAC,CAAE;AACjB,CACF,CAAC,IAAM,CACLV,IAAI,CAAC8B,IAAI,CAAC,CACRC,IAAI,CAAE,OAAO,CACbC,KAAK,CAAE,cAAc,CACrBC,IAAI,CAAE,4BACR,CAAC,CAAC,CACJ,CACF,CAAE,MAAOQ,KAAK,CAAE,CACdzC,IAAI,CAAC8B,IAAI,CAAC,CACRC,IAAI,CAAE,OAAO,CACbC,KAAK,CAAE,aAAa,CACpBC,IAAI,CAAE,mEACR,CAAC,CAAC,CACFS,OAAO,CAACD,KAAK,CAAC,mBAAmB,CAAEA,KAAK,CAAC,CAC3C,CAAC,OAAS,CACRtB,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,mBACEd,IAAA,QAAKsC,SAAS,CAAC,aAAa,CAAAC,QAAA,cAC1BrC,KAAA,QAAKoC,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eACpCvC,IAAA,OAAAuC,QAAA,CAAI,OAAK,CAAI,CAAC,cACdrC,KAAA,SAAMoC,SAAS,CAAC,oBAAoB,CAACE,QAAQ,CAAEjB,YAAa,CAAAgB,QAAA,eAC1DvC,IAAA,UACEyC,IAAI,CAAC,OAAO,CACZC,WAAW,CAAC,eAAe,CAC3BzB,IAAI,CAAC,OAAO,CACZC,KAAK,CAAEZ,QAAQ,CAACE,KAAM,CACtBmC,QAAQ,CAAE5B,YAAa,CACvB6B,QAAQ,MACT,CAAC,cACF5C,IAAA,UACEyC,IAAI,CAAC,UAAU,CACfC,WAAW,CAAC,UAAU,CACtBzB,IAAI,CAAC,UAAU,CACfC,KAAK,CAAEZ,QAAQ,CAACG,QAAS,CACzBkC,QAAQ,CAAE5B,YAAa,CACvB6B,QAAQ,MACT,CAAC,cAGF1C,KAAA,QAAKoC,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BvC,IAAA,UAAO6C,OAAO,CAAC,MAAM,CAAAN,QAAA,CAAC,cAAY,CAAO,CAAC,cAC1CrC,KAAA,WAAQe,IAAI,CAAC,MAAM,CAACC,KAAK,CAAEZ,QAAQ,CAACI,IAAK,CAACiC,QAAQ,CAAE5B,YAAa,CAAAwB,QAAA,eAC/DvC,IAAA,WAAQkB,KAAK,CAAC,MAAM,CAAAqB,QAAA,CAAC,MAAI,CAAQ,CAAC,cAClCvC,IAAA,WAAQkB,KAAK,CAAC,aAAa,CAAAqB,QAAA,CAAC,aAAW,CAAQ,CAAC,cAChDvC,IAAA,WAAQkB,KAAK,CAAC,OAAO,CAAAqB,QAAA,CAAC,OAAK,CAAQ,CAAC,EAC9B,CAAC,EACN,CAAC,cAENrC,KAAA,QAAKoC,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCvC,IAAA,UACEyC,IAAI,CAAC,UAAU,CACfxB,IAAI,CAAC,OAAO,CACZ6B,EAAE,CAAC,OAAO,CACVxB,OAAO,CAAEX,SAAU,CACnBgC,QAAQ,CAAEtB,oBAAqB,CAChC,CAAC,cACFrB,IAAA,UAAO6C,OAAO,CAAC,OAAO,CAAAN,QAAA,CAAC,8DAEvB,CAAO,CAAC,EACL,CAAC,cAENvC,IAAA,WAAQyC,IAAI,CAAC,QAAQ,CAACM,QAAQ,CAAE,CAACpC,SAAS,EAAIE,OAAQ,CAAA0B,QAAA,CACnD1B,OAAO,CAAG,YAAY,CAAG,UAAU,CAC9B,CAAC,EACL,CAAC,EACJ,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAV,KAAK,CA0CpignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}