{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  count: 0 // Initial counter value\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: state => {\n      state.count += 1; // Increment the counter\n    },\n    decrement: state => {\n      state.count -= 1; // Decrement the counter\n    },\n    reset: state => {\n      state.count = 0; // Reset the counter to 0\n    },\n    toggleTrueFalseOnLogin: (state, action) => {\n      state.value = action.payload; // Toggle value based on login status\n    }\n  }\n});\n\n// Export actions\nexport const {\n  increment,\n  decrement,\n  reset,\n  toggleTrueFalseOnLogin\n} = counterSlice.actions;\n\n// Export the reducer\nexport default counterSlice.reducer;\n\n// import { createSlice } from '@reduxjs/toolkit';\n\n// const initialState = {\n//   value: false, // Adjust as needed\n// };\n\n// const counterSlice = createSlice({\n//   name: 'counter',\n//   initialState,\n//   reducers: {\n//     toggle_true_and_false_on_login: (state, action) => {\n//       state.value = action.payload;\n//     },\n//   },\n// });\n\n// export const { toggle_true_and_false_on_login } = counterSlice.actions;\n// export default counterSlice.reducer;\n\n// // counterSlice.js\n// import { createSlice } from '@reduxjs/toolkit';\n\n// export const counterSlice = createSlice({\n//   name: 'counter',\n//   initialState: {\n//     token: null,       // Initialize token as null\n//     isLoggedIn: false, // Initialize isLoggedIn as false\n//   },\n//   reducers: {\n//     login: (state, action) => {\n//       state.token = action.payload.token;  // Set token when logging in\n//       state.isLoggedIn = true;             // Set isLoggedIn to true on login\n//     },\n//     logout: (state) => {\n//       state.token = null;                  // Clear token on logout\n//       state.isLoggedIn = false;            // Set isLoggedIn to false on logout\n//     },\n//   },\n// });\n\n// // Export actions generated by createSlice\n// export const { login, logout } = counterSlice.actions;\n\n// // Export the reducer\n// export default counterSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","count","counterSlice","name","reducers","increment","state","decrement","reset","toggleTrueFalseOnLogin","action","value","payload","actions","reducer"],"sources":["E:/Final Year project/Event Hub/Frontend/abhijeetproject/src/features/counter/counterSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  count: 0, // Initial counter value\r\n};\r\n\r\nconst counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    increment: (state) => {\r\n      state.count += 1; // Increment the counter\r\n    },\r\n    decrement: (state) => {\r\n      state.count -= 1; // Decrement the counter\r\n    },\r\n    reset: (state) => {\r\n      state.count = 0; // Reset the counter to 0\r\n    },\r\n    toggleTrueFalseOnLogin: (state, action) => {\r\n      state.value = action.payload; // Toggle value based on login status\r\n    },\r\n  },\r\n});\r\n\r\n// Export actions\r\nexport const { increment, decrement, reset, toggleTrueFalseOnLogin } = counterSlice.actions;\r\n\r\n// Export the reducer\r\nexport default counterSlice.reducer;\r\n\r\n\r\n\r\n\r\n// import { createSlice } from '@reduxjs/toolkit';\r\n\r\n// const initialState = {\r\n//   value: false, // Adjust as needed\r\n// };\r\n\r\n// const counterSlice = createSlice({\r\n//   name: 'counter',\r\n//   initialState,\r\n//   reducers: {\r\n//     toggle_true_and_false_on_login: (state, action) => {\r\n//       state.value = action.payload;\r\n//     },\r\n//   },\r\n// });\r\n\r\n// export const { toggle_true_and_false_on_login } = counterSlice.actions;\r\n// export default counterSlice.reducer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // counterSlice.js\r\n// import { createSlice } from '@reduxjs/toolkit';\r\n\r\n// export const counterSlice = createSlice({\r\n//   name: 'counter',\r\n//   initialState: {\r\n//     token: null,       // Initialize token as null\r\n//     isLoggedIn: false, // Initialize isLoggedIn as false\r\n//   },\r\n//   reducers: {\r\n//     login: (state, action) => {\r\n//       state.token = action.payload.token;  // Set token when logging in\r\n//       state.isLoggedIn = true;             // Set isLoggedIn to true on login\r\n//     },\r\n//     logout: (state) => {\r\n//       state.token = null;                  // Clear token on logout\r\n//       state.isLoggedIn = false;            // Set isLoggedIn to false on logout\r\n//     },\r\n//   },\r\n// });\r\n\r\n// // Export actions generated by createSlice\r\n// export const { login, logout } = counterSlice.actions;\r\n\r\n// // Export the reducer\r\n// export default counterSlice.reducer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,CAAC,CAAE;AACZ,CAAC;AAED,MAAMC,YAAY,GAAGH,WAAW,CAAC;EAC/BI,IAAI,EAAE,SAAS;EACfH,YAAY;EACZI,QAAQ,EAAE;IACRC,SAAS,EAAGC,KAAK,IAAK;MACpBA,KAAK,CAACL,KAAK,IAAI,CAAC,CAAC,CAAC;IACpB,CAAC;IACDM,SAAS,EAAGD,KAAK,IAAK;MACpBA,KAAK,CAACL,KAAK,IAAI,CAAC,CAAC,CAAC;IACpB,CAAC;IACDO,KAAK,EAAGF,KAAK,IAAK;MAChBA,KAAK,CAACL,KAAK,GAAG,CAAC,CAAC,CAAC;IACnB,CAAC;IACDQ,sBAAsB,EAAEA,CAACH,KAAK,EAAEI,MAAM,KAAK;MACzCJ,KAAK,CAACK,KAAK,GAAGD,MAAM,CAACE,OAAO,CAAC,CAAC;IAChC;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEP,SAAS;EAAEE,SAAS;EAAEC,KAAK;EAAEC;AAAuB,CAAC,GAAGP,YAAY,CAACW,OAAO;;AAE3F;AACA,eAAeX,YAAY,CAACY,OAAO;;AAKnC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAeA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}