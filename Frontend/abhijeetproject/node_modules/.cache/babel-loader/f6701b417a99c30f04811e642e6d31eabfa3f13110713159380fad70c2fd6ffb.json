{"ast":null,"code":"var _jsxFileName = \"G:\\\\Event Event Hub\\\\Frontend\\\\abhijeetproject\\\\src\\\\main\\\\Logout\\\\Logout.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toggle_true_and_false_on_login } from '../../features/counter/counterSlice.js'; // Correct action import\nimport { useNavigate } from 'react-router-dom';\nimport Swal from 'sweetalert2'; // SweetAlert for notifications\nimport './Logout.css'; // Optional: Add your custom styles if needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Logout = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const handleLogout = () => {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'Do you really want to logout?',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, logout',\n      cancelButtonText: 'No, cancel'\n    }).then(result => {\n      if (result.isConfirmed) {\n        localStorage.removeItem('authToken'); // Remove the token from local storage\n        dispatch(toggle_true_and_false_on_login(false)); // Dispatch action to update login state\n        Swal.fire({\n          icon: 'success',\n          title: 'Logged Out',\n          text: 'You have been logged out successfully.'\n        });\n        navigate('/login'); // Redirect to login page\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"logout-button\",\n    onClick: handleLogout,\n    children: \"Logout\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Logout, \"R1L93MxeLXzQXESpmjjjQSuQgvM=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = Logout;\nexport default Logout;\nvar _c;\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"names":["React","useDispatch","toggle_true_and_false_on_login","useNavigate","Swal","jsxDEV","_jsxDEV","Logout","_s","dispatch","navigate","handleLogout","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","localStorage","removeItem","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["G:/Event Event Hub/Frontend/abhijeetproject/src/main/Logout/Logout.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toggle_true_and_false_on_login } from '../../features/counter/counterSlice.js'; // Correct action import\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Swal from 'sweetalert2'; // SweetAlert for notifications\r\nimport './Logout.css'; // Optional: Add your custom styles if needed\r\n\r\nconst Logout = () => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogout = () => {\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: 'Do you really want to logout?',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes, logout',\r\n            cancelButtonText: 'No, cancel',\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                localStorage.removeItem('authToken'); // Remove the token from local storage\r\n                dispatch(toggle_true_and_false_on_login(false)); // Dispatch action to update login state\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Logged Out',\r\n                    text: 'You have been logged out successfully.',\r\n                });\r\n                navigate('/login'); // Redirect to login page\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <button className=\"logout-button\" onClick={handleLogout}>\r\n            Logout\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Logout;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,8BAA8B,QAAQ,wCAAwC,CAAC,CAAC;AACzF,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,IAAI,MAAM,aAAa,CAAC,CAAC;AAChC,OAAO,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IACvBP,IAAI,CAACQ,IAAI,CAAC;MACNC,KAAK,EAAE,eAAe;MACtBC,IAAI,EAAE,+BAA+B;MACrCC,IAAI,EAAE,SAAS;MACfC,gBAAgB,EAAE,IAAI;MACtBC,iBAAiB,EAAE,aAAa;MAChCC,gBAAgB,EAAE;IACtB,CAAC,CAAC,CAACC,IAAI,CAAEC,MAAM,IAAK;MAChB,IAAIA,MAAM,CAACC,WAAW,EAAE;QACpBC,YAAY,CAACC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC;QACtCd,QAAQ,CAACP,8BAA8B,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACjDE,IAAI,CAACQ,IAAI,CAAC;UACNG,IAAI,EAAE,SAAS;UACfF,KAAK,EAAE,YAAY;UACnBC,IAAI,EAAE;QACV,CAAC,CAAC;QACFJ,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;MACxB;IACJ,CAAC,CAAC;EACN,CAAC;EAED,oBACIJ,OAAA;IAAQkB,SAAS,EAAC,eAAe;IAACC,OAAO,EAAEd,YAAa;IAAAe,QAAA,EAAC;EAEzD;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEjB,CAAC;AAACtB,EAAA,CA/BID,MAAM;EAAA,QACSN,WAAW,EACXE,WAAW;AAAA;AAAA4B,EAAA,GAF1BxB,MAAM;AAiCZ,eAAeA,MAAM;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}