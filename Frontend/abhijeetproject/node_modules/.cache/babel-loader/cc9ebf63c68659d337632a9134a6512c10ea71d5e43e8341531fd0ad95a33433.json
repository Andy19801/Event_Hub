{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";export const counterSlice=createSlice({name:'counter',initialState:{value:false},reducers:{toggle_true_and_false_on_login:(state,action)=>{state.value=action.payload;}}});export const{toggle_true_and_false_on_login}=counterSlice.actions;export default counterSlice.reducer;// // counterSlice.js\n// import { createSlice } from '@reduxjs/toolkit';\n// export const counterSlice = createSlice({\n//   name: 'counter',\n//   initialState: {\n//     token: null,       // Initialize token as null\n//     isLoggedIn: false, // Initialize isLoggedIn as false\n//   },\n//   reducers: {\n//     login: (state, action) => {\n//       state.token = action.payload.token;  // Set token when logging in\n//       state.isLoggedIn = true;             // Set isLoggedIn to true on login\n//     },\n//     logout: (state) => {\n//       state.token = null;                  // Clear token on logout\n//       state.isLoggedIn = false;            // Set isLoggedIn to false on logout\n//     },\n//   },\n// });\n// // Export actions generated by createSlice\n// export const { login, logout } = counterSlice.actions;\n// // Export the reducer\n// export default counterSlice.reducer;","map":{"version":3,"names":["createSlice","counterSlice","name","initialState","value","reducers","toggle_true_and_false_on_login","state","action","payload","actions","reducer"],"sources":["G:/Event Event Hub/Frontend/abhijeetproject/src/features/counter/counterSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState :{\r\n  value: false,\r\n},\r\nreducers: {\r\n  toggle_true_and_false_on_login:(state,action)=>\r\n  {\r\n    state.value=action.payload\r\n  },\r\n},\r\n})\r\nexport const {toggle_true_and_false_on_login} = counterSlice.actions\r\nexport default counterSlice.reducer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // counterSlice.js\r\n// import { createSlice } from '@reduxjs/toolkit';\r\n\r\n// export const counterSlice = createSlice({\r\n//   name: 'counter',\r\n//   initialState: {\r\n//     token: null,       // Initialize token as null\r\n//     isLoggedIn: false, // Initialize isLoggedIn as false\r\n//   },\r\n//   reducers: {\r\n//     login: (state, action) => {\r\n//       state.token = action.payload.token;  // Set token when logging in\r\n//       state.isLoggedIn = true;             // Set isLoggedIn to true on login\r\n//     },\r\n//     logout: (state) => {\r\n//       state.token = null;                  // Clear token on logout\r\n//       state.isLoggedIn = false;            // Set isLoggedIn to false on logout\r\n//     },\r\n//   },\r\n// });\r\n\r\n// // Export actions generated by createSlice\r\n// export const { login, logout } = counterSlice.actions;\r\n\r\n// // Export the reducer\r\n// export default counterSlice.reducer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,MAAM,CAAAC,YAAY,CAAGD,WAAW,CAAC,CACtCE,IAAI,CAAE,SAAS,CACfC,YAAY,CAAE,CACdC,KAAK,CAAE,KACT,CAAC,CACDC,QAAQ,CAAE,CACRC,8BAA8B,CAACA,CAACC,KAAK,CAACC,MAAM,GAC5C,CACED,KAAK,CAACH,KAAK,CAACI,MAAM,CAACC,OAAO,CAC5B,CACF,CACA,CAAC,CAAC,CACF,MAAO,MAAM,CAACH,8BAA8B,CAAC,CAAGL,YAAY,CAACS,OAAO,CACpE,cAAe,CAAAT,YAAY,CAACU,OAAO,CAenC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}