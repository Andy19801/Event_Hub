{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import Swal from'sweetalert2';// Import SweetAlert\nimport{useNavigate}from'react-router-dom';import'./Signin.css';// Import the CSS file for styling\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Signin=()=>{const[formData,setFormData]=useState({name:'',email:'',password:''});const[isChecked,setIsChecked]=useState(false);// State to track checkbox status\nconst navigate=useNavigate();const handleChange=e=>{const{name,value}=e.target;setFormData({...formData,[name]:value});};const handleCheckboxChange=e=>{setIsChecked(e.target.checked);};const handleSubmit=async e=>{e.preventDefault();// Check if any of the input fields are empty\nif(!formData.name||!formData.email||!formData.password){Swal.fire({icon:'error',title:'Validation Error',text:'Please fill in all fields.'});return;}// Password validation\nconst passwordRegex=/^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,}$/;if(!passwordRegex.test(formData.password)){Swal.fire({icon:'error',title:'Validation Error',text:'Password must contain at least one alphabetic character, one digit, one special character, and be at least 8 characters long.'});return;}// Email validation\nconst emailRegex=/\\S+@\\S+\\.\\S+/;if(!emailRegex.test(formData.email)){Swal.fire({icon:'error',title:'Validation Error',text:'Please enter a valid email address.'});return;}try{const response=await axios.post('http://localhost:3000/api/auth/signin',formData);console.log('API response:',response.data);if(response.data){Swal.fire({icon:'success',title:'Registration Successful',text:'You have registered successfully.'});navigate('/login');// Redirect to login page or another route after successful registration\n}else{Swal.fire({icon:'warning',title:'Registration Failed',text:'Something went wrong...'});}}catch(error){console.error('Error submitting form:',error);Swal.fire({icon:'error',title:'Registration Error',text:'An error occurred while trying to register. Please try again later.'});}};return/*#__PURE__*/_jsx(\"div\",{className:\"loginsignup\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"loginsignup-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Register\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"loginsignup-fields\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Your Name\",name:\"name\",value:formData.name,onChange:handleChange}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email Address\",name:\"email\",value:formData.email,onChange:handleChange}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",name:\"password\",value:formData.password,onChange:handleChange}),/*#__PURE__*/_jsxs(\"p\",{className:\"loginsignup-login\",children:[\"Already have an account? \",/*#__PURE__*/_jsx(\"a\",{href:\"/login\",children:\"Login here\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"loginsignup-agree\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",name:\"agree\",id:\"agree\",checked:isChecked,onChange:handleCheckboxChange}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"agree\",children:\"By continuing, I agree to the terms of use & privacy policy.\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!isChecked,children:\"Register\"})]})]})});};export default Signin;// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './Signin.css'; // Import the CSS file for styling\n// const Signin = () => {\n//     const [formData, setFormData] = useState({\n//         name: '',\n//         email: '',\n//         password: '',\n//     });\n//     const navigate = useNavigate();\n//     const handleChange = (e) => {\n//         const { name, value } = e.target;\n//         setFormData({\n//             ...formData,\n//             [name]: value,\n//         });\n//     };\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             // Sending the signup data to the backend API\n//             const response = await fetch('http://localhost:5000/api/auth/signup', {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//                 body: JSON.stringify(formData),\n//             });\n//             if (!response.ok) {\n//                 throw new Error(`HTTP error! status: ${response.status}`);\n//             }\n//             const data = await response.json();\n//             if (response.ok) {\n//                 // Redirect to login page on successful signup\n//                 navigate('/login');\n//             } else {\n//                 // Handle signup errors here\n//                 console.error('Signup error:', data.message);\n//                 // Optionally, you can display the error message to the user\n//             }\n//         } catch (error) {\n//             console.error('An error occurred:', error.message);\n//         }\n//     };\n//     return (\n//         <div className=\"signup-page\">\n//             <h1>Sign Up</h1>\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"inputBox\">\n//                     <label>\n//                         Name:\n//                         <input\n//                             type=\"text\"\n//                             name=\"name\"\n//                             value={formData.name}\n//                             onChange={handleChange}\n//                             required\n//                         />\n//                     </label>\n//                 </div>\n//                 <div className=\"inputBox\">\n//                     <label>\n//                         Email Address:\n//                         <input\n//                             type=\"email\"\n//                             name=\"email\"\n//                             value={formData.email}\n//                             onChange={handleChange}\n//                             required\n//                         />\n//                     </label>\n//                 </div>\n//                 <div className=\"inputBox\">\n//                     <label>\n//                         Password:\n//                         <input\n//                             type=\"password\"\n//                             name=\"password\"\n//                             value={formData.password}\n//                             onChange={handleChange}\n//                             required\n//                         />\n//                     </label>\n//                 </div>\n//                 <div className=\"inputBox\">\n//                     <button type=\"submit\" className=\"submit-btn\">Sign Up</button>\n//                 </div>\n//                 <p>Already have an account? <a href=\"/login\">Login</a></p>\n//             </form>\n//         </div>\n//     );\n// };\n// export default Signin;\n//  solved the error","map":{"version":3,"names":["React","useState","axios","Swal","useNavigate","jsx","_jsx","jsxs","_jsxs","Signin","formData","setFormData","name","email","password","isChecked","setIsChecked","navigate","handleChange","e","value","target","handleCheckboxChange","checked","handleSubmit","preventDefault","fire","icon","title","text","passwordRegex","test","emailRegex","response","post","console","log","data","error","className","children","onSubmit","type","placeholder","onChange","href","id","htmlFor","disabled"],"sources":["G:/Event Event Hub/Frontend/abhijeetproject/src/main/Signin/Signin.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2'; // Import SweetAlert\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Signin.css'; // Import the CSS file for styling\r\n\r\nconst Signin = () => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const [isChecked, setIsChecked] = useState(false); // State to track checkbox status\r\n    const navigate = useNavigate();\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleCheckboxChange = (e) => {\r\n        setIsChecked(e.target.checked);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Check if any of the input fields are empty\r\n        if (!formData.name || !formData.email || !formData.password) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Validation Error',\r\n                text: 'Please fill in all fields.',\r\n            });\r\n            return;\r\n        }\r\n\r\n        // Password validation\r\n        const passwordRegex = /^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,}$/;\r\n        if (!passwordRegex.test(formData.password)) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Validation Error',\r\n                text: 'Password must contain at least one alphabetic character, one digit, one special character, and be at least 8 characters long.',\r\n            });\r\n            return;\r\n        }\r\n\r\n        // Email validation\r\n        const emailRegex = /\\S+@\\S+\\.\\S+/;\r\n        if (!emailRegex.test(formData.email)) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Validation Error',\r\n                text: 'Please enter a valid email address.',\r\n            });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:3000/api/auth/signin', formData);\r\n            console.log('API response:', response.data);\r\n            \r\n            if (response.data) {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Registration Successful',\r\n                    text: 'You have registered successfully.',\r\n                });\r\n                navigate('/login'); // Redirect to login page or another route after successful registration\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'warning',\r\n                    title: 'Registration Failed',\r\n                    text: 'Something went wrong...',\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error('Error submitting form:', error);\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Registration Error',\r\n                text: 'An error occurred while trying to register. Please try again later.',\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"loginsignup\">\r\n            <div className=\"loginsignup-container\">\r\n                <h1>Register</h1>\r\n                <form className=\"loginsignup-fields\" onSubmit={handleSubmit}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Your Name\"\r\n                        name=\"name\"\r\n                        value={formData.name}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Email Address\"\r\n                        name=\"email\"\r\n                        value={formData.email}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        value={formData.password}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <p className=\"loginsignup-login\">\r\n                        Already have an account? <a href=\"/login\">Login here</a>\r\n                    </p>\r\n                    <div className=\"loginsignup-agree\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"agree\"\r\n                            id=\"agree\"\r\n                            checked={isChecked}\r\n                            onChange={handleCheckboxChange}\r\n                        />\r\n                        <label htmlFor=\"agree\">\r\n                            By continuing, I agree to the terms of use & privacy policy.\r\n                        </label>\r\n                    </div>\r\n                    <button type=\"submit\" disabled={!isChecked}>\r\n                        Register\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Signin;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import './Signin.css'; // Import the CSS file for styling\r\n\r\n// const Signin = () => {\r\n//     const [formData, setFormData] = useState({\r\n//         name: '',\r\n//         email: '',\r\n//         password: '',\r\n//     });\r\n\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setFormData({\r\n//             ...formData,\r\n//             [name]: value,\r\n//         });\r\n//     };\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             // Sending the signup data to the backend API\r\n//             const response = await fetch('http://localhost:5000/api/auth/signup', {\r\n//                 method: 'POST',\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//                 body: JSON.stringify(formData),\r\n//             });\r\n\r\n//             if (!response.ok) {\r\n//                 throw new Error(`HTTP error! status: ${response.status}`);\r\n//             }\r\n\r\n//             const data = await response.json();\r\n//             if (response.ok) {\r\n//                 // Redirect to login page on successful signup\r\n//                 navigate('/login');\r\n//             } else {\r\n//                 // Handle signup errors here\r\n//                 console.error('Signup error:', data.message);\r\n//                 // Optionally, you can display the error message to the user\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('An error occurred:', error.message);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"signup-page\">\r\n//             <h1>Sign Up</h1>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <div className=\"inputBox\">\r\n//                     <label>\r\n//                         Name:\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             name=\"name\"\r\n//                             value={formData.name}\r\n//                             onChange={handleChange}\r\n//                             required\r\n//                         />\r\n//                     </label>\r\n//                 </div>\r\n//                 <div className=\"inputBox\">\r\n//                     <label>\r\n//                         Email Address:\r\n//                         <input\r\n//                             type=\"email\"\r\n//                             name=\"email\"\r\n//                             value={formData.email}\r\n//                             onChange={handleChange}\r\n//                             required\r\n//                         />\r\n//                     </label>\r\n//                 </div>\r\n//                 <div className=\"inputBox\">\r\n//                     <label>\r\n//                         Password:\r\n//                         <input\r\n//                             type=\"password\"\r\n//                             name=\"password\"\r\n//                             value={formData.password}\r\n//                             onChange={handleChange}\r\n//                             required\r\n//                         />\r\n//                     </label>\r\n//                 </div>\r\n//                 <div className=\"inputBox\">\r\n//                     <button type=\"submit\" className=\"submit-btn\">Sign Up</button>\r\n//                 </div>\r\n//                 <p>Already have an account? <a href=\"/login\">Login</a></p>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Signin;\r\n//  solved the error"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}